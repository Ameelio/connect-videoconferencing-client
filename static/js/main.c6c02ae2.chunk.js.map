{"version":3,"sources":["assets/logo.svg","redux/modules/staff.ts","redux/modules/inmate.ts","redux/modules/session.ts","utils/constants.ts","utils/Common.ts","api/Common.ts","typings/Common.ts","utils/Call.ts","utils/UI.ts","utils/Connection.ts","redux/modules/connections.ts","redux/modules/contact.ts","redux/helpers.ts","redux/modules/call.ts","redux/index.ts","redux/modules/facility.ts","redux/modules/socket.ts","redux/modules/group.ts","redux/modules/kiosk.ts","redux/modules/modal.ts","api/Session.ts","pages/Login/index.tsx","components/hocs/ProtectedRoute.tsx","components/Avatar/InitialsAvatar.tsx","components/Avatar/index.tsx","components/Avatar/Avatar.tsx","components/Menu/Menu.tsx","redux/selectors.ts","styles/styles.tsx","pages/LiveCall/RoomClient.ts","pages/LiveCall/VideoOverlay.tsx","components/LiveCall/Video/index.tsx","components/LiveCall/Video/Video.tsx","components/LiveCall/Audio/index.tsx","components/LiveCall/Audio/Audio.tsx","pages/LiveCall/VideoChat.tsx","pages/LiveCall/VideoSkeleton.tsx","components/Header/Header.tsx","components/calls/MessageDisplay.tsx","pages/LiveCall/index.tsx","components/calendar/CalendarView.tsx","pages/Calendar/index.tsx","hooks/useConnections.ts","components/Requests/ContactCell.tsx","components/Requests/InmateCell.tsx","components/Requests/ConnectionRequests.tsx","components/Header/index.tsx","pages/ConnectionRequests/index.tsx","pages/CallLogs/CallFilters.tsx","components/SearchCalls/SearchCallsTable.tsx","components/SearchCalls/SearchCalls.tsx","components/SearchCalls/index.tsx","pages/CallLogs/index.tsx","pages/Staff/CreateStaffForm.tsx","pages/Staff/index.tsx","pages/Inmates/index.tsx","components/Profile/Connections/ConnectionItem.tsx","components/Profile/Connections/ConnectionsList.tsx","components/Profile/ProfileHeader.tsx","components/Profile/Timeline/CallTimelineItem.tsx","components/Profile/Timeline/index.tsx","components/Profile/Timeline/CallTimeline.tsx","components/Profile/index.tsx","components/Profile/Profile.tsx","hooks/useCalls.ts","pages/Inmate/index.tsx","pages/Contact/index.tsx","components/Dashboard/MetricCard.tsx","components/charts/DonutChart.tsx","components/charts/LineChart.tsx","components/pdf/Logo.tsx","components/pdf/Header.tsx","components/pdf/SectionHeader.tsx","components/pdf/Icons.tsx","components/Dashboard/DailyReportCall.tsx","components/pdf/Footer.tsx","components/Dashboard/DailyReport.tsx","components/Dashboard/PDFDownloadButton.tsx","components/Dashboard/index.tsx","components/Dashboard/Dashboard.tsx","pages/Dashboard/index.tsx","components/Settings/CallHourSettings.tsx","components/Settings/KioskSettings.tsx","components/Settings/index.tsx","components/Settings/Settings.tsx","pages/Settings/index.tsx","pages/Recording/index.tsx","components/Requests/CallRequests.tsx","constants/Routes.ts","pages/CallRequests/index.tsx","constants/Call.ts","components/Modals/CancelCallModal/CancelCallModal.tsx","components/Modals/CancelCallModal/index.tsx","components/Modals/index.tsx","components/Modals/Modal.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["_defs","_path","_polygon","_polygon2","_path2","_polygon3","_polygon4","_path3","_path4","_path5","_path6","_path7","_path8","_path9","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","id","xmlns","viewBox","ref","className","d","points","ForwardRef","staffAdapter","createEntityAdapter","fetchStaff","createAsyncThunk","a","fetchAuthenticated","body","staff","data","results","updateStaff","args","method","JSON","stringify","user_id","userId","permissions","status","Error","changes","createStaff","email","role","initialState","getInitialState","loading","staffSlice","createSlice","name","reducers","staffSetAll","setAll","staffUpdateOne","updateOne","extraReducers","builder","addCase","fulfilled","state","action","addMany","payload","rejected","error","message","addOne","fetchInmates","actions","inmates","inmatesAdapter","inmatesSlice","inmatesAddMany","inmatesUpdate","console","log","SET_SESSION","SET_REDIRECT_URL","LOGOUT","SET_SESSION_STATUS","logout","type","setSession","setSessionStatus","user","firstName","lastName","staffPositions","authInfo","token","redirectUrl","sessionReducer","WeekdayMap","WEEKDAYS","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","DEFAULT_DURATION_MS","GRID_TO_SPAN_WIDTH","1","2","4","6","8","GRID_TO_VH_HEIGHT","CALL_ALERTS","genFullName","entity","onlyUnique","value","index","self","createCallOptionsParam","filters","options","scheduledStart","rangeStart","rangeEnd","push","snakeCase","map","x","encodeURIComponent","join","toQueryString","generateBgColor","label","BACKGROUND_COLORS","Math","abs","str","hash","charCodeAt","hashCode","notEmpty","undefined","VisitationType","groupBy","list","getKey","mustHave","result","reduce","previous","currentItem","group","forEach","isSubstring","candidate","main","toLowerCase","includes","callSlotToDateString","time","date","Date","setHours","hour","setMinutes","minute","toString","calcEndCallSlot","addMilliseconds","duration","mondayMorning","day","getDay","setDate","getDate","callsWithinPeriod","calls","start","end","filter","scheduledEnd","callsToDailyLogs","incarceratedPerson","getCallInmatesFullNames","visitors","getCallContactsFullNames","kiosks","kiosk","format","loadAllCallEntities","contactEnts","incPeopleEnts","kioskEnts","c","contacts","userIds","inmateIds","kioskId","description","enabled","groupId","loadCallEntities","getFirstNames","people","person","getVideoHandlerHostname","handler","host","port","getParticipantStreamId","participant","openNotificationWithIcon","notification","showToast","content","success","warning","info","loadAllConnectionEntities","connections","connection","inmateEnts","contact","inmate","inmateId","loadConnectionEntities","updateConnection","connectionId","fetchConnections","connectionsAdapter","connectionsSlice","pending","upsertMany","fetchContacts","fetchContactIdImages","images","contactsAdapter","contactsSlice","contactsAddMany","cleanCall","facilityId","statusDetails","toISOString","rating","averageRating","schedulerId","schedulerType","videoHandler","history","callsAdapter","fetchCalls","updateCallStatus","fetchCallMessages","messages","callsSlice","addMessage","callsActions","facilitiesAdapter","selectActiveFacility","facility","bodyCt","callTimes","fetchFacilities","Store","getState","session","fBody","facilities","dispatch","UPDATE_CALL_HOURS","updateCallTimes","oldCallSlots","newCallSlots","ids","slot","response","facilitiesSlice","selected","socketsSlice","setSocket","socket","cleanTree","children","child","fetchGroups","groupTrees","tree","groups","nodes","groupsAdapter","groupsSlice","_state","_action","kiosksAdapter","fetchKiosks","kiosksSlice","setSelected","modalsSlice","activeType","openModal","closeModal","createHashHistory","rootReducer","combineReducers","reducer","router","connectRouter","sockets","modals","configureStore","middleware","getDefaultMiddleware","concat","routerMiddleware","useAppDispatch","useDispatch","useAppSelector","useSelector","API_URL","process","fetchTimeout","fetchUrl","timeout","Promise","race","fetch","mode","_","reject","setTimeout","nodeResource","requestOptions","headers","Accept","Authorization","credentials","url","json","initializeSession","loginWithCredentials","cred","resolve","password","get","Content","Layout","connector","connect","TOAST_KEY","to","onFinish","values","direction","justify","Title","level","onFinishFailed","_errorInfo","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","htmlType","size","block","ProtectedRoute","redirectPath","isAuthenticated","authenticationPath","component","pathname","render","InitialsAvatar","style","backgroundColor","split","n","Avatar","fallback","src","width","height","preview","shape","Sider","SubMenu","AntdMenu","Menu","isLoggedIn","select","requestsCount","liveCallsCount","callRequestsCount","useState","collapsed","setCollapsed","useHistory","headerMenu","onClick","collapsible","onCollapse","overlay","align","DownOutlined","color","theme","defaultSelectedKeys","icon","PieChartOutlined","DesktopOutlined","count","UserAddOutlined","TeamOutlined","SettingOutlined","getSelectors","selectAllConnections","selectById","selectAll","selectInmateById","selectAllInmates","selectTotalInmates","selectTotal","selectInmateEntities","selectEntities","selectContactById","selectContactEntities","selectCallById","selectAllCalls","selectAllStaff","selectAllFacilities","selectKioskById","selectAllKiosks","selectKioskEntities","selectGroupEntities","getCallEntities","getCallsInfo","visitations","visitation","getCallInfo","callId","plainCall","selectLiveCalls","selectInmateCallsById","WRAPPER_STYLE","padding","CONTAINER_BORDER_RADIUS","borderRadius","FULL_WIDTH","BASE_CHART_COLORS","RoomClient","producerTransport","consumerTransport","device","consumers","producers","handlers","consume","emit","transport","on","callback","errback","dtlsParameters","request","transportId","producerTransportInfo","consumerTransportInfo","routerRtpCapabilities","loadDevice","createSendTransport","handleTransportConnect","createRecvTransport","rtpCapabilities","kind","rtpParameters","producerId","consumeResult","consumer","stream","consumerId","f","mediasoupClient","load","MediaStream","track","event","fn","off","close","producer","VideoOverlay","alerts","terminateCall","lockCall","muteCall","unmuteCall","isAudioOn","openChat","closeChat","chatCollapsed","emitAlert","selectedAlert","setSelectedAlert","menu","MessageFilled","alert","LockFilled","SettingFilled","AudioMutedOutlined","AudioOutlined","MessageOutlined","MoreOutlined","Text","visible","onOk","onCancel","Video","srcObject","isFadingOut","refVideo","useRef","setLoading","useEffect","current","addEventListener","opacity","Audio","muted","refAudio","Loader","tip","VideoChat","React","memo","isVisible","participantNames","isAuthed","setIsAuthed","rc","setRc","setStatus","inmateAudioPaused","setInmateAudioPaused","inmateVideoPaused","setInmateVideoPaused","contactAudioPaused","setContactAudioPaused","contactVideoPaused","setContactVideoPaused","remoteVideos","setRemoteVideos","remoteAudios","setRemoteAudios","joinRoom","useCallback","init","contents","then","rejection","connected","window","Debug","from","senderId","senderType","createdAt","remotes","paused","measuredRef","node","interval","setInterval","clearInterval","videoKeys","audioKeys","visibility","display","isInmate","isAudioPaused","isVideoPaused","autoPlay","VideoCameraOutlined","position","bottom","right","fontSize","terminate","VideoSkeleton","Ribbon","text","HEADER_STYLE","boxShadow","marginBottom","paddingLeft","paddingRight","alignItems","lineHeight","Header","subtitle","extra","paddingTop","paddingBottom","border","gutter","item","idx","MessageDisplay","strong","getDisplayName","OPTIONS","activeCallChat","setActiveCallChat","activeMessages","setActiveMessages","setChatCollapsed","grid","setGrid","frameVhHeight","setFrameVhHeight","page","setPage","freshCalls","setFreshCalls","messagesMap","messagesContainerRef","socketMap","setSocketMap","unmutedCallsMap","setUnmutedCalls","scroll","top","scrollHeight","left","behavior","newCalls","temp","newSocketClient","io","transports","curr","initialActiveChat","handleGridChange","onMessageReceived","defaultCurrent","defaultPageSize","onChange","pageSize","pageSizeOptions","option","e","total","showSizeChanger","onShowSizeChange","span","omit","find","findIndex","defaultCollapsed","reverseArrow","onSelect","v","Option","CalendarView","events","setEvents","contactNames","prev","cur","inmateNames","VisitationToEventInput","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","headerToolbar","center","initialView","editable","selectable","selectMirror","dayMaxEvents","weekends","businessHours","eventContent","timeText","eventClick","clickInfo","confirm","remove","useConnections","setConnections","baseConnections","requests","ContactCell","navigate","Link","InmateCell","inmateIdentification","dateOfBirth","ConnectionRequests","accept","dataSource","Column","dataIndex","profileImagePath","_text","danger","RequestsPage","setRequests","useConnectionRequests","handleConnectionUpdate","path","RangePicker","DatePicker","CallFiltersHeader","setDuration","setStartDate","setEndDate","unix","SearchCallsTable","isLoading","openCancelCallModal","charAt","toUpperCase","slice","FAMILY_IN_PERSON","FAMILY_IN_PERSON_NO_CONTACT","FAMILY_VIDEO_CALL","getVisitationLabel","CloseOutlined","EyeOutlined","renderButton","LABEL_TO_FILTER_MAP","SearchCalls","filteredLogs","setFilteredLogs","searchQuery","setSearchQuery","global","setGlobal","limit","offset","startDate","endDate","maxDuration","setMaxDuration","activeSearchFilter","setActiveSearchFilter","selectedStatusFilter","setSelectedStatusFilter","selectedVisitationType","delayedQuery","debounce","cancel","filteredCalls","some","filteredOptions","CALL_STATUS_FILTER_OPTIONS","VISITATION_TYPE_FILTER_OPTIONS","Group","compact","defaultValue","allowClear","minWidth","o","renderSelectFilter","Search","onSearch","logs","bindActionCreators","Select","CreateStaffForm","Form","useForm","form","SendOutlined","Table","modalType","setModalType","confirmLoading","setConfirmLoading","formData","setFormData","handleOk","record","mapDispatchToProps","filteredInmates","setFilteredInmates","columns","ConnectionItem","relationship","ConnectionsList","filteredConnections","setFilteredConnections","activeTab","setActiveTab","tabList","tab","activeTabKey","onTabChange","ProfileHeader","facilityName","persona","idImages","routes","breadcrumbName","frontId","frontIdFile","backId","backIdFile","selfieId","selfieIdFile","ghost","onBack","back","breadcrumb","column","bordered","quota","renderItems","CallTimelineItem","names","timestamp","recordingStatus","dot","ClockCircleOutlined","renderItem","CallTimeline","maxHeight","overflowY","Profile","useCallsWithStatus","setCalls","baseCalls","pendingCalls","InmatePage","match","params","inmateConnections","setInmateConnections","useInmateConnections","baseInmateCalls","useInmateCalls","ownProps","setIdImages","getContactImages","useContactConnections","MetricCard","suffix","DonutChart","chartData","labels","datasets","hoverBackgroundColor","COLOR","LineChart","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Logo","hex","fill","stroke","strokeWidth","styles","StyleSheet","create","container","flexDirection","justifyContent","header","extraColumn","alignSelf","detailColumn","fontWeight","fixed","paddingVertical","SectionHeader","CameraIcon","ContactIcon","PersonIcon","LogoIconBW","card","borderBottomStyle","borderBottomWidth","borderBottomColor","flexGrow","paddingHorizontal","headerText","row","rowFirstItem","flex","flexShrink","rowItem","itemTitle","textTransform","itemBody","marginRight","logoIcon","maxWidth","DailyReportCall","canViewDetails","footerText","Footer","pageNumber","totalPages","blockContainer","borderStyle","borderWidth","DailyReport","callBlocks","author","keywords","wrap","PDFDownloadButton","hasMounted","setHasMounted","document","fileName","Dashboard","totalInmates","lastUpdatedAt","isRefreshing","refresh","ratingsCount","setRatingsCount","callVolume","setCallVolume","lastUpdatedAtMin","setLastUpdatedAtMin","dailyScheduleCalls","setDailyScheduleCall","morning","evening","callsToday","differenceInMinutes","sortedKeys","sort","parseInt","now","thisMonday","startOfMonth","next","addWeeks","callsToWeeklyData","scheduleOptionsMenu","FilePdfOutlined","UnorderedListOutlined","filename","StarOutlined","toFixed","GlobalOutlined","DashboardPage","useCalls","setLastUpdatedAt","setIsRefreshing","getTime","endOfMonth","CallHourSettings","handleSave","ranges","setRanges","callSlots","setCallSlots","dateFormat","sorted","weekday","ct1","ct2","times","timeRanges","first","mapCallSlotsToTimeBlock","obj","r","parse","range","iterator","endTime","getHours","getMinutes","mapCallBlockToCallSlots","margin","minuteStep","use12Hours","moment","toDate","KioskSettings","groupEnts","floor","random","Settings","groupTree","handleCallHoursChange","defaultActiveKey","TabPane","treeData","defaultExpandAll","SettingsContainer","selectMessageByCallId","recordingPath","autoplay","controls","subTitle","layout","CallRequests","ROUTES","CalendarPage","ConnectionRequestsPage","handleCallUpdate","LogsPage","StaffPage","InmatesPage","InmateDetailPage","ContactPage","LiveVisitationsPage","SettingsPage","RecordingPage","DEFAULT_CANCELLATION_REASONS","CancelCallModal","cancelCall","reason","setReason","okText","rows","Modals","LOGIN_PATH","App","location","setIsAuthenticated","isInitingData","setIsInitingData","Sentry","dsn","integrations","Integrations","BrowserTracing","release","npm_package_version","tracesSampleRate","pendingCallsCount","setCount","callsWithStatus","useCallCountWithStatus","defaultProtectedRouteProps","allSettled","minHeight","exact","Login","route","Boolean","hostname","ReactDOM","StrictMode","store","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"oIAAIA,EAAOC,EAAOC,EAAUC,EAAWC,EAAQC,EAAWC,EAAWC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,E,yKAErH,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoB,EAAQC,EAAMC,GACrB,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQd,EAAyBU,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOxB,EAAS,CACtD6B,GAAI,cACJ,YAAa,cACbC,MAAO,6BACPC,QAAS,oBACTC,IAAKP,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DG,GAAIF,GACHD,GAAS,KAAMxC,IAAUA,EAAqB,gBAAoB,OAAQ,KAAmB,gBAAoB,QAAS,KAAM,6HAA8HC,IAAUA,EAAqB,gBAAoB,OAAQ,CAC1T8C,UAAW,QACXC,EAAG,0IACA9C,IAAaA,EAAwB,gBAAoB,UAAW,CACvE6C,UAAW,QACXE,OAAQ,wJACL9C,IAAcA,EAAyB,gBAAoB,UAAW,CACzE4C,UAAW,QACXE,OAAQ,4GACL7C,IAAWA,EAAsB,gBAAoB,OAAQ,CAChE2C,UAAW,QACXC,EAAG,oMACA3C,IAAcA,EAAyB,gBAAoB,UAAW,CACzE0C,UAAW,QACXE,OAAQ,oNACL3C,IAAcA,EAAyB,gBAAoB,UAAW,CACzEyC,UAAW,QACXE,OAAQ,sHACL1C,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEwC,UAAW,QACXC,EAAG,4GACAxC,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEuC,UAAW,QACXC,EAAG,yUACAvC,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEsC,UAAW,QACXC,EAAG,kTACAtC,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEqC,UAAW,QACXC,EAAG,wTACArC,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEoC,UAAW,QACXC,EAAG,oEACApC,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEmC,UAAW,QACXC,EAAG,qLACAnC,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEkC,UAAW,QACXC,EAAG,8KAIP,IAAIE,EAA0B,aAAiBb,G,GAChC,I,8BC3DFc,EAAeC,cAEfC,EAAaC,YAAiB,mBAAD,sBAAqB,8BAAAC,EAAA,sEAC1CC,GAAmB,gBADuB,cACvDC,EADuD,OAGvDC,EAASD,EAAKE,KAAiCC,QAHQ,kBAKtDF,GALsD,4CAQlDG,EAAcP,YACzB,oBADyC,uCAEzC,WAAOQ,GAAP,SAAAP,EAAA,sEACqBC,GAAmB,SAAU,CAC9CO,OAAQ,OACRN,KAAMO,KAAKC,UAAU,CACnBC,QAASJ,EAAKK,OACdC,YAAaN,EAAKM,gBALxB,UASsB,MATtB,OASWC,OATX,sBAUU,IAAIC,MAAM,6CAVpB,gCAYS,CAAEH,OAAQL,EAAKK,OAAQI,QAAS,CAAEH,YAAaN,EAAKM,eAZ7D,2CAFyC,uDAkB9BI,EAAclB,YACzB,oBADyC,uCAEzC,WAAOQ,GAAP,iBAAAP,EAAA,sEACqBC,GAAmB,SAAU,CAC9CO,OAAQ,OACRN,KAAMO,KAAKC,UAAU,CACnBQ,MAAOX,EAAKW,MACZC,KAAMZ,EAAKY,KACXN,YAAaN,EAAKM,gBANxB,cACQX,EADR,OASQC,EAAQD,EAAKE,KATrB,kBAWSD,GAXT,2CAFyC,uDAoBrCiB,EAA2BxB,EAAayB,gBAAgB,CAC5DC,SAAS,IAGEC,EAAaC,YAAY,CACpCC,KAAM,QACNL,aAAcA,EACdM,SAAU,CACRC,YAAa/B,EAAagC,OAC1BC,eAAgBjC,EAAakC,WAE/BC,cAAe,SAACC,GACdA,EAAQC,QAAQnC,EAAWoC,WAAW,SAACC,EAAOC,GAAR,OACpCxC,EAAayC,QAAQF,EAAOC,EAAOE,YAErCN,EAAQC,QAAQnC,EAAWyC,UAAU,SAACJ,EAAOC,GAAR,mBAAC,eACjCD,GADgC,IAEnCK,MAAOJ,EAAOI,MAAMC,aAEtBT,EAAQC,QAAQ3B,EAAY4B,WAAW,SAACC,EAAOC,GAAR,OACrCxC,EAAakC,UAAUK,EAAO,CAC5B/C,GAAIgD,EAAOE,QAAQ1B,OACnBI,QAASoB,EAAOE,QAAQtB,aAG5BgB,EAAQC,QAAQ3B,EAAYiC,UAAU,SAACJ,EAAOC,GAAR,mBAAC,eAClCD,GADiC,IAEpCK,MAAOJ,EAAOI,MAAMC,aAEtBT,EAAQC,QAAQhB,EAAYiB,WAAW,SAACC,EAAOC,GAAR,OACrCxC,EAAa8C,OAAOP,EAAOC,EAAOE,YAEpCN,EAAQC,QAAQhB,EAAYsB,UAAU,SAACJ,EAAOC,GAAR,mBAAC,eAClCD,GADiC,IAEpCK,MAAOJ,EAAOI,MAAMC,gBClFbE,GDuFepB,EAAWqB,QCvFX7C,YAC1B,uBAD0C,sBAE1C,8BAAAC,EAAA,sEACqBC,GAAmB,WADxC,cACQC,EADR,OAGQ2C,EAAW3C,EAAKE,KAAiCC,QAHzD,kBAKSwC,GALT,6CASWC,EAAiBjD,cAEjBkD,EAAevB,YAAY,CACtCC,KAAM,UACNL,aAAc0B,EAAezB,kBAC7BK,SAAU,CACRsB,eAAgBF,EAAeT,QAC/BY,cAAeH,EAAehB,WAEhCC,cAAe,SAACC,GACdA,EAAQC,QAAQU,EAAaT,WAAW,SAACC,EAAOC,GAAR,OACtCU,EAAelB,OAAOO,EAAOC,EAAOE,YAEtCN,EAAQC,QAAQU,EAAaJ,UAAU,SAACJ,EAAOC,GAAR,OACrCc,QAAQC,IAAI,eClBZC,GDuBwBL,EAAaH,QCvBvB,oBACdS,EAAmB,wBACnBC,EAAS,cACTC,GAAqB,0BA0BdC,GAAS,WACpB,MAAO,CACLC,KAAMH,IAIGI,GAAa,SAACpB,GAIzB,MAAO,CACLmB,KAAML,EACNd,YAWSqB,GAAmB,SAAC7C,GAC/B,MAAO,CACL2C,KAAMF,GACNjB,QAASxB,IAIPM,GAA6B,CACjCwC,KAAM,CACJxE,GAAI,GACJyE,UAAW,GACXC,SAAU,GACV5C,MAAO,GACP6C,eAAgB,IAElBC,SAAU,CACR5E,GAAI,GACJqE,KAAM,MACNQ,MAAO,IAETnD,OAAQ,WACRoD,YAAa,KAGR,SAASC,KAGC,IAFfhC,EAEc,uDAFNf,GACRgB,EACc,uCACd,OAAQA,EAAOqB,MACb,KAAKL,EACH,MAAwBhB,EAAOE,QAAvBsB,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,OAAO,2BACF9B,GADL,IAEEyB,OACAI,SAAU,CAAEC,QAAOR,KAAM,MAAOrE,GAAIwE,EAAKxE,IACzC0B,OAAQ,WAEZ,KAAKwC,EACH,OAAO,2BACFnB,GADL,IAEEyB,KAAM,CACJxE,GAAI,GACJyE,UAAW,GACXC,SAAU,GACV5C,MAAO,GACP6C,eAAgB,IAElBjD,OAAQ,WACRoD,YAAa,MAEjB,KAAKb,EACH,OAAO,2BAAKlB,GAAZ,IAAmB+B,YAAa9B,EAAOE,UACzC,KAAKiB,GACH,OAAO,2BAAKpB,GAAZ,IAAmBrB,OAAQsB,EAAOE,UACpC,QACE,OAAOH,G,ICxHDiC,G,4FAAAA,O,mBAAAA,I,mBAAAA,I,qBAAAA,I,yBAAAA,I,uBAAAA,I,mBAAAA,I,wBAAAA,Q,KAUL,IAAMC,GAAW,CACtBD,GAAWE,OACXF,GAAWG,OACXH,GAAWI,QACXJ,GAAWK,UACXL,GAAWM,SACXN,GAAWO,OACXP,GAAWQ,UAIAC,GAAsB,KAItBC,GAAsD,CACjEC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,EACHC,EAAG,GAGQC,GAAqD,CAChEL,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAGQE,GAA2B,CACtC,CACEjG,GAAI,EACJH,MAAO,oBACPiB,KACE,4JAEJ,CACEd,GAAI,EACJH,MAAO,uBACPiB,KACE,wQAEJ,CACEd,GAAI,EACJH,MAAO,oBACPiB,KACE,6LAEJ,CACEd,GAAI,EACJH,MAAO,4BACPiB,KAAM,oEAER,CACEd,GAAI,EACJH,MAAO,oBACPiB,KACE,iIAEJ,CACEd,GAAI,EACJH,MAAO,gCACPiB,KACE,uGAEJ,CACEd,GAAI,EACJH,MAAO,gCACPiB,KACE,sH,2DC7EOoF,GAAc,SAACC,GAAD,OACzBA,EAAM,UAAMA,EAAO1B,UAAb,YAA0B0B,EAAOzB,UAAa,IAiC/C,SAAS0B,GACdC,EACAC,EACAC,GAEA,OAAOA,EAAKlH,QAAQgH,KAAWC,EAG1B,IAAME,GAAyB,SAACC,GAErC,IADA,IAAMC,EAAsB,GAC5B,MAAgBtI,OAAOgB,KAAKqH,GAA5B,eAAsC,CAAjC,IAE2B,EADxB9H,EADI,KAEV,GAAY,mBAARA,GAEA,UAAA8H,EAAQE,sBAAR,eAAwBC,aACxBH,EAAQE,eAAeE,UAEvBH,EAAQI,KAAK,CACXC,aAAUpI,GADC,UAER8H,EAAQE,eAAeC,WAFf,YAE6BH,EAAQE,eAAeE,iBAG1DJ,EAAQ9H,IACjB+H,EAAQI,KAAK,CAACC,aAAUpI,GAAX,UAAoB8H,EAAQ9H,MAI7C,OCzCK,SAAuB+H,GAC5B,OAAOA,EAAQM,KAAI,SAACC,GAAD,OAAOA,EAAE,GAAK,IAAMC,mBAAmBD,EAAE,OAAKE,KAAK,KDwC/DC,CAAcV,IAiBhB,SAASW,GAAgBC,GAC9B,IAAMC,EAAoB,CACxB,UACA,UACA,UACA,UACA,UACA,WAEF,OAAOA,EACLC,KAAKC,IAlBT,SAAkBC,GAEhB,IADA,IAAIC,EAAO,EACFpJ,EAAI,EAAGA,EAAImJ,EAAIjJ,OAAQF,IAC9BoJ,EAAOD,EAAIE,WAAWrJ,KAAOoJ,GAAQ,GAAKA,GAE5C,OAAOA,EAaIE,CAASP,GAASC,EAAkB9I,SAI1C,SAASqJ,GACdzB,GAEA,OAAiB,OAAVA,QAA4B0B,IAAV1B,EAGpB,IExFK2B,GFwFCC,GAAU,SACrBC,EACAC,EACAC,GAEA,IAAMC,EAASH,EAAKI,QAAO,SAACC,EAAUC,GACpC,IAAMC,EAAQN,EAAOK,GAGrB,OAFKD,EAASE,KAAQF,EAASE,GAAS,IACxCF,EAASE,GAAO3B,KAAK0B,GACdD,IACN,IAQH,OAPIH,GACFA,EAASM,SAAQ,SAAC/J,GACX0J,EAAO1J,KACV0J,EAAO1J,GAAO,OAIb0J,GAGF,SAASM,GAAYC,EAAmBC,GAC7C,OAAOA,EAAKC,cAAcC,SAASH,EAAUE,gB,SE9GnCd,K,iDAAAA,E,0DAAAA,E,uCAAAA,Q,KCWZ,IAAMgB,GAAuB,SAACC,GAC5B,IAAMC,EAAO,IAAIC,KAGjB,OAFAD,EAAKE,SAASH,EAAKI,MACnBH,EAAKI,WAAWL,EAAKM,QACdL,EAAKM,YAGRC,GAAkB,SAACR,GACvB,IAAMC,EAAO,IAAIC,KAQjB,OAHAD,EAAKE,SAASH,EAAKI,MACnBH,EAAKI,WAAWL,EAAKM,QAEdG,aAAgBR,EAAMD,EAAKU,UAAUH,YA6H9C,SAASI,GAAcV,GACrB,IAAMW,EAAMX,EAAKY,SAGjB,OAFAZ,EAAKa,QAAQb,EAAKc,UAAYH,EAAM,GACpCX,EAAKE,SAAS,EAAG,EAAG,EAAG,GAChBF,EAGT,IAAMe,GAAoB,SACxBC,EACAC,EACAC,GAEA,OAAOF,EAAMG,QACX,SAACvL,GAAD,OACE,IAAIqK,KAAKrK,EAAKwL,eAAiBH,GAAS,IAAIhB,KAAKrK,EAAKwL,eAAiBF,MAYhEG,GAAmB,SAACL,GAC/B,OAAOA,EAAMlD,KAAI,SAAClI,GAAD,MAAW,CAC1B0L,mBAAoBC,GAAwB3L,GAC5C4L,SAAUC,GAAyB7L,GACnC8L,OAAQ9L,EAAK+L,MAAMxI,KACnB6G,KAAM4B,aAAO,IAAI3B,KAAKrK,EAAK6H,gBAAiB,cAC5CA,eAAgBmE,aAAO,IAAI3B,KAAKrK,EAAK6H,gBAAiB,SACtD2D,aAAcQ,aAAO,IAAI3B,KAAKrK,EAAKwL,cAAe,cAiE/C,SAASS,GACdb,EACAc,EACAC,EACAC,GAEA,OAAOhB,EAAMlD,KAAI,SAACmE,GAAD,OAjDZ,SACLrM,EACAkM,EACAC,EACAC,GAEA,IAAME,EAAWtM,EAAKuM,QAAQrE,KAAI,SAAChH,GAAD,OAAQgL,EAAYhL,MAAKqK,OAAOvC,IAE9DsD,EAAS3M,OAAWK,EAAKuM,QAAQ5M,OAKrC,IAAMgF,EAAU3E,EAAKwM,UAClBtE,KAAI,SAAChH,GAAD,OAAQiL,EAAcjL,MAC1BqK,OAAOvC,IAENrE,EAAQhF,OAAWK,EAAKwM,UAAU7M,OAKtC,IAAMoM,EAAQK,EAAUpM,EAAKyM,SAO7B,OAAO,2BACFzM,GADL,IAEEsM,WACA3H,UACAoH,MAAOA,GAAS,CACd7K,GAAI,GACJqC,KAAM,6BACNmJ,YAAa,6BACbC,SAAS,EACTC,QAAS,MAYXC,CAAiBR,EAAGH,EAAaC,EAAeC,MAI7C,SAAST,GAAwB3L,GACtC,OAAOA,EAAK2E,QACTuD,KAAI,SAACxC,GAAD,gBAAaA,EAAKC,UAAlB,YAA+BD,EAAKE,aACxCyC,KAAK,MAGH,SAASwD,GAAyB7L,GACvC,OAAOA,EAAKsM,SACTpE,KAAI,SAACxC,GAAD,gBAAaA,EAAKC,UAAlB,YAA+BD,EAAKE,aACxCyC,KAAK,MAGH,SAASyE,GAAcC,GAC5B,OAAOA,EAAO7E,KAAI,SAAC8E,GAAD,OAAYA,EAAOrH,aAAW0C,KAAK,MAGhD,IAAM4E,GAA0B,SAACC,GACtC,MAAM,WAAN,OAAkBA,EAAQC,KAA1B,YAAkCD,EAAQE,OAK/BC,GAAyB,SACpCC,GAEA,MAAM,GAAN,OAAUA,EAAY/H,KAAtB,YAA8B+H,EAAYpM,K,oBC5S/BqM,GAA2B,SACtChJ,EACAmI,EACAnH,GAEAiI,KAAajI,GAAM,CACjBhB,UACAmI,iBAISe,GAAY,SACvB5N,EACA6N,EACAnI,GAEI,IADJsF,EACG,uDADQ,EAEX,OAAQtF,GACN,IAAK,UACHhB,KAAQoJ,QAAQ,CAAED,UAAS7N,MAAKgL,aAChC,MACF,IAAK,QACHtG,KAAQD,MAAM,CAAEoJ,UAAS7N,MAAKgL,aAC9B,MACF,IAAK,UACHtG,KAAQqJ,QAAQ,CAAEF,UAAS7N,MAAKgL,aAChC,MACF,IAAK,UACHtG,KAAQnB,QAAQ,CAAEsK,UAAS7N,MAAKgL,aAChC,MACF,QACEtG,KAAQsJ,KAAK,CAAEH,UAAS7N,MAAKgL,eCJ5B,SAASiD,GACdC,EACA7B,EACAC,GAEA,OAAO4B,EAAY7F,KAAI,SAACmE,GAAD,OA7BlB,SACL2B,EACA9B,EACA+B,GAEA,IAAMC,EAAUhC,EAAY8B,EAAWtL,QAEvC,IAAKwL,EACH,MAAM,IAAIrL,MAAM,sCAGlB,IAAMsL,EAASF,EAAWD,EAAWI,UAErC,IAAKD,EACH,MAAM,IAAItL,MAAM,kDAGlB,OAAO,2BACFmL,GADL,IAEEG,SACAD,YAUAG,CAAuBhC,EAAGH,EAAaC,MC1BpC,IAAMmC,GAAmBzM,YAC9B,+BAD8C,uCAE9C,WAAOQ,GAAP,SAAAP,EAAA,sEACQC,GAAmB,eAAD,OAAgBM,EAAKkM,cAAgB,CAC3DjM,OAAQ,MACRN,KAAMO,KAAKC,UAAU,CACnBI,OAAQP,EAAKO,WAJnB,gCAQSP,GART,2CAF8C,uDAcnCmM,GAAmB3M,YAC9B,+BAD8C,sBAE9C,8BAAAC,EAAA,sEACqBC,GAAmB,eADxC,cACQC,EADR,OAGQ+L,EAAe/L,EAAKE,KACvBC,QAJL,kBAMS4L,GANT,4CAUWU,GAAqB9M,cAErB+M,GAAmBpL,YAAY,CAC1CC,KAAM,cACNL,aAAcuL,GAAmBtL,gBAAgB,CAC/CC,SAAS,EACTkB,MAAO,OAETd,SAAU,GACVK,cAAe,SAACC,GACdA,EAAQC,QAAQyK,GAAiBG,SAAS,SAAC1K,GACzCA,EAAMb,SAAU,KAElBU,EAAQC,QAAQyK,GAAiBxK,WAAW,SAACC,EAAOC,GAClDD,EAAMb,SAAU,EAChBqL,GAAmBG,WAAW3K,EAAOC,EAAOE,YAE9CN,EAAQC,QAAQyK,GAAiBnK,UAAU,SAACJ,EAAOC,GACjDc,QAAQC,IAAIf,EAAOI,MAAMC,YAE3BT,EAAQC,QAAQuK,GAAiBtK,WAAW,SAACC,EAAOC,GAClD,MAAiCA,EAAOE,QAAhCxB,EAAR,EAAQA,OAAQ2L,EAAhB,EAAgBA,aAChB,OAAQ3L,GACN,IAAK,SACH2K,GACE,wCACA,8CACA,WAEF,MACF,IAAK,WACHA,GACE,mCACA,8CACA,QAINkB,GAAmB7K,UAAUK,EAAO,CAClC/C,GAAIqN,EACJzL,QAAS,CAAEF,eAGfkB,EAAQC,QAAQuK,GAAiBjK,UAAU,SAACJ,EAAOC,GAAR,OACzCc,QAAQC,IAAIf,EAAOI,aCtEZuK,ID2EqBH,GAAiBhK,QC3EtB7C,YAC3B,wBAD2C,sBAE3C,8BAAAC,EAAA,sEACqBC,GAAmB,YADxC,cACQC,EADR,OAGQsK,EAAYtK,EAAKE,KACpBC,QAJL,kBAMSmK,GANT,6CAUWwC,GAAuBjN,YAClC,gCADkD,uCAElD,WAAOa,GAAP,iBAAAZ,EAAA,sEACqBC,GAAmB,YAAD,OACvBW,EADuB,0BADvC,cACQV,EADR,OAKQ+M,EAAS/M,EAAKE,KALtB,kBAOS6M,GAPT,2CAFkD,uDAavCC,GAAkBrN,cAElBsN,GAAgB3L,YAAY,CACvCC,KAAM,UACNL,aAAc8L,GAAgB7L,kBAC9BK,SAAU,CACR0L,gBAAiBF,GAAgB7K,SAEnCN,cAAe,SAACC,GACdA,EAAQC,QAAQ8K,GAAc7K,WAAW,SAACC,EAAOC,GAAR,OACvC8K,GAAgBtL,OAAOO,EAAOC,EAAOE,YAEvCN,EAAQC,QAAQ8K,GAAcxK,UAAU,SAACJ,EAAOC,GAAR,OACtCc,QAAQC,IAAI,eAKagK,GAAcvK,QCjBtC,SAASyK,GAAUnP,GACxB,MAAO,CACLkB,GAAIlB,EAAKkB,GACTkO,WAAYpP,EAAKoP,WACjB3C,QAASzM,EAAKyM,QACd7J,OAAQ5C,EAAK4C,OACbyM,cAAerP,EAAKqP,cACpBxH,eAAgB,IAAIwC,KAAKrK,EAAK6H,gBAAgByH,cAC9C9D,aAAc,IAAInB,KAAKrK,EAAKwL,cAAc8D,cAC1C9C,UAAWxM,EAAKwM,UAChBD,QAASvM,EAAKuM,QACdgD,OAAQvP,EAAKwP,cACbC,YAAazP,EAAKyP,YAClBC,cAAe1P,EAAK0P,cACpBC,aAAc3P,EAAK2P,aACnBpK,KAAMvF,EAAKuF,MCjCR,ICE2BqK,GDFrBC,GAAelO,cAEfmO,GAAajO,YACxB,iBADwC,uCAExC,WAAO8F,GAAP,iBAAA7F,EAAA,sEACqBC,GAAmB,SAAD,OAC1B2F,GAAuBC,KAFpC,cACQ3F,EADR,OAKQoJ,EAAUpJ,EAAKE,KAClBC,QAAqB+F,IAAIiH,IAN9B,kBAQS/D,GART,2CAFwC,uDAc7B2E,GAAmBlO,YAC9B,yBAD8C,uCAE9C,iCAAAC,EAAA,6DACEZ,EADF,EACEA,GACA0B,EAFF,EAEEA,OACAyM,EAHF,EAGEA,cAHF,SASQtN,GAAmB,SAAD,OAAUb,GAAM,CACtCoB,OAAQ,QACRN,KAAMO,KAAKC,UAAU,CAAEI,SAAQyM,oBAXnC,gCAcS,CAAEnO,KAAI4B,QAAS,CAAEF,SAAQyM,mBAdlC,2CAF8C,uDAoBnCW,GAAoBnO,YAC/B,iBAD+C,uCAE/C,WAAOX,GAAP,iBAAAY,EAAA,sEACqBC,GAAmB,SAAD,OAAUb,EAAV,kBADvC,cACQc,EADR,OAEQiO,EAAWjO,EAAKE,KAFxB,kBAGS,CAAEhB,KAAI+O,aAHf,2CAF+C,uDAe3C/M,GAAgC2M,GAAa1M,gBAAgB,CACjE8M,SAAU,GACV7M,SAAS,IAGE8M,GAAa5M,YAAY,CACpCC,KAAM,QACNL,gBACAM,SAAU,CACR2M,WAAY,SACVlM,EACAC,GAEA,MAAwBA,EAAOE,QAAvBlD,EAAR,EAAQA,GAAIqD,EAAZ,EAAYA,QACZN,EAAMgM,SAAS/O,GAAf,uBAA0B+C,EAAMgM,SAAS/O,IAAO,IAAhD,CAAqDqD,MAGzDV,cAAe,SAACC,GACdA,EAAQC,QAAQ+L,GAAW9L,WAAW,SAACC,EAAOC,GAC5C2L,GAAajB,WAAW3K,EAAOC,EAAOE,SACtCH,EAAMK,WAAQ2E,EACdhF,EAAMb,SAAU,KAElBU,EAAQC,QAAQ+L,GAAWzL,UAAU,SAACJ,EAAOC,GAAR,mBAAC,eACjCD,GADgC,IAEnCK,MAAOJ,EAAOI,MAAMC,QACpBnB,SAAS,OAEXU,EAAQC,QAAQ+L,GAAWnB,SAAS,SAAC1K,GACnCA,EAAMb,SAAU,KAElBU,EAAQC,QAAQiM,GAAkBhM,WAAW,SAACC,EAAOC,GACnDD,EAAMgM,SAAS/L,EAAOE,QAAQlD,IAAMgD,EAAOE,QAAQ6L,YAErDnM,EAAQC,QAAQgM,GAAiB/L,WAAW,SAACC,EAAOC,GAClD2L,GAAajM,UAAUK,EAAOC,EAAOE,SACrC,IAAQxB,EAAWsB,EAAOE,QAAQtB,QAA1BF,OACR2K,GAAyB,YAAD,OACV3K,EADU,KAEtB,8CACA,cAMKwN,GAAeF,GAAWxL,QElG1B2L,GAAoB1O,cAEpB2O,GAAuBzO,YAClC,gCADkD,uCAElD,WAAO0O,GAAP,iBAAAzO,EAAA,sEAEuBC,GAAmB,cAAD,OACvBwO,EAASrP,GADc,cAErC,IACA,GALJ,cAEQsP,EAFR,OAQQC,EAAaD,EAAOtO,KACvBC,QATL,6CAWcoO,GAXd,IAWwBE,eAXxB,2CAFkD,uDAiBvCC,GAAkB7O,YAC7B,2BAD6C,sBAE7C,8BAAAC,EAAA,sEACsBC,GAAmB,SAAD,OAC3B4O,GAAMC,WAAWC,QAAQnL,KAAKxE,GADH,eAEpC,IACA,GAJJ,UACQ4P,EADR,QAOQC,EAAaD,EAAM5O,MAETvC,OATlB,sBAUU,IAAIkD,MAAM,6CAVpB,cAcE8N,GAAMK,SAASV,GAAqBS,EAAW,KAdjD,kBAgBS,CAAEA,eAhBX,4CAoBIE,GAAoB,2BACbC,GAAkBrP,YAC7BoP,GAD6C,uCAE7C,iCAAAnP,EAAA,yDACEqP,EADF,EACEA,aACAC,EAFF,EAEEA,cAMID,EAAaxR,OARnB,gCASUoC,GAAmB,iBAAkB,CACzCO,OAAQ,SACRN,KAAMO,KAAKC,UAAU,CACnB6O,IAAKF,EAAajJ,KAAI,SAACoJ,GAAD,OAAUA,EAAKpQ,UAZ7C,uBAkByBa,GAAmB,iBAAkB,CAC1DO,OAAQ,OACRN,KAAMO,KAAKC,UAAU4O,KApBzB,cAkBQG,EAlBR,yBAuBSA,EAASrP,MAvBlB,2CAF6C,uDAmCzCgB,GAAgCmN,GAAkBlN,gBAAgB,CACtEC,SAAS,IAGEoO,GAAkBlO,YAAY,CACzCC,KAAM,aACNL,gBACAM,SAAU,GACVK,cAAe,SAACC,GACdA,EAAQC,QAAQ2M,GAAgB1M,WAAW,SAACC,EAAOC,GAKjD,OAJiBmM,GAAkB3M,OACjCO,EACAC,EAAOE,QAAQ2M,eAInBjN,EAAQC,QAAQ2M,GAAgBrM,UAAU,SAACJ,EAAOC,GAAR,mBAAC,eACtCD,GADqC,IAExCK,MAAOJ,EAAOI,MAAMC,aAEtBT,EAAQC,QAAQuM,GAAqBtM,WAAW,SAACC,EAAOC,GAAR,mBAAC,eAC5CD,GAD2C,IAE9CwN,SAAUvN,EAAOE,QACjBhB,SAAS,OAEXU,EAAQC,QAAQuM,GAAqBjM,UAAU,SAACJ,EAAOC,GAAR,mBAAC,eAC3CD,GAD0C,IAE7CK,MAAOJ,EAAOI,MAAMC,QACpBnB,SAAS,OAEXU,EAAQC,QAAQuM,GAAqB3B,SAAS,SAAC1K,GAAD,mBAAC,eAC1CA,GADyC,IAE5Cb,SAAS,OAEXU,EAAQC,QAAQmN,GAAgBvC,SAAS,SAAC1K,EAAOC,GAC/CuJ,GAAUwD,GAAmB,wBAAyB,cAExDnN,EAAQC,QAAQmN,GAAgBlN,WAAW,SAACC,EAAOC,GAMjD,OALAuJ,GACEwD,GACA,oCACA,WAEGhN,EAAMwN,SACJ,2BACFxN,GADL,IAEEwN,SAAS,2BAAMxN,EAAMwN,UAAb,IAAuBhB,UAAWvM,EAAOE,YAHvB,eAAKH,MAMnCH,EAAQC,QAAQmN,GAAgB7M,UAAU,SAACJ,EAAOC,GAChDuJ,GAAUwD,GAAmB,oBAAqB,iB,IAKvBO,GAAgB9M,Q,4BC5IpCgN,GAAepO,YAAY,CACtCC,KAAM,SACNL,aAJgC,GAKhCM,SAAU,CACRmO,UAAW,SAAC1N,EAAOC,GAAR,mBAAC,eACPD,GADM,IAET2N,OAAQ1N,EAAOE,cCHfyN,IDQwBH,GAAahN,QCRzB,SAAZmN,EAAalI,GACjB,IAAQzI,EAAuByI,EAAvBzI,GAAIqC,EAAmBoG,EAAnBpG,KAAMuO,EAAanI,EAAbmI,SAElB,MAAO,CACL/Q,MAAOwC,EACP1D,IAAKqB,EACL4Q,SAAUA,EAASnS,OAASmS,EAAS5J,KAAI,SAAC6J,GAAD,OAAWF,EAAUE,MAAU,MAI/DC,GAAcnQ,YAAiB,mBAAD,sBAAqB,kCAAAC,EAAA,sEAC3CC,GAAmB,UADwB,cACxDC,EADwD,OAGxDiQ,EAAcjQ,EAAKE,KAAagQ,KAChCC,EAAUnQ,EAAKE,KAAaiQ,OAE5BC,EAAQH,EAAW/J,KAAI,SAACgK,GAAD,OAAUL,GAAUK,MANa,kBAQvD,CAAEE,QAAOD,WAR8C,4CAWnDE,GAAgB1Q,cAMvBuB,GAA2BmP,GAAclP,gBAAgB,CAAEiP,MAAO,KAC3DE,GAAchP,YAAY,CACrCC,KAAM,SACNL,gBACAM,SAAU,GACVK,cAAe,SAACC,GACdA,EAAQC,QAAQiO,GAAYhO,WAAW,SAACC,EAAOC,GAC7CmO,GAAc3O,OAAOO,EAAOC,EAAOE,QAAQ+N,QAC3ClO,EAAMmO,MAAQlO,EAAOE,QAAQgO,SAE/BtO,EAAQC,QAAQiO,GAAY3N,UAAU,SAACkO,EAAQC,GAAT,OACpC/E,GAAU,QAAS,sCAAuC,eCvCnDgF,GAAgB9Q,cAEhB+Q,GAAc7Q,YAAiB,oBAAD,sBAAsB,8BAAAC,EAAA,sEAC5CC,GAAmB,UADyB,cACzDC,EADyD,OAGzD8J,EAAU9J,EAAKE,KAAiCC,QAHS,kBAKxD2J,GALwD,4CAQpD6G,GAAcrP,YAAY,CACrCC,KAAM,SACNL,aAAcuP,GAActP,kBAC5BK,SAAU,CACRoP,YAAa,SAAC3O,EAAOC,GAAR,mBAAC,eACTD,GADQ,IAEXwN,SAAUvN,EAAOE,YAGrBP,cAAe,SAACC,GACdA,EAAQC,QAAQ2O,GAAY1O,WAAW,SAACC,EAAOC,GAAR,OACrCuO,GAAc/O,OAAOO,EAAOC,EAAOE,YAErCN,EAAQC,QAAQ2O,GAAYrO,UAAU,SAACJ,EAAOC,GAAR,mBAAC,eAClCD,GADiC,IAEpCK,MAAOJ,EAAOI,MAAMC,gBCpBbsO,GAAcvP,YAAY,CACrCC,KAAM,SACNL,aANqC,CACrChB,KAAM,CAAE4Q,WAAY,iBAAkBzL,OAAQ,OAM9C7D,SAAU,CACRuP,UAAW,SAAC9O,EAAOC,GACjBD,EAAM/B,KAAOgC,EAAOE,SAEtB4O,WAAY,SAAC/O,GACXA,EAAM/B,KAAO,CAAE4Q,WAAY,iBAAkBzL,OAAQ,UAKpD,GAAkCwL,GAAYnO,QAAtCqO,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,WLXbpD,GAAUqD,eAkBVC,IAhBqBtD,GAgBWA,GAf3CuD,YAAgB,CACdlR,MAAOoB,EAAW+P,QAClBvC,QAAS5K,GACTtB,QAASE,EAAauO,QACtB9G,SAAU2C,GAAcmE,QACxBrF,YAAaW,GAAiB0E,QAC9BhI,MAAO8E,GAAWkD,QAClBrC,WAAYS,GAAgB4B,QAC5BC,OAAQC,aAAc1D,IACtB2D,QAAS7B,GAAa0B,QACtBjB,OAAQG,GAAYc,QACpBtH,OAAQ6G,GAAYS,QACpBI,OAAQX,GAAYO,WAKXzC,GAAQ8C,YAAe,CAClCL,QAASF,GACTQ,WAAY,SAACC,GAAD,OACVA,IAAuBC,OAAOC,aAAiBjE,QAKtCkE,GAAiB,kBAAMC,eACvBC,GAAkDC,IT3ClDC,GAAUC,0CAUhB,SAASC,GACdC,EACAzM,GAEoB,IADpB0M,EACmB,uDADT,KAEV,OAAOC,QAAQC,KAAK,CAClBC,MAAMJ,EAAD,YAAC,eAAezM,GAAhB,IAAyB8M,KAAM,UACpC,IAAIH,SAAkB,SAACI,EAAGC,GAAJ,OACpBC,YAAW,kBAAMD,EAAO,IAAI/R,MAAM,cAAayR,QAS9C,SAAevS,GAAtB,mC,8CAAO,WACLsS,GADK,2CAAAvS,EAAA,6DAEL8F,EAFK,+BAE8B,GACnCkN,IAHK,iCAILR,EAJK,+BAIK,KAEJrQ,EAAQ0M,GAAMC,WAEdmE,EARD,2BASAnN,GATA,IAUHoN,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAejR,EAAM4M,QAAQ/K,SAASC,OAExCoP,YAAa,YAGTC,EAlBD,UAkBUlB,IAlBV,OAmBHY,EAAY,+BAAiB7Q,EAAM8M,WAAWU,gBAAlC,aAAiB,EAA2BvQ,GAA5C,KAAoD,IAnB7D,OAoBFmT,GApBE,SAqBkBD,GAAagB,EAAKL,EAAgBT,GArBpD,UAuBmB,OAFlB/C,EArBD,QAuBQ3O,QAAsC,MAApB2O,EAAS3O,QACtC6K,GACE,qBACA,iEACA,SAIoB,MAApB8D,EAAS3O,QAAsC,MAApB2O,EAAS3O,OA/BnC,uBAgCG,IAAIC,MAAJ,oCAAuCwR,IAhC1C,yBAmCc9C,EAAS8D,OAnCvB,eAmCCrT,EAnCD,yBAoCEA,GApCF,6C,wDexBQsT,G,mFAAf,WAAiCvP,EAAe/D,GAAhD,eAAAF,EAAA,sDACQ4D,EAAO1D,EAAKE,KAClByO,GAAMK,SAASxL,GAAW,CAAEE,OAAMK,WAFpC,4C,sBAKO,SAAewP,GAAtB,mC,8CAAO,WACLC,GADK,mBAAA1T,EAAA,6DAGL6O,GAAMK,SAASvL,GAAiB,YAH3B,SAIkB2O,GACrBgB,KAAIK,QAAQvB,GAAS,oBACrB,CACE5R,OAAQ,OACR0S,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBE,YAAa,UACbnT,KAAMO,KAAKC,UAAU,CACnBQ,MAAOwS,EAAKxS,MACZ0S,SAAUF,EAAKE,aAfhB,cAICnE,EAJD,gBAmBcA,EAAS8D,OAnBvB,UAmBCrT,EAnBD,OAqBmB,MAApBuP,EAAS3O,OArBR,uBAsBH+N,GAAMK,SAASvL,GAAiB,aAC1B8L,EAvBH,WAyBCxL,EAAQwL,EAASyD,QAAQW,IAAI,kBAAoB,GAzBlD,uBA0Ba,IAAI9S,MAAM,4BA1BvB,yBA2BCyS,GAAkBvP,EAAO/D,GA3B1B,6C,gDCUC4T,GAAYC,IAAZD,QAMFE,GAAYC,aAJM,SAAC9R,GAAD,MAAuB,CAC7C4M,QAAS5M,EAAM4M,YAOXmF,GAAY,QAiFHF,WA/Ef,YAA+E,IAA1CjF,EAAyC,EAAzCA,QACnC,GAAuB,WAAnBA,EAAQjO,OAEV,OADA6K,GAAUuI,GAAD,wBAA6BnF,EAAQnL,KAAKC,UAA1C,KAAwD,WAC1D,kBAAC,IAAD,CAAUsQ,GAAIpF,EAAQ7K,cAG/B,IAAMkQ,EAAQ,uCAAG,WAAOC,GAAP,SAAArU,EAAA,6DACf2L,GAAUuI,GAAW,qCAAsC,WAD5C,kBAGPT,GAAqB,CACzBvS,MAAOmT,EAAOnT,MACd0S,SAAUS,EAAOT,WALN,sDAQbjI,GAAUuI,GAAW,4BAA6B,SARrC,wDAAH,sDAgBd,OACE,kBAACJ,GAAD,CAAStU,UAAU,iBACjB,kBAAC,IAAD,CAAO8U,UAAU,WAAW9U,UAAU,UACpC,kBAAC,IAAD,CAAK+U,QAAQ,UACX,kBAAC,EAAD,CAAM/U,UAAU,gBAGlB,kBAAC,IAAD,CAAMA,UAAU,uCACd,kBAAC,IAAD,KACE,kBAAC,IAAWgV,MAAZ,CAAkBC,MAAO,GAAzB,4BAIF,kBAAC,IAAD,CACEhT,KAAK,QACL2S,SAAUA,EACVM,eApBa,SAACC,GACtBhJ,GAAUuI,GAAW,4BAA6B,UAoB1C1U,UAAU,eAEV,kBAAC,IAAKoV,KAAN,CACEnT,KAAK,QACLoT,MAAO,CAAC,CAAEC,UAAU,EAAMrS,QAAS,wBAEnC,kBAAC,IAAD,CACEsS,OAAQ,kBAACC,GAAA,EAAD,CAAcxV,UAAU,wBAChCyV,YAAY,WAIhB,kBAAC,IAAKL,KAAN,CACEnT,KAAK,WACLoT,MAAO,CAAC,CAAEC,UAAU,EAAMrS,QAAS,2BAEnC,kBAAC,IAAMyS,SAAP,CACEH,OAAQ,kBAACI,GAAA,EAAD,CAAc3V,UAAU,wBAChCyV,YAAY,cAIhB,kBAAC,IAAKL,KAAN,KACE,kBAAC,IAAD,CACEnR,KAAK,UACL2R,SAAS,SACTC,KAAK,QACLC,OAAK,EACLhU,QAA4B,YAAnByN,EAAQjO,QALnB,kBCzECyU,GAd8C,SAACpW,GAC5D,IAAIqW,EAAe,GAKnB,GAJKrW,EAAMsW,kBACTD,EAAerW,EAAMuW,oBAGnBF,EAAc,CAEhB,OAAO,gBAAC,IAAD,iBAAWrW,EAAX,CAAkBwW,UADD,kBAAM,gBAAC,IAAD,CAAUxB,GAAI,CAAEyB,SAAUJ,MACHK,YAAQ1O,KAE7D,OAAO,gBAAC,IAAUhI,I,8HCVT2W,GAAiB,SAAC,GAAD,IAAGrU,EAAH,EAAGA,KAAStC,EAAZ,gCAC5B,kBAAC,KAAD,eAAQ4W,MAAO,CAAEC,gBAAiBvP,GAAgBhF,KAAatC,GAChDsC,EnB6DZwU,MAAM,KACN7P,KAAI,SAAC8P,GAAD,OAAOA,EAAE,MACb3P,KAAK,M,WoBxEK4P,GCSA,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUf,EAAuB,EAAvBA,KAAMgB,EAAiB,EAAjBA,IAChC,OAAOA,EACL,kBAAC,KAAD,CACEA,IAAKA,EACLC,MAAOjB,GAAQ,IACfkB,OAAQlB,GAAQ,IAChB7V,UAAU,iBACVgX,SAAS,IAGX,kBAAC,GAAD,CAAgB/U,KAAM2U,EAAUf,KAAMA,GAAQ,UAAWoB,MAAM,YCF3DC,GAAU3C,IAAV2C,MACAC,GAAYC,KAAZD,QAcO,SAASE,GAAT,GAUU,IATvBC,EASsB,EATtBA,WACAlT,EAQsB,EARtBA,KACA+L,EAOsB,EAPtBA,SACAV,EAMsB,EANtBA,WACA8H,EAKsB,EALtBA,OACAvT,EAIsB,EAJtBA,OACAwT,EAGsB,EAHtBA,cACAC,EAEsB,EAFtBA,eACAC,EACsB,EADtBA,kBAEA,EAAkCC,oBAAkB,GAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACMvJ,EAAUwJ,cAChB,IAAKR,EAAY,OAAO,8BAExB,IAAMS,EACJ,kBAAC,KAAD,KACE,kBAACZ,GAAD,CAAS5Y,IAAI,OAAOkB,MAAM,uBACvBgQ,EAAW7I,KAAI,SAACqI,GAAD,OACd,kBAAC,KAASmG,KAAV,CAAe7W,IAAK0Q,EAASrP,GAAIoY,QAAS,kBAAMT,EAAOtI,KACrD,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAQ2H,SAAUzG,EAASlO,KAAM4T,KAAM,KACvC,8BAAO5G,EAAShN,YAKxB,kBAAC,KAASmT,KAAV,KACE,0BAAM4C,QAAS,kBAAMhU,MAArB,aAKN,OACE,kBAACkT,GAAD,CACEe,aAAW,EACXL,UAAWA,EACXM,WAAY,SAACN,GAAD,OAAeC,EAAaD,IACxCd,MvB9CuB,KuBgDvB,kBAAC,KAAD,CAAUqB,QAASJ,GACjB,kBAAC,IAAD,CAAOK,MAAM,SAASpY,UAAU,eAC9B,kBAAC,GAAD,CAAQ4W,SAAUzG,EAASlO,KAAM4T,KAAM,MACrC+B,GACA,kBAAC,IAAD,CAAO9C,UAAU,WAAWe,KAAM,GAChC,kBAAC,IAAD,CAAOuC,MAAM,UACX,0BAAMpY,UAAU,wBAAwBmQ,EAASlO,MACjD,kBAACoW,GAAA,EAAD,CAAc9B,MAAO,CAAE+B,MAAO,YAEhC,0BAAMtY,UAAU,oBAAoB8F,GAAY1B,OAMxD,kBAAC,KAAD,CAAUmU,MAAM,OAAOC,oBAAqB,CAAC,SAC3C,kBAAC,KAASpD,KAAV,CACE7W,IAAI,OACJka,KAAM,kBAACC,GAAA,EAAD,MACNV,QAAS,kBAAM1J,EAAQ5H,KAAK,OAH9B,aAOA,kBAAC,KAAS0O,KAAV,CACE7W,IAAI,OACJka,KAAM,kBAACE,GAAA,EAAD,MACNX,QAAS,kBAAM1J,EAAQ5H,KAAK,kBAH9B,mBAME,kBAAC,KAAD,CAAOkS,MAAOnB,KAEhB,kBAAC,KAASrC,KAAV,CACE7W,IAAI,sBACJka,KAAM,kBAACI,GAAA,EAAD,MACNb,QAAS,kBAAM1J,EAAQ5H,KAAK,0BAH9B,2BAME,kBAAC,KAAD,CAAOkS,MAAOpB,KAEhB,kBAAC,KAASpC,KAAV,CACE7W,IAAI,gBACJka,KAAM,kBAACI,GAAA,EAAD,MACNb,QAAS,kBAAM1J,EAAQ5H,KAAK,oBAH9B,sBAME,kBAAC,KAAD,CAAOkS,MAAOlB,KAEhB,kBAAC,KAAStC,KAAV,CACE7W,IAAI,SACJka,KAAM,kBAACI,GAAA,EAAD,MACNb,QAAS,kBAAM1J,EAAQ5H,KAAK,WAH9B,qBAOA,kBAAC,KAAS0O,KAAV,CACE7W,IAAI,QACJka,KAAM,kBAACK,GAAA,EAAD,MACNd,QAAS,kBAAM1J,EAAQ5H,KAAK,YAH9B,SAOA,kBAAC,KAAS0O,KAAV,CACE7W,IAAI,UACJka,KAAM,kBAACK,GAAA,EAAD,MACNd,QAAS,kBAAM1J,EAAQ5H,KAAK,cAH9B,uBAOA,kBAAC,KAAS0O,KAAV,CACE7W,IAAI,WACJka,KAAM,kBAACM,GAAA,EAAD,MACNf,QAAS,kBAAM1J,EAAQ5H,KAAK,eAH9B,c,cChID,GAGHyG,GAAmB6L,cAAwB,SAACrW,GAAD,OAAWA,EAAM8J,eADnDwM,IAFN,GACLC,WADK,GAELC,WAGK,GAKH7V,EAAe0V,cAAwB,SAACrW,GAAD,OAAWA,EAAMU,WAJ9C+V,GADP,GACLF,WACWG,GAFN,GAELF,UACaG,GAHR,GAGLC,YACgBC,GAJX,GAILC,eAGK,GAIH/L,GAAgBsL,cAAwB,SAACrW,GAAD,OAAWA,EAAMqI,YAH/C0O,GADP,GACLR,WAEgBS,IAHX,GAELR,UAFK,GAGLM,gBAGK,GAGHlL,GAAayK,cAAwB,SAACrW,GAAD,OAAWA,EAAMmH,SAF5C8P,GADP,GACLV,WACWW,GAFN,GAELV,UAOK,GAGH/Y,EAAa4Y,cAAwB,SAACrW,GAAD,OAAWA,EAAMhC,SAD7CmZ,IAFN,GACLZ,WADK,GAELC,WAGK,GAGHpK,GAAkBiK,cAAwB,SAACrW,GAAD,OAAWA,EAAM8M,cADlDsK,IAFN,GACLb,WADK,GAELC,WAGK,GAIHhI,GAAc6H,cAAwB,SAACrW,GAAD,OAAWA,EAAM6H,UAH7CwP,GADP,GACLd,WACWe,GAFN,GAELd,UACgBe,GAHX,GAGLT,eAGK,GAIH1I,GAAciI,cAAwB,SAACrW,GAAD,OAAWA,EAAMkO,UADzCsJ,IAHX,GACLhB,UADK,GAELD,WAFK,GAGLO,gBAIIW,GAAkB,SACtBzX,EACAjE,GAEA,IAAM2E,EAAU3E,EAAKwM,UAClBtE,KAAI,SAAChH,GAAD,OAAQwZ,GAAiBzW,EAAO/C,MACpCqK,OAAOvC,IACJsD,EAAWtM,EAAKuM,QACnBrE,KAAI,SAAChH,GAAD,OAAQ8Z,GAAkB/W,EAAO/C,MACrCqK,OAAOvC,IAEJ+C,EAAQuP,GAAgBrX,EAAOjE,EAAKyM,SAC1C,GAAKV,EAEL,OAAO,2BAAK/L,GAAZ,IAAkB2E,UAAS2H,WAAUP,WAG1B4P,GAAe,SAC1B1X,EACA2X,GAEA,OAAOA,EACJ1T,KAAI,SAAC2T,GAAD,OAAgBH,GAAgBzX,EAAO4X,MAC3CtQ,OAAOvC,KAGC8S,GAAc,SAAC7X,EAAkB8X,GAC5C,IAAMC,EAAYd,GAAejX,EAAO8X,GACxC,GAAKC,EACL,OAAON,GAAgBzX,EAAO+X,IAGnBC,GAAkB,SAAChY,GAC9B,IAAMmH,EAAQ+P,GAAelX,GAC7B,OAAO0X,GACL1X,EACAmH,EAAMG,QACJ,SAACvL,GAAD,OACmB,oBAAhBA,EAAK4C,QAAgD,SAAhB5C,EAAK4C,WACzC5C,EAAK2P,cACP,IAAItF,KAAKrK,EAAKwL,cAAgB,IAAInB,UAM7B6R,GAAwB,SAACjY,EAAkBmK,GAEtD,GADesM,GAAiBzW,EAAOmK,GAGvC,OADc+M,GAAelX,GAChBsH,QAAO,SAACvL,GAAD,OAAUoO,KAAYpO,EAAKwM,cChHpC2P,GAAgB,CAAEC,QADR,IAEVC,GAA0B,CAAEC,aAAc,GAC1CC,GAAa,CAAEnE,MAAO,QACtBoE,GAAoB,CAC/B,UACA,UACA,UACA,UACA,W,gHC4LaC,G,WAnKb,WAAY7K,EAA+BmK,GAAiB,0BAVpDA,YAUmD,OATnDW,uBASmD,OARnDC,uBAQmD,OAPnDC,YAOmD,OANnDC,eAMmD,OALnDC,eAKmD,OAJnDC,cAImD,OAFpDnL,YAEoD,EACzD1R,KAAK0R,OAASA,EACd1R,KAAK6b,OAASA,EAEd7b,KAAKwc,kBAAoB,KACzBxc,KAAKyc,kBAAoB,KAEzBzc,KAAK0c,OAAS,KAEd1c,KAAK2c,UAAY,GACjB3c,KAAK4c,UAAY,GAEjB5c,KAAK6c,SAAW,CAAEC,QAAS,I,mFAG7B,WAAczZ,EAAcrB,GAA5B,oBAAAJ,EAAA,+EACS,IAAIyS,SAAQ,SAACkB,EAASb,GAC3B,IAAK,EAAKhD,OAAQ,OAAOgD,EAAO,yBAEhC,EAAKhD,OAAOqL,KAAK1Z,EAAMrB,GAAM,SAACqP,GACxBA,EAASjN,MAAOsQ,EAAOrD,EAASjN,OAC/BmR,EAAQlE,UANnB,2C,oIAWA,WAA6B2L,GAA7B,oBAAApb,EAAA,+EACS,IAAIyS,SAAQ,SAACkB,EAAoCb,GAEtDsI,EAAUC,GACR,UADF,uCAEE,aAA2BC,EAAsBC,GAAjD,eAAAvb,EAAA,6DAASwb,EAAT,EAASA,eAAT,SACQ,EAAKC,QAAQ,gBAAiB,CAClCD,iBACAvB,OAAQ,EAAKA,OACbyB,YAAaN,EAAUhc,KAJ3B,OAMEkc,IACA3H,IAPF,2CAFF,+DAHJ,2C,gHAkBA,yCAAA3T,EAAA,sEAMY5B,KAAKqd,QAAQ,OAAQ,CAAExB,OAAQ7b,KAAK6b,SANhD,uBAGI0B,EAHJ,EAGIA,sBACAC,EAJJ,EAIIA,sBACAC,EALJ,EAKIA,sBALJ,SASsBzd,KAAK0d,WAAWD,GATtC,UASEzd,KAAK0c,OATP,OAUO1c,KAAK0c,OAVZ,0DAeMa,IACFvd,KAAKwc,kBAAoBxc,KAAK0c,OAAOiB,oBACnCJ,GAEFvd,KAAK4d,uBAAuB5d,KAAKwc,oBAGnCxc,KAAKyc,kBAAoBzc,KAAK0c,OAAOmB,oBACnCL,GAEFxd,KAAK4d,uBAAuB5d,KAAKyc,mBAzBnC,UA4BQzc,KAAKqd,QAAQ,yBAA0B,CAC3CS,gBAAiB9d,KAAK0c,OAAOoB,kBA7BjC,QAiCE9d,KAAKqd,QAAQ,mBAAoB,CAAExB,OAAQ7b,KAAK6b,SAI5C7b,KAAKwc,mBACPxc,KAAKwc,kBAAkBS,GACrB,UADF,uCAEE,aAAgCC,EAAUC,GAA1C,qBAAAvb,EAAA,6DAASmc,EAAT,EAASA,KAAMC,EAAf,EAAeA,cAAf,SAC+B,EAAKX,QAAQ,UAAW,CACnDxB,OAAQ,EAAKA,OACbkC,OACAC,kBAJJ,gBACUC,EADV,EACUA,WAMRf,EAAS,CAAElc,GAAIid,IAPjB,2CAFF,sCAAAje,KAAA,gBAeFA,KAAK0R,OAAOuL,GAAG,UAAf,uCAA0B,WAAOtP,GAAP,mBAAA/L,EAAA,sEACI,EAAKkb,QAAQnP,GADjB,UAClBuQ,EADkB,wDAGhBC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,OAClB,EAAK1M,OAAOqL,KAAK,iBAAkB,CACjClB,OAAQ,EAAKA,OACbwC,WAAYF,EAASnd,KAEvB,EAAK6b,SAAL,QAAyBnT,SAAQ,SAAC4U,GAAD,OAAOA,EAAE3Q,EAAKoQ,KAAMK,EAAQzQ,EAAKnI,SAR1C,2CAA1B,kCAAAxF,KAAA,gBArDF,iD,qHAiEA,WACEyd,GADF,eAAA7b,EAAA,6DAGQ8a,EAAS,IAAI6B,UAHrB,SAKQ7B,EAAO8B,KAAK,CAAEf,0BALtB,gCAOSf,GAPT,2C,mHAUA,WAAc/O,GAAd,iBAAA/L,EAAA,yDACO5B,KAAKyc,kBADZ,iEAEyBzc,KAAKyc,kBAAkBK,QAAQnP,GAFxD,cAEQwQ,EAFR,OAGQC,EAAS,IAAIK,YAAY,CAACN,EAASO,QACzC1e,KAAK2c,UAAUwB,EAASnd,IAAMmd,EAJhC,kBAKS,CAAEA,WAAUC,WALrB,gD,8GAQA,WAASO,EAAeC,GAAxB,SAAAhd,EAAA,sDACQ+c,KAAS3e,KAAK6c,WAClB7c,KAAK6c,SAAS8B,GAAS,IAEzB3e,KAAK6c,SAAS8B,GAAO7W,KAAK8W,GAJ5B,gD,uHAOA,sBAAAhd,EAAA,sEACQ5B,KAAKqd,QAAQ,YAAa,CAAExB,OAAQ7b,KAAK6b,SADjD,gD,kHAIA,sBAAAja,EAAA,sDACE5B,KAAK0R,OAAOmN,IAAI,WAChB7e,KAAK0R,OAAOmN,IAAI,WAChB7e,KAAK0R,OAAOmN,IAAI,eAEZ7e,KAAKyc,mBAAmBzc,KAAKyc,kBAAkBqC,QAC/C9e,KAAKwc,mBAAmBxc,KAAKwc,kBAAkBsC,QACnD9e,KAAKyc,kBAAoB,KACzBzc,KAAKwc,kBAAoB,KAEzBpd,OAAO6W,OAAOjW,KAAK4c,WAAWlT,SAAQ,SAACqV,GACrCA,EAASD,WAEX1f,OAAO6W,OAAOjW,KAAK2c,WAAWjT,SAAQ,SAACyU,GACrCA,EAASW,WAEX9e,KAAK2c,UAAY,GACjB3c,KAAK4c,UAAY,GAEjB5c,KAAK6c,SAAW,GAEhB7c,KAAK0R,OAAOoN,QArBd,iD,8JC9JMvG,GAAYE,KAAZF,QAeO,SAASyG,GAAT,GAWU,IAVvBC,EAUsB,EAVtBA,OACAC,EASsB,EATtBA,cACAC,EAQsB,EARtBA,SACAC,EAOsB,EAPtBA,SACAC,EAMsB,EANtBA,WACAC,EAKsB,EALtBA,UACAC,EAIsB,EAJtBA,SACAC,EAGsB,EAHtBA,UACAC,EAEsB,EAFtBA,cACAC,EACsB,EADtBA,UAEA,EAA0C3G,mBAA2B,MAArE,mBAAO4G,EAAP,KAAsBC,EAAtB,KAOMC,EACJ,kBAAC,KAAD,KACE,kBAAC,GAAD,CAASlgB,IAAI,QAAQka,KAAM,kBAACiG,GAAA,EAAD,MAAmBjf,MAAM,cACjDoe,EAAOjX,KAAI,SAAC+X,GAAD,OACV,kBAAC,KAAKvJ,KAAN,CAAW7W,IAAKogB,EAAM/e,GAAIoY,QAAS,kBAAMwG,EAAiBG,KACvDA,EAAMlf,WAIb,kBAAC,KAAK2V,KAAN,CAAW7W,IAAI,OAAOka,KAAM,kBAACmG,GAAA,EAAD,MAAgB5G,QAAS,kBAAM+F,MAA3D,QAGA,kBAAC,KAAK3I,KAAN,CACE7W,IAAI,YACJka,KAAM,kBAACoG,GAAA,EAAD,MACN7G,QAAS8F,GAHX,kBAOA,kBAAC,KAAK1I,KAAN,CACE7W,IAAI,OACJka,KAAMyF,EAAY,kBAACY,GAAA,EAAD,MAAyB,kBAACC,GAAA,EAAD,MAC3C/G,QAAS,kBAAOkG,EAAYF,IAAaC,MAExCC,EAAY,OAAS,UAExB,kBAAC,KAAK9I,KAAN,CACE7W,IAAI,OACJka,KAAsB,kBAACuG,GAAA,EAAD,MACtBhH,QAAS,kBAAOqG,EAAgBF,IAAaC,MAE5CC,EAAgB,YAAc,eAKrC,OACE,kBAAC,IAAD,CAAOre,UAAU,0BACf,kBAAC,KAAD,CAAUmY,QAASsG,GACjB,kBAAC,IAAD,KACE,kBAACQ,GAAA,EAAD,QAGJ,kBAAC,IAAWC,KAAZ,MACA,kBAAC,KAAD,CACEzf,MAAM,4CACN0f,UAAWZ,EACXa,KApDqB,WACrBb,GAAeD,EAAUC,GAC7BC,EAAiB,OAmDba,SAAU,kBAAMb,EAAiB,QAEjC,4EACA,kCAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAe7d,Q,eCjGZ4e,OCMA,YAAiE,IAAhDC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,YAAgB7f,EAAoB,4CACvE8f,EAAWC,iBAAyB,MAC1C,EAA8B/H,oBAAS,GAAvC,mBAAO7V,EAAP,KAAgB6d,EAAhB,KAYA,OAVAC,qBAAU,WACHH,EAASI,UACdJ,EAASI,QAAQN,UAAYA,KAC5B,CAACA,IAEJK,qBAAU,WACHH,EAASI,SACdJ,EAASI,QAAQC,iBAAiB,cAAc,kBAAMH,GAAW,QAChE,IAGD,yCACE5f,IAAK0f,GACD9f,EAFN,CAGE4W,MAAK,2BACA5W,EAAM4W,OADN,IAEHwJ,QAASje,GAAW0d,EAAc,EAAI,QC3B/BQ,OCQA,YAKA,IAJbT,EAIY,EAJZA,UAEAU,GAEY,EAHZT,YAGY,EAFZS,OACGtgB,EACS,oDACNugB,EAAWR,iBAAyB,MAY1C,OAVAE,qBAAU,WACHM,EAASL,UACdK,EAASL,QAAQN,UAAYA,KAC5B,CAACA,IAEJK,qBAAU,WACHM,EAASL,UACdK,EAASL,QAAQI,MAAQA,IAAS,KACjC,CAACA,IAEG,yCAAOlgB,IAAKmgB,GAAcvgB,KCqBnC,SAASwgB,KACP,OACE,yBAAKngB,UAAU,yBACb,kBAAC,KAAD,CAAMogB,IAAI,2BAKhB,IAiVeC,GAjVoBC,IAAMC,MACvC,YAiBO,IAhBL9F,EAgBI,EAhBJA,OACA+F,EAeI,EAfJA,UACA1J,EAcI,EAdJA,MACAC,EAaI,EAbJA,OACAzG,EAYI,EAZJA,OACAuN,EAWI,EAXJA,OACAE,EAUI,EAVJA,SACAC,EASI,EATJA,SACAC,EAQI,EARJA,WACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,SACAC,EAKI,EALJA,UACAC,EAII,EAJJA,cACAxP,EAGI,EAHJA,WACAJ,EAEI,EAFJA,iBACAgS,EACI,EADJA,iBAEMjc,EAAWmO,aAAY,SAAChQ,GAAD,OAAsBA,EAAM4M,QAAQ/K,YAEjE,EAA8BmT,oBAAS,GAAvC,mBAAO7V,EAAP,KAAgB6d,EAAhB,KACA,EAAgChI,oBAAS,GAAzC,mBAAO+I,EAAP,KAAiBC,EAAjB,KACA,EAAoBhJ,qBAApB,mBAAOiJ,EAAP,KAAWC,EAAX,KACA,EAA4BlJ,qBAA5B,mBAAOrW,EAAP,KAAewf,EAAf,KACA,EAAkDnJ,oBAAS,GAA3D,mBAAOoJ,EAAP,KAA0BC,EAA1B,KACA,EAAkDrJ,oBAAS,GAA3D,mBAAOsJ,EAAP,KAA0BC,EAA1B,KAEA,EAAoDvJ,oBAAS,GAA7D,mBAAOwJ,EAAP,KAA2BC,EAA3B,KACA,GAAoDzJ,oBAAS,GAA7D,qBAAO0J,GAAP,MAA2BC,GAA3B,MACA,GAAwC3J,mBAEtC,IAFF,qBAAO4J,GAAP,MAAqBC,GAArB,MAGA,GAAwC7J,mBAEtC,IAFF,qBAAO8J,GAAP,MAAqBC,GAArB,MAIMC,GAAWC,sBAAW,sBAAC,4BAAAphB,EAAA,6DACrBogB,EAAK,IAAIzF,GAAW7K,EAAQmK,GADP,SAErBmG,EAAGiB,OAFkB,OAG3BhB,EAAMD,GAHqB,2CAI1B,CAACtQ,EAAQmK,IAEN6D,GAAS,uCAAG,WAAOK,GAAP,SAAAne,EAAA,yDACXogB,EADW,iDAEhBA,EAAG3E,QAAQ,cAAe,CACxBxB,SACAqH,SAAUnD,EAAMje,OACfqhB,MACD,kBACE9V,GACE,2BACA,mCACA,cAEJ,SAAC+V,GAAD,OACE/V,GACE,2BADsB,yBAEJ+V,GAClB,YAhBU,2CAAH,sDAsBfpC,qBAAU,WACRD,GAAW,GACNe,GACH,sBAAC,sBAAAlgB,EAAA,yDACM8P,EAAO2R,UADb,uBAEGve,QAAQC,IAAI,8CACZue,OAAOC,MAAQ7R,EAHlB,SAIS,IAAI2C,SAAQ,SAACkB,GAAD,OAAa7D,EAAOuL,GAAG,UAAW1H,MAJvD,OAKGzQ,QAAQC,IAAI,yBALf,uBAOO,IAAIsP,SAAQ,SAACkB,GACjB7D,EAAOqL,KAAK,eAAgBnX,EAAU2P,MARzC,wBAUOwN,KAVP,QAWCje,QAAQC,IAAI,6BACZgd,GAAY,GAZb,2CAAD,KAeD,CAACnc,EAAU8L,EAAQqR,GAAUjB,IAEhCd,qBAAU,WAKJgB,GAAMF,IACRhd,QAAQC,IAAI,2CACZid,EAAGtQ,OAAOuL,GACR,eACA,YAAsE,IAAnEuG,EAAkE,EAAlEA,KAAMN,EAA4D,EAA5DA,SACPpe,QAAQC,IAAR,iDAC4Cye,EAAKne,KADjD,gBAC6DwW,IAE7D,IAAMxX,EAAU,CACd6e,WACAO,SAAUD,EAAKxiB,GACf0iB,WAAYF,EAAKne,KACjBse,WAAW,IAAIxZ,MAAOiF,cACtByM,UAEF5L,EAAW4L,EAAQxX,SAIxB,CAAC4L,EAAY4L,EAAQiG,EAAUE,IAElChB,qBAAU,WAKJgB,GAAMF,IACRhd,QAAQC,IAAI,iDACZid,EAAGtQ,OAAOuL,GAAG,aAAb,uCAA2B,WAAOva,GAAP,SAAAd,EAAA,sDACzBkD,QAAQC,IAAI,qCAAsCrC,GAClDwf,EAAUxf,GAFe,2CAA3B,uDAKAsf,EAAGtQ,OAAOuL,GACR,wBADF,uCAEE,WAAO7P,GAAP,SAAAxL,EAAA,sDACEghB,IAAgB,SAACgB,GACf,MACGzW,GAAuBC,GAEtBwW,EAHJ,GAIA,OAJA,aAGIA,EAHJ,kBAMFd,IAAgB,SAACc,GACf,MACGzW,GAAuBC,GAEtBwW,EAHJ,GAIA,OAJA,aAGIA,EAHJ,kBATJ,2CAFF,0DAoBD,CAAC9B,EAAUE,IAEdhB,qBAAU,WACHgB,GACLA,EAAGtQ,OAAOuL,GACR,iBADF,uCAEE,iCAAArb,EAAA,sDACE4hB,EADF,EACEA,KACAK,EAFF,EAEEA,OACAxe,EAHF,EAGEA,KAOAP,QAAQC,IAAR,+BAAoCM,EAApC,wBAAwDme,EAAKne,KAA7D,MACkB,SAAdme,EAAKne,KACE,UAATA,EACImd,EAAsBqB,GACtBnB,GAAsBmB,GACH,WAAdL,EAAKne,OACL,UAATA,EACI+c,EAAqByB,GACrBvB,EAAqBuB,IAlB7B,2CAFF,yDAwBC,CAAC7B,IAEJhB,qBAAU,WACHte,GACLmN,EAAiBgM,EAAQnZ,KACxB,CAACA,EAAQmZ,IAEZ,IAAMiI,GAAcd,uBAClB,SAACe,GACc,OAATA,GAAiB/B,GAAMF,GACzB,sBAAC,sBAAAlgB,EAAA,sDACCogB,EAAG/E,GACD,UADF,uCAEE,WACEc,EACAK,EACAhR,GAHF,SAAAxL,EAAA,sDAKEkD,QAAQC,IAAR,+BAC0BgZ,EAD1B,yBAC+C3Q,EAAY/H,KAD3D,YACmE+H,EAAYpM,KAE3E+iB,IACW,UAAThG,EACF6E,IAAgB,SAACgB,GAAD,mBAAC,eACZA,GADW,mBAEbzW,GAAuBC,GAAegR,OAEvB,UAATL,GACT+E,IAAgB,SAACc,GAAD,mBAAC,eACZA,GADW,mBAEbzW,GAAuBC,GAAegR,OAI3C2C,GAAW,IArBf,2CAFF,2DADD,0CAAD,KA+BJ,CAACiB,EAAIF,IAUPd,qBAAU,WACR,GAAIgB,EAAI,CACN,IAAMgC,EAAWC,aAAY,WAC3BjC,EAAGtQ,OAAOqL,KAAK,YAAa,CAAElB,aAC7B,KACH,OAAO,kBAAMqI,cAAcF,OAE5B,CAAChC,EAAInG,IAER,IAAMsI,GAAY/kB,OAAOgB,KAAKuiB,IACxByB,GAAYhlB,OAAOgB,KAAKyiB,IAE9B,OACE,yBACEzhB,UAAU,wCACVJ,GAAE,eAAU6a,GACZlE,MAAO,CACLO,QACAC,SACAkM,WAAYzC,EAAY,UAAY,SACpC0C,QAAS1C,EAAY,OAAS,QAEhCzgB,IAAK2iB,IAEJK,GAAUnc,KAAI,SAACrI,EAAa2H,GAC3B,IAAMid,EAA6C,YAAT5kB,E5BKlCoK,SAAS,UAAY,SAAW,Q4BHlCya,EAAgBD,EAClBpC,EACAI,EAEEkC,EAAgBF,EAClBlC,EACAI,GAEEpf,EAAOkhB,EACT1C,EAAiBpd,QACjBod,EAAiBzV,SAErB,OACE,yBACEhL,UAAU,4CACVzB,IAAKA,GAEL,kBAAC,GAAD,CACEghB,UAAWgC,GAAahjB,GACxByB,UAAU,gBACVsjB,UAAU,IAGZ,yBACEtjB,UAAS,6BACG,IAAVkG,EAAc,SAAW,UADlB,gEAIRkd,GACC,kBAACtE,GAAA,EAAD,CAAoB9e,UAAU,2BAE/BqjB,GACC,kBAACE,GAAA,EAAD,CAAqBvjB,UAAU,gCAEjC,kBAAC,IAAWkf,KAAZ,CAAiBlf,UAAU,6BACxBiC,QAMV+gB,GAAUpc,KAAI,SAACrI,GAAD,OACb,kBAACyhB,GAAD,CACEzhB,IAAKA,EACLghB,UAAWkC,GAAaljB,GACxB+kB,UAAU,EACVrD,OAAQ/B,QAGVA,GACA,kBAACY,GAAA,EAAD,CACEvI,MAAO,CACLiN,SAAU,WACVC,OAAQ,GACRC,MAAO,GACPC,SAAU,GACVrL,MAAO,SAIb,kBAACsF,GAAD,CACEC,OAAQA,EACRC,cAAe,WACT8C,IACFA,EAAGgD,YACHnV,EAAiBgM,EAAQ,cACzBxO,GAAyB,SAAD,OACbwO,EADa,eAEtB,iDACA,UAINsD,SAAU,kBAAMA,EAAStD,IACzBuD,SAAU,kBAAMA,EAASvD,IACzBwD,WAAY,kBAAMA,EAAWxD,IAC7ByD,UAAWA,EACXI,UAAWA,GACXH,SAAU,kBAAMA,EAAS1D,IACzB2D,UAAW,kBAAMA,EAAU3D,IAC3B4D,cAAeA,IAEhBvc,GAAW,kBAAC,GAAD,UC1XL,SAAS+hB,GAAT,GAAgE,IAAvC/M,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,OAC7C,OACE,kBAAC,KAAM+M,OAAP,CAAcC,KAAK,WACjB,kBAAC,IAAD,CAAMxN,MAAO,CAAEO,QAAOC,UAAU/W,UAAU,mBCFhD,IAAMgkB,GAAe,CACnBxN,gBAAiB,QACjByN,UAAW,8BACXC,aAAc,OACdC,YTdqB,GSerBC,aTfqB,GSgBrBlB,QAAS,OACTmB,WAAY,SACZC,WAAY,KAGC,SAASC,GAAT,GAIU,IAHvB9kB,EAGsB,EAHtBA,MACA+kB,EAEsB,EAFtBA,SACAC,EACsB,EADtBA,MAEA,OACE,kBAAC,IAAOF,OAAR,CACEhO,MAAK,2BACAyN,IADA,IAEHU,YAAiB,OAALD,QAAK,IAALA,OAAA,EAAAA,EAAOpmB,QAAS,OAAS,OACrCsmB,eAAoB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOpmB,QAAS,OAAS,UAG1C,kBAAC,IAAD,CAAOyW,UAAU,WAAWyB,MAAO0E,IACjC,kBAAC,IAAWjG,MAAZ,CAAkBC,MAAO,EAAGsB,MAAO,CAAE2N,aAAc,IAChDzkB,GAEH,kBAAC,IAAWyf,KAAZ,KAAkBsF,IACZ,OAALC,QAAK,IAALA,OAAA,EAAAA,EAAOpmB,SACN,wBACEkY,MAAO,CAAEqO,OAAQ,EAAG7N,OAAQ,EAAGP,gBAAiB,mBAChDxW,UAAU,SAGd,kBAAC,IAAD,CAAK6kB,OAAQ,GAAItO,MAAO0E,IAAxB,OACGwJ,QADH,IACGA,OADH,EACGA,EAAO7d,KAAI,SAACke,EAAMC,GAAP,OACV,kBAAC,KAAD,CAAKxmB,IAAKwmB,GAAMD,SCnC5B,IA+BeE,GA/ByB,SAAC,GAAkC,IAAhC/hB,EAA+B,EAA/BA,QAASvE,EAAsB,EAAtBA,KAAMsB,EAAgB,EAAhBA,UAaxD,OACE,kBAAC,IAAD,CACE8U,UAAU,WACVsD,MAA8B,WAAvBnV,EAAQqf,WAA0B,MAAQ,QACjD/L,MAAO,CAAEO,MAAO,QAChB9W,UAAWA,GAEX,kBAAC,IAAD,KACE,kBAAC,IAAWkf,KAAZ,CAAiB+F,QAAM,GApBN,WACrB,OAAQhiB,EAAQqf,YACd,IAAK,SACH,OAAOjY,GAAwB3L,GAEjC,IAAK,OACH,OAAO6L,GAAyB7L,GAClC,IAAK,MACH,MAAO,aAYkBwmB,IACzB,kBAAC,IAAWhG,KAAZ,CAAiBjb,KAAK,aACnByG,aAAO,IAAI3B,KAAK9F,EAAQsf,WAAY,WAGzC,kBAAC,IAAWrD,KAAZ,KAAkBjc,EAAQ6e,YCCxBxN,GAAmBC,IAAnBD,QAAS4C,GAAU3C,IAAV2C,MAETrI,GAAeC,GAAfD,WAMF2F,GAAYC,aAJM,SAAC9R,GAAD,MAAuB,CAC7C2X,YAAaK,GAAgBhY,OAQzBwiB,GAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,GA6Q5B3Q,OA3Q2C,SAAC,GAAqB,IAAnB8F,EAAkB,EAAlBA,YAC3D,EAA4C3C,qBAA5C,mBAAOyN,EAAP,KAAuBC,EAAvB,KACA,EAA4C1N,mBAAwB,IAApE,mBAAO2N,EAAP,KAAuBC,EAAvB,KACA,EAA0C5N,oBAAS,GAAnD,mBAAO0G,EAAP,KAAsBmH,EAAtB,KACA,EAAwB7N,mBAAqB,GAA7C,mBAAO8N,EAAP,KAAaC,EAAb,KACA,EAA0C/N,mBARf,IAQ3B,mBAAOgO,EAAP,KAAsBC,EAAtB,KACA,EAAwBjO,mBAAS,GAAjC,mBAAOkO,EAAP,KAAaC,EAAb,KACA,EAAoCnO,mBAAiB,IAArD,mBAAOoO,EAAP,KAAmBC,EAAnB,KACMC,EAActT,aAAY,SAAChQ,GAAD,OAAsBA,EAAMmH,MAAM6E,YAE5DuX,EAAuBxG,iBAAuB,MAEpD,EAAkC/H,mBAEhC,IAFF,mBAAOwO,EAAP,KAAkBC,EAAlB,KAKA,EAA2CzO,mBACzC,IADF,mBAAO0O,EAAP,KAAwBC,EAAxB,KAIM5W,EAAW8C,KAEjBoN,qBAAU,WACHsG,EAAqBrG,SAC1BqG,EAAqBrG,QAAQ0G,OAAO,CAClCC,IAAKN,EAAqBrG,QAAQ4G,aAClCC,KAAM,EACNC,SAAU,aAEX,CAACT,EAAsBZ,IAE1B1F,qBAAU,WACR,IAAMgD,EAAWC,aAAY,WAC3BnT,EACElB,GAAW,CACT,cAAe,CAAC,OAAQ,wBAG3B,KACH,OAAO,kBAAMsU,cAAcF,MAC1B,IAEHhD,qBAAU,WACR,IAAMgH,EAAWtM,EAAYrQ,QAC3B,SAACvL,GAAD,OACEA,EAAK2P,gBACH1C,GAAwBjN,EAAK2P,gBAAiB8X,MAEpDH,EAAcY,KACb,CAACT,EAAW7L,IAEfsF,qBAAU,WACR,GAAKmG,EAAW1nB,OAAhB,CAEA,IAHc,EAGRwoB,EAA8C,GAHtC,eAKKd,GALL,IAKd,2BAA+B,CAAC,IAArBrnB,EAAoB,QAC7B,GAAKA,EAAK2P,aAAV,CACA,IAAMnQ,EAASyN,GAAwBjN,EAAK2P,cAE5C,KAAInQ,KAAU2oB,GAAd,CAEA,IAAMC,EAAkBC,KAAGtS,QAAQvW,EAAQ,CAAE8oB,WAAY,CAAC,eAC1DH,EAAK3oB,GAAU4oB,KAZH,8BAcdpjB,QAAQC,IAAI,6BAA8BkjB,GAC1CT,GAAa,SAACa,GAAD,mBAAC,eAAeA,GAASJ,SACrC,CAACd,IAGJnG,qBAAU,WAER,GAAKtF,EAAYjc,OAEZ,GAAK+mB,EAKRG,EAAkBU,EAAYb,EAAexlB,KAAO,QAL5B,CACxB,IAAMsnB,EAAoB5M,EAAY,GACtC+K,EAAkB6B,GAClB3B,EAAkBU,EAAYiB,EAAkBtnB,KAAO,OAIxD,CAAC0a,EAAa8K,EAAgBa,IAGjC,IAAMkB,EAAmB,SAAC1B,GACxBC,EAAQD,GACRG,EAAiBhgB,GAAkB6f,KAW/B2B,EAAoBxF,uBACxB,SAACnH,EAAgBxX,GACfyM,EAASb,GAAW,CAAEjP,GAAI6a,EAAQxX,eAEpC,IAGF,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACExD,MAAK,sBAAiB6a,EAAYjc,OAA7B,KACLmmB,SAAS,yEAEX,kBAAC,IAAD,KACE,kBAAC,GAAD,KACE,kBAAC,IAAD,CACE1P,UAAU,WACVyB,MAAK,2BAAO0E,IAAeJ,KAEH,IAAvBP,EAAYjc,QACX,kBAAC,KAAD,CAAO+M,YAAY,2CAEpBkP,EAAYjc,OAAS,GACpB,kBAAC,KAAD,CACEwhB,QAASgG,EACTwB,eAAgB,EAChBC,gBAAiB7B,EACjB8B,SAnCO,SAAC1B,EAAcxS,GAClCyS,EAAQD,IAmCI2B,SAAU/B,EACVgC,gBAAiBtC,GAAQlb,QACvB,SAACyd,GAAD,OAAYA,GAAUpN,EAAYjc,UAClCuI,KAAI,SAAC+gB,GAAD,gBAAUA,MAChBC,MAAOtN,EAAYjc,OACnBwpB,iBAAiB,EACjBC,iBAtCW,SAACzU,EAAWmU,GACnCL,EAAiBK,MAwCT,kBAAC,IAAD,CAAK3C,OAAQ,IACVvK,EAAY1T,KAAI,SAAClI,EAAMqmB,GACtB,IAAKrmB,EAAK2P,aACR,OACE,kBAAC,KAAD,CAAK0Z,KAAMziB,GAAmBmgB,GAAOlnB,IAAKG,EAAKkB,IAC7C,kBAACikB,GAAD,CACE/M,MAAM,OACNC,OAAM,UAAK4O,EAAL,SAKd,IAAMrV,EACJ6V,EAAUxa,GAAwBjN,EAAK2P,eAEzC,OAAKiC,EAEH,kBAAC,KAAD,CAAKyX,KAAMziB,GAAmBmgB,GAAOlnB,IAAKG,EAAKkB,IAC7C,kBAAC,GAAD,CACEmX,OAAM,UAAK4O,EAAL,MACNrV,OAAQA,EACRmK,OAAQ/b,EAAKkB,GACb6gB,iBAAkB,CAChBpd,QAASgH,GAAwB3L,GACjCsM,SAAUT,GAAyB7L,IAErC8hB,UACEuE,IAAQc,EAAO,GAAKJ,GACpBV,GAAOc,EAAO,GAAKJ,EAAOA,EAE5B3O,MAAM,OACN+G,OAAQhY,GACRmY,SAAU,SAACvD,GAAD,OACR6L,EAAgBjT,KAAE2U,KAAK3B,EAAiB5L,KAE1CwD,WAAY,SAACxD,GAAD,OACV6L,EAAgB,2BACXD,GADU,mBAEZ5L,GAAS,MAGdyD,UAAWxf,EAAKkB,MAAMymB,EACtBlI,SAAU,SAAC1D,GACT,IAAM/b,EAAO4b,EAAY2N,MACvB,SAACvpB,GAAD,OAAUA,EAAKkB,KAAO6a,KAExB4K,EAAkB3mB,GAClB8mB,GAAiB,IAEnBpH,UAAW,SAAC3D,GACV+K,GAAiB,IAEnBnH,cAAeA,EACfxP,WAAYuY,EACZrJ,SAAU,SAACtD,GACT,IAAMsK,EAAMzK,EAAY4N,WACtB,SAACxpB,GAAD,OAAUA,EAAKkB,KAAO6a,MAEX,IAATsK,IACFoC,EAAiB,GACjBrB,EAAQf,EAAM,GACdM,EAAkB/K,EAAYyK,MAGlCtW,iBAAkB,SAAC7O,EAAY0B,GAAb,OAChBoO,EAASjB,GAAiB,CAAE7O,KAAI0B,gBAlDpB,oCA2D5B,kBAAC,GAAD,CACEiX,MAAM,QACNzB,MAAO,IACPmB,aAAW,EACXkQ,kBAAgB,EAChBC,cAAY,EACZxQ,UAAWyG,EACXnG,WAAY,SAACN,GAAD,OAAe4N,EAAiB5N,IAC5C5X,UAAU,wCAERqe,GACA,yBAAKte,IAAKmmB,EAAsBlmB,UAAU,SACxC,kBAAC,KAAD,CACEP,MAAM,OACNglB,MAAO,CACL,kBAAC,KAAD,CACExe,MAAK,OAAEmf,QAAF,IAAEA,OAAF,EAAEA,EAAgBxlB,GACvByoB,SAAU,SAACzoB,GACTylB,EAAkB/K,EAAY2N,MAAK,SAACK,GAAD,OAAOA,EAAE1oB,KAAOA,QAGpD0a,EAAY1T,KAAI,SAAC2T,GAAD,OACf,kBAAC,KAAOgO,OAAR,CACEtiB,MAAOsU,EAAW3a,GAClBrB,IAAKgc,EAAW3a,GAChBI,UAAU,mBAETwL,GAAc+O,EAAWlX,SAL5B,KAKwC,IACrCmI,GAAc+O,EAAWvP,kBAKjC,IACH,yBACEhL,UAAU,gBACVuW,MAAK,eACAsE,IAEL9a,IAAKmmB,GAEJd,GACCE,EAAe1e,KAAI,SAAC3D,GAAD,OACjB,kBAAC,GAAD,CACEA,QAASA,EACTvE,KAAM0mB,EACNplB,UAAU,oB,8BCvOjBwoB,I,OA7DuB,SAAC,GAAqB,IAAnBlO,EAAkB,EAAlBA,YACvC,EAA4B3C,mBAAuB,IAAnD,mBAAO8Q,EAAP,KAAeC,EAAf,KAYA9I,qBAAU,WACR8I,EACEpO,EAAY1T,KAAI,SAAC2T,GAAD,OpCnBgB,SAAC7b,GACrC,IAAMiqB,EAAejqB,EAAKsM,SAAS9C,QACjC,SAAC0gB,EAAMC,GAAP,gBAAkBD,EAAlB,aAA2B9iB,GAAY+iB,MACvC,IAEIC,EAAcpqB,EAAK2E,QAAQ6E,QAC/B,SAAC0gB,EAAMC,GAAP,gBAAkBD,EAAlB,aAA2B9iB,GAAY+iB,MACvC,IAEF,MAAO,CACLppB,MAAM,GAAD,OAAKqpB,EAAL,eAAuBH,GAC5B5e,MAAOrL,EAAK6H,eACZyD,IAAKtL,EAAKwL,coCOwB6e,CAAuBxO,SAExD,CAACD,IAaJ,OACE,yBAAKta,UAAU,iBACb,kBAAC,KAAD,CACEgpB,QAAS,CAACC,KAAeC,KAAgBC,MACzCC,cAAe,CACb1C,KAAM,kBACN2C,OAAQ,QACR3F,MAAO,yCAET4F,YAAY,eACZC,UAAU,EACVC,YAAY,EACZC,cAAc,EACdC,cAAc,EACdC,UAAU,EACVC,eAAe,EACfnB,OAAQA,EACRoB,aA5BqB,SACzBA,GAEA,OACE,oCACE,2BAAIA,EAAaC,UACjB,2BAAID,EAAatM,MAAM9d,SAuBvBsqB,WA7CmB,SAACC,GAEtB9H,OAAO+H,QAAP,qDACgDD,EAAUzM,MAAM9d,MADhE,OAIAuqB,EAAUzM,MAAM2M,eClBd5V,GAAYC,IAAZD,QAsBOE,GAjBGC,aAJM,SAAC9R,GAAD,MAAuB,CAC7C2X,YAAaD,GAAa1X,EAAOkX,GAAelX,OAoBnC6R,EAbqD,SAAC,GAE9D,IADL8F,EACI,EADJA,YAEA,OACE,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAY7a,MAAM,aAClB,yBAAK8W,MAAOsE,IACV,kBAAC,GAAD,CAAcP,YAAaA,SCd5B,SAAS6P,KACd,MAAsCxS,mBAAuB,IAA7D,mBAAOlL,EAAP,KAAoB2d,EAApB,KACMC,EAAkB3X,GAAeuG,IACjCrO,EAAc8H,GAAeiH,IAC7BhN,EAAa+F,GAAe8G,IAWlC,OATAoG,qBAAU,WACR,IAAM0K,EAAWD,EAAgBpgB,QAC/B,SAACyC,GAAD,MAAsC,YAAtBA,EAAWpL,UAE7B8oB,EACE5d,GAA0B8d,EAAU1f,EAAa+B,MAElD,CAAC0d,EAAiBzf,EAAa+B,IAE3BF,E,wBCHM8d,GAZK,SAAC,GAAkC,IAAhC3d,EAA+B,EAA/BA,QAAS4d,EAAsB,EAAtBA,SAC9B,OACE,kBAAC,IAAD,CAAO1V,UAAU,YACf,kBAAC,IAAWoK,KAAZ,cAAwBpZ,GAAY8G,IACpC,kBAAC,IAAWsS,KAAZ,oBAA8BtS,EAAQhN,IACtC,kBAAC,IAAW6qB,KAAZ,CAAiBzS,QAAS,kBAAMwS,EAAS,aAAD,OAAc5d,EAAQhN,OAA9D,uBCaS8qB,GAjBI,SAAC,GAAiC,IAA/B7d,EAA8B,EAA9BA,OAAQ2d,EAAsB,EAAtBA,SAC5B,OACE,kBAAC,IAAD,CAAO1V,UAAU,YACf,kBAAC,IAAWoK,KAAZ,cAAwBpZ,GAAY+G,IACpC,kBAAC,IAAWqS,KAAZ,mBACcrS,EAAO8d,sBAErB,kBAAC,IAAWzL,KAAZ,aACQxU,aAAO,IAAI3B,KAAK8D,EAAO+d,aAAc,aAE7C,kBAAC,IAAWH,KAAZ,CAAiBzS,QAAS,kBAAMwS,EAAS,YAAD,OAAa3d,EAAOjN,OAA5D,uBC+ESirB,GAlFY,SAAC,GAMd,IALZpe,EAKW,EALXA,YACAqe,EAIW,EAJXA,OACAxX,EAGW,EAHXA,OACAkX,EAEW,EAFXA,SACA1oB,EACW,EADXA,QAEA,OACE,kBAAC,KAAD,CAAOipB,WAAYte,EAAa3K,QAASA,GACvC,kBAAC,KAAMkpB,OAAP,CACEvrB,MAAM,GACNwrB,UAAU,SACV1sB,IAAI,mBACJ8X,OAAQ,SAACxJ,GAAD,OACN,oCAEI,kBAAC,GAAD,CACEgK,IAAKhK,EAAOqe,iBACZtU,SAAU9Q,GAAY+G,GACtBgJ,KAAM,SAMhB,kBAAC,KAAMmV,OAAP,CACEvrB,MAAM,SACNwrB,UAAU,SACV1sB,IAAI,mBACJ8X,OAAQ,SAACxJ,GAAD,OACN,oCACE,kBAAC,GAAD,CAAYA,OAAQA,EAAQ2d,SAAUA,QAI5C,kBAAC,KAAMQ,OAAP,CACEvrB,MAAM,GACNwrB,UAAU,UACV1sB,IAAI,oBACJ8X,OAAQ,SAACzJ,GAAD,OACN,oCACE,kBAAC,GAAD,CACEiK,IAAKjK,EAAQse,iBACbtU,SAAU9Q,GAAY8G,GACtBiJ,KAAM,SAKd,kBAAC,KAAMmV,OAAP,CACEvrB,MAAM,UACNwrB,UAAU,UACV1sB,IAAI,cACJ8X,OAAQ,SAACzJ,GAAD,OACN,oCACE,kBAAC,GAAD,CAAaA,QAASA,EAAS4d,SAAUA,QAI/C,kBAAC,KAAMQ,OAAP,CACEvrB,MAAM,eACNwrB,UAAU,eACV1sB,IAAI,iBAEN,kBAAC,KAAMysB,OAAP,CACEvrB,MAAM,GACNlB,IAAI,UACJ8X,OAAQ,SAAC8U,EAAOlP,GAAR,OACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQhY,KAAK,UAAU+T,QAAS,kBAAM8S,EAAO7O,KAA7C,UAGA,kBAAC,IAAD,CAAQmP,QAAM,EAACpT,QAAS,kBAAM1E,EAAO2I,KAArC,gBCxFGsI,MC2DA8G,GA3CgB,WAC7B,IAAM5e,ELSD,WACL,MAAgCkL,mBAAuB,IAAvD,mBAAO2S,EAAP,KAAiBgB,EAAjB,KAEM7e,EAAc0d,KAQpB,OANAvK,qBAAU,WACR0L,EACE7e,EAAYxC,QAAO,SAACyC,GAAD,MAAsC,YAAtBA,EAAWpL,aAE/C,CAACmL,IAEG6d,EKpBaiB,GAEd7b,EAAW8C,KACX1Q,EAAU4Q,IACd,SAAC/P,GAAD,OAAsBA,EAAM8J,YAAY3K,WAGpC0pB,EAAyB,SAC7BvP,EACA3a,GAEAoO,EAAS1C,GAAiB,CAAEC,aAAcgP,EAAQrc,GAAI0B,aAQxD,OALAse,qBAAU,WAERlQ,EAASxC,QACR,CAACwC,IAGF,kBAAC,IAAO4E,QAAR,KACE,kBAAC,GAAD,CACE7U,MAAM,oBACN+kB,SAAS,oHAEX,yBAAKjO,MAAOsE,IACV,kBAAC,GAAD,CACEiQ,OAAQ,SAACpe,GAAD,OACN8e,EAAuB9e,EAAY,WAErC4G,OAAQ,SAAC5G,GAAD,OACN8e,EAAuB9e,EAAY,aAErCD,YAAaA,EACb+d,SAAU,SAACiB,GAAD,OAAkB/b,EAAShJ,aAAK+kB,KAC1C3pB,QAASA,OChDX4pB,G,OAAgBC,EAAhBD,YAQO,SAASE,GAAT,GAIS,EAHtBC,YAGuB,IAFvBC,EAEsB,EAFtBA,aACAC,EACsB,EADtBA,WAeA,OACE,kBAAC,IAAD,CAAO3T,MAAM,UACX,kBAACsT,GAAD,CACEnE,SAAU,SAACze,GACJA,IACDA,EAAK,IAAIgjB,EAA8B,IAAjBhjB,EAAK,GAAGkjB,QAC9BljB,EAAK,IAAIijB,EAA4B,IAAjBjjB,EAAK,GAAGkjB,a,oCC6G3BC,GAlI2B,SAAC,GAKpC,IAJLniB,EAII,EAJJA,MACAoiB,EAGI,EAHJA,UACA1B,EAEI,EAFJA,SACA2B,EACI,EADJA,oBA4BA,OACE,kBAAC,KAAD,CAAOpB,WAAYjhB,EAAOhI,QAASoqB,GACjC,kBAAC,KAAMlB,OAAP,CACEvrB,MAAM,OACNwrB,UAAU,iBACV1sB,IAAI,OACJ8X,OAAQ,SAACxN,GAAD,OACN,oCACE,8BAAO6B,aAAO,IAAI3B,KAAKF,GAAO,iBAIpC,kBAAC,KAAMmiB,OAAP,CACEvrB,MAAM,aACNwrB,UAAU,iBACV1sB,IAAI,YACJ8X,OAAQ,SAACxN,GAAD,OACN,oCACE,8BAAO6B,aAAO,IAAI3B,KAAKF,GAAO,cAIpC,kBAAC,KAAMmiB,OAAP,CACEvrB,MAAM,WACNwrB,UAAU,eACV1sB,IAAI,UACJ8X,OAAQ,SAACxN,GAAD,OACN,oCACE,8BAAO6B,aAAO,IAAI3B,KAAKF,GAAO,cAIpC,kBAAC,KAAMmiB,OAAP,CACEvrB,MAAM,uBACNwrB,UAAU,UACV1sB,IAAI,aACJ8X,OAAQ,SAAChT,GAAD,OACNA,EAAQuD,KAAI,SAACiG,GAAD,OACV,oCACE,8BAAO/G,GAAY+G,WAK3B,kBAAC,KAAMme,OAAP,CACEvrB,MAAM,qBACNwrB,UAAU,UACV1sB,IAAI,YACJ8X,OAAQ,SAAChT,GAAD,OACNA,EAAQuD,KAAI,SAACiG,GAAD,OACV,oCACE,8BAAOA,EAAO8d,6BAKtB,kBAAC,KAAMK,OAAP,CACEvrB,MAAM,eACNwrB,UAAU,WACV1sB,IAAI,cACJ8X,OAAQ,SAACzJ,GAAD,OACNA,EAAQhG,KAAI,SAACgG,GAAD,OACV,oCACE,8BAAO9G,GAAY8G,WAK3B,kBAAC,KAAMoe,OAAP,CACEvrB,MAAM,SACNwrB,UAAU,SACV1sB,IAAI,WACJ8X,OAAQ,SAAC/U,GAAD,OACN,oCACE,kBAAC,KAAD,M7CMegG,E6CNEhG,G7COlBjD,OACFiJ,EAAI8kB,OAAO,GAAGC,cAAgB/kB,EAAIglB,MAAM,GADvB,KADnB,IAAoBhlB,K6CFrB,kBAAC,KAAM0jB,OAAP,CACEvrB,MAAM,qBACNwrB,UAAU,OACV1sB,IAAI,OACJ8X,OAAQ,SAACpS,GAAD,OACN,oCACE,kBAAC,KAAD,K1CkLsB,SAACA,GACjC,OAAQA,GACN,KAAK2D,GAAe2kB,iBAClB,MAAO,sBACT,KAAK3kB,GAAe4kB,4BAClB,MAAO,yBACT,KAAK5kB,GAAe6kB,kBAClB,MAAO,c0CzLKC,CAAmBzoB,QAK/B,kBAAC,KAAM+mB,OAAP,CACEvrB,MAAM,YACNlB,IAAI,SACJ8X,OAAQ,SAAC8U,EAAO5Q,GAAR,OAtHO,SAACA,GACpB,OAAQA,EAAWjZ,QACjB,IAAK,YACH,OACE,kBAAC,IAAD,CACE0W,QAAS,kBAAMmU,EAAoB5R,IACnC9B,KAAM,kBAACkU,GAAA,EAAD,OAFR,UAOJ,IAAK,QACL,IAAK,aACH,OACE,kBAAC,IAAD,CACE3U,QAAS,kBAAMwS,EAAS,SAAD,OAAUjQ,EAAW3a,MAC5C6Y,KAAM,kBAACmU,GAAA,EAAD,OAFR,QAOJ,QACE,OAAO,+BAgG8BC,CAAatS,QCtHpDuS,GAAoD,CACxD,0CAA2C,YAC3C,8BAA+B,mBAC/B,4BAA6B,eAC7B,sBAAuB,aACvB,aAAc,QACdxrB,OAAQ,UC3BKyrB,GD+BK,SAAC,GAKP,IAJZjjB,EAIW,EAJXA,MACA0gB,EAGW,EAHXA,SACAhc,EAEW,EAFXA,WACA2d,EACW,EADXA,oBAEA,EAAwCxU,mBAAiB,IAAzD,mBAAOqV,EAAP,KAAqBC,EAArB,KACA,EAAsCtV,mBAAiB,IAAvD,mBAAOuV,EAAP,KAAoBC,EAApB,KACA,EAA4BxV,mBAAiB,IAA7C,mBAAOyV,EAAP,KAAeC,EAAf,KACA,EAAgB1V,mBAAS,KAAlB2V,EAAP,oBACA,EAAiB3V,mBAAS,GAAnB4V,EAAP,oBACA,EAAkC5V,qBAAlC,mBAAO6V,EAAP,KAAkB1B,EAAlB,KACA,EAA8BnU,qBAA9B,mBAAO8V,EAAP,KAAgB1B,EAAhB,KACA,EAAsCpU,qBAAtC,mBAAO+V,EAAP,KAAoBC,EAApB,KACA,EAA8BhW,oBAAkB,GAAhD,mBAAO7V,EAAP,KAAgB6d,EAAhB,KACA,EAAoDhI,mBAClD,2CADF,mBAAOiW,EAAP,KAA2BC,EAA3B,KAGA,EAAwDlW,mBAEtD,IAFF,mBAAOmW,EAAP,KAA6BC,EAA7B,KAIA,EAA4DpW,qBAA5D,mBAAOqW,GAAP,KAIMC,IAJN,KAIqBrM,sBACnBvO,KAAE6a,UAAS,kBAAMb,EAAUH,KAAc,KACzC,CAACA,KAOHtN,qBAAU,WAER,OADAqO,KACOA,GAAaE,SACnB,CAACjB,EAAae,KAEjBrO,qBAAU,WACRD,GAAW,GACX,sBAAC,4BAAAnf,EAAA,+EACCgO,GAAU,8BACJof,GAA4CR,GADxC,gCAGNI,GAAaC,EACT,CAAEjnB,WAAYgnB,EAAW/mB,SAAUgnB,QACnC9lB,GALE,6BAMR+lB,GANQ,uBAORJ,GAPQ,wBAQRC,GARQ,KADX,0CAAD,GAWQxL,MAAK,kBAAMpC,GAAW,QAC7B,CACDnR,EACA8e,EACAC,EACAC,EACAC,EACAC,EACAN,EACAQ,EACAI,KAGFpO,qBAAU,WACR,IAAIwO,EAAgBtkB,EAUpB,GARI0jB,GAAaC,IACfW,EAAgBA,EAAcnkB,QAC5B,SAACtG,GAAD,OACE,IAAIoF,KAAKpF,EAAI4C,iBAAmB,IAAIwC,KAAKykB,IACzC,IAAIzkB,KAAKpF,EAAI4C,iBAAmB,IAAIwC,KAAK0kB,OAI3CP,EACF,OAAQU,GACN,IAAK,0CACHQ,EAAgBA,EAAcnkB,QAAO,SAACtG,GAAD,OACnCA,EAAIN,QAAQgrB,MAAK,SAACxhB,GAAD,OACftE,GAAY2kB,EAAargB,EAAO8d,4BAGpC,MACF,IAAK,8BACHyD,EAAgBA,EAAcnkB,QAAO,SAACtG,GAAD,OACnCA,EAAIN,QAAQgrB,MAAK,SAACxhB,GAAD,OACftE,GAAY2kB,EAAargB,EAAOvI,gBAGpC,MACF,IAAK,4BACH8pB,EAAgBA,EAAcnkB,QAAO,SAACtG,GAAD,OACnCA,EAAIqH,SAASqjB,MAAK,SAACzhB,GAAD,OAChBrE,GAAY2kB,EAAatgB,EAAQtI,gBAGrC,MACF,IAAK,sBACH8pB,EAAgBA,EAAcnkB,QAAO,SAACtG,GAAD,OACnCA,EAAIqH,SAASqjB,MAAK,SAACzhB,GAAD,OAAaA,EAAQhN,KAAOstB,QAEhD,MACF,IAAK,aACHkB,EAAgBA,EAAcnkB,QAAO,SAACvL,GAAD,OACnC6J,GAAY2kB,EAAaxuB,EAAK+L,MAAMxI,SAajB,WAAvB2rB,GAAmCE,EAAqBzvB,SAC1D+vB,EAAgBA,EAAcnkB,QAAO,SAACvL,GAAD,OACnCovB,EAAqBnlB,SAASjK,EAAK4C,YAIvC2rB,EAAgBmB,KACf,CACDtkB,EACAmjB,EACAO,EACAC,EACAG,EACAV,EACAY,EACAE,KAGF,IAAMM,GAAkBC,GAA2BtkB,QACjD,SAACc,GAAD,OAAQ+iB,EAAqBnlB,SAASoC,EAAE9E,UAGJuoB,GAA+BvkB,QACnE,SAAChG,GAAD,OAAU+pB,KAA2B/pB,EAAKgC,SA+C5C,OACE,kBAAC,IAAOqO,QAAR,KACE,kBAAC,GAAD,CACE7U,MAAM,6BACN+kB,SAAS,uEACTC,MAAO,CACL,kBAAC,IAAMgK,MAAP,CAAaC,SAAO,GAClB,kBAAC,KAAD,CACEC,aAAc3wB,OAAOgB,KAAK8tB,IAAqB,GAC/CzE,SAAU,SAACpiB,GAAD,OAAW4nB,EAAsB5nB,KAE1CjI,OAAOgB,KAAK8tB,IAAqBlmB,KAAI,SAACrI,GAAD,OACpC,kBAAC,KAAOgqB,OAAR,CAAehqB,IAAKA,EAAK0H,MAAO1H,GAC7BuuB,GAAoBvuB,QAIH,WAAvBqvB,EA7DgB,WACzB,OAAQA,GACN,IAAK,SACH,OACE,kBAAC,KAAD,CACExa,KAAK,WACLwb,YAAU,EACVrY,MAAO,CAAEO,MAAO,OAAQ+X,SAAU,KAClCpZ,YAAY,wBACZ8R,SAAU,SAACthB,GAAD,OAAW8nB,EAAwB9nB,KAE5CqoB,GAAgB1nB,KAAI,SAACkoB,GAAD,OACnB,kBAAC,KAAOvG,OAAR,CAAehqB,IAAKuwB,EAAEvwB,IAAK0H,MAAO6oB,EAAE7oB,OACjC6oB,EAAE5nB,WA0Bb,QACE,OAAO,+BAsBD6nB,GAEA,kBAAC,IAAMC,OAAP,CACEzY,MAAO,CAAEO,MAAO,QAChBrB,YAAW,oBAAeqX,GAAoBc,GAAnC,OACXgB,YAAU,EACV3oB,MAAOinB,EACP3F,SAxLa,SAACI,GAC1BwF,EAAexF,EAAEzpB,OAAO+H,QAwLZgpB,SAAU,SAAChpB,GACTonB,EAAUpnB,OAKlB,kBAAC2lB,GAAD,CACEE,aAAcA,EACdC,WAAYA,EACZF,YAAa8B,OAInB,yBAAKpX,MAAOsE,IACV,kBAAC,GAAD,CACE/Q,MAAOkjB,EACPd,UAAWpqB,EACX0oB,SAAUA,EACV2B,oBAAqBA,OEjOhB3X,GAnBGC,aAZM,SAAC9R,GAAD,MAAuB,CAC7CusB,KAAM7U,GAAa1X,EAAOkX,GAAelX,IAAQsH,QAC/C,SAACvL,GAAD,MACkB,UAAhBA,EAAK4C,QACW,eAAhB5C,EAAK4C,QACW,cAAhB5C,EAAK4C,cAIgB,SAACoO,GAAD,OACzByf,YAAmB,CAAE3gB,eAAckB,KAqBtB8E,EAfmC,SAAC,GAA0B,IAAxB0a,EAAuB,EAAvBA,KAAM1gB,EAAiB,EAAjBA,WACnDkB,EAAW8C,KAEjB,OACE,kBAAC,GAAD,CACE1I,MAAOolB,EACP1gB,WAAYA,EACZgc,SAAU,SAACiB,GAAD,OAAkB/b,EAAShJ,aAAK+kB,KAC1CU,oBAAqB,SAACztB,GAAD,OACnBgR,EAAS+B,GAAU,CAAED,WAAY,oBAAqBzL,OAAQrH,W,sBChC9D6pB,GAAW6G,KAAX7G,OAWO,SAAS8G,GAAT,GAGU,IAFvBzuB,EAEsB,EAFtBA,KACA2mB,EACsB,EADtBA,SAEA,EAAe+H,IAAKC,UAAbC,EAAP,oBAEA,OACE,kBAAC,IAAD,CAAMA,KAAMA,EAAMvtB,KAAK,iBACrB,kBAAC,IAAKmT,KAAN,CACEnT,KAAK,QACLiF,MAAM,QACNmO,MAAO,CAAC,CAAEpR,KAAM,QAASqR,UAAU,KAEnC,kBAAC,IAAD,CACEG,YAAY,QACZF,OAAQ,kBAACka,GAAA,EAAD,CAAczvB,UAAU,wBAChCiG,MAAOrF,EAAKc,MACZ6lB,SAAU,SAAChK,GAAD,OAAWgK,EAAS,2BAAK3mB,GAAN,IAAYc,MAAO6b,EAAMrf,OAAO+H,aAGjE,kBAAC,IAAKmP,KAAN,CAAWnT,KAAK,SAASiF,MAAM,OAAOmO,MAAO,CAAC,CAAEC,UAAU,KACxD,kBAAC,KAAD,CACEG,YAAY,gBACZxP,MAAOrF,EAAKe,KACZ4lB,SAAU,SAACthB,GAAD,OAAWshB,EAAS,2BAAK3mB,GAAN,IAAYe,KAAMsE,MAC/C2oB,YAAU,GAEV,kBAACrG,GAAD,CAAQtiB,MAAM,SAAd,SACA,kBAACsiB,GAAD,CAAQtiB,MAAM,gBAAd,gBACA,kBAACsiB,GAAD,CAAQtiB,MAAM,SAAd,YC/BV,IAAQ+kB,GAAW0E,KAAX1E,OACA1W,GAAYC,IAAZD,QAwHOE,GA/GGC,aAPM,SAAC9R,GAAD,MAAuB,CAC7ChC,MAAOmZ,GAAenX,OAGG,SAAC+M,GAAD,OACzByf,YAAmB,CAAEruB,eAAe4O,KAiHvB8E,EA5GkC,SAAC,GAA4B,IAA1B7T,EAAyB,EAAzBA,MAClD,GAD2E,EAAlBG,YACvB6W,mBAAmC,OAArE,mBAAOgY,EAAP,KAAkBC,EAAlB,KACA,EAAgCjY,qBAAhC,mBAAOxH,EAAP,KAAiBmB,EAAjB,KACA,EAA4CqG,oBAAS,GAArD,mBAAOkY,EAAP,KAAuBC,EAAvB,KACA,EAAgCnY,mBAA0B,CACxDjW,MAAO,GACPC,KAAM,KAFR,mBAAOouB,EAAP,KAAiBC,EAAjB,KAKMC,EAAW,WAEf,OADAH,GAAkB,GACVH,GACN,IAAK,OACH,GAAIxf,EAAU,MAGlB2f,GAAkB,IAGpB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACErwB,MAAM,QACN+kB,SAAS,2EAUX,yBAAKjO,MAAOsE,IACV,kBAAC,KAAD,CAAOkQ,WAAYpqB,GACjB,kBAACqqB,GAAD,CACEvrB,MAAM,GACNlB,IAAI,mBACJ8X,OAAQ,SAAC8U,EAAO+E,GAAR,OACN,oCACE,kBAAC,GAAD,CACErZ,IAAKqZ,EAAOhF,iBACZtU,SAAU9Q,GAAYoqB,GACtBra,KAAM,SAKd,kBAACmV,GAAD,CAAQvrB,MAAM,aAAawrB,UAAU,YAAY1sB,IAAI,cACrD,kBAACysB,GAAD,CAAQvrB,MAAM,YAAYwrB,UAAU,WAAW1sB,IAAI,aACnD,kBAACysB,GAAD,CACEvrB,MAAM,OACNwrB,UAAU,OACV1sB,IAAI,OACJ8X,OAAQ,SAAC1U,GAAD,OACN,oCACE,kBAAC,KAAD,CAAK2W,MAAM,OAAO/Z,IAAKoD,GACpBA,GAAQ,gBAKjB,kBAACqpB,GAAD,CACEvrB,MAAM,GACNlB,IAAI,OACJ8X,OAAQ,SAAC8U,EAAO+E,GAAR,OACN,kBAAC,IAAD,CACElY,QAAS,WACP1G,EAAY4e,GACZN,EAAa,UAHjB,aAaR,kBAAC,KAAD,CACEnwB,MAAM,YACN0f,QAAuB,WAAdwQ,EACTvQ,KAAM6Q,EACNJ,eAAgBA,EAChBxQ,SAAU,kBAAMuQ,EAAa,QAE7B,kBAACP,GAAD,CAAiBzuB,KAAMmvB,EAAUxI,SAAUyI,KAE7C,kBAAC,KAAD,CACEvwB,MAAM,aACN0f,QAAuB,SAAdwQ,EACTvQ,KAAM6Q,EACNJ,eAAgBA,EAChBxQ,SAAU,kBAAMuQ,EAAa,QAE5Bzf,GACC,kBAAC,IAAD,CAAO2E,UAAU,WAAWe,KAAK,QAAQU,MAAO,CAAEO,MAAO,SACvD,uCAAahR,GAAYqK,IACzB,uCAAaA,EAASxO,MACtB,wCAAcwO,EAASzO,OACvB,kBAAC,KAAD,YCjHJ4S,GAAYC,IAAZD,QAMF6b,GAAqB,CAAEzpB,WAsGd8N,GApGGC,aANM,SAAC9R,GAAD,MAAuB,CAC7CU,QAASgW,GAAiB1W,MAKewtB,GAoG5B3b,EAhG8C,SAAC,GAGvD,IAFLnR,EAEI,EAFJA,QACAqD,EACI,EADJA,KAEA,EAAsCiR,mBAAiB,IAAvD,mBAAOuV,EAAP,KAAoBC,EAApB,KACA,EAA8CxV,mBAAmB,IAAjE,mBAAOyY,EAAP,KAAwBC,EAAxB,KAEAzQ,qBAAU,WACRyQ,EACEnD,EAAY7uB,OACRgF,EAAQ4G,QAAO,SAAC9L,GAAD,OACboK,GAAY2kB,EAAa/uB,EAAEwsB,yBAE7BtnB,KAEL,CAACA,EAAS6pB,IAEb,IAAMoD,EAAU,CACd,CACE7wB,MAAO,GAEP8pB,UAAU,EACVlT,OAAQ,SAAC8U,EAAete,GAAhB,OACN,oCACE,kBAAC,GAAD,CACE+J,SAAU9Q,GAAY+G,GACtBgK,IAAKhK,EAAOqe,iBACZrV,KAAM,QAKd,CACEpW,MAAO,YACPwrB,UAAW,uBACX1B,UAAU,GAEZ,CACE9pB,MAAO,aACPwrB,UAAW,YACX1B,UAAU,GAEZ,CACE9pB,MAAO,YACPwrB,UAAW,WACX1B,UAAU,GAEZ,CACE9pB,MAAO,WACPwrB,UAAW,WACX1B,UAAU,GAEZ,CACE9pB,MAAO,GACPlB,IAAK,SACLgrB,UAAU,EACVlT,OAAQ,SAAC8U,EAAete,GAAhB,OACN,oCACE,kBAAC,IAAD,CACEmL,QAAS,kBAAMtR,EAAK,YAAD,OAAamG,EAAOjN,MACvC6Y,KAAM,kBAACmU,GAAA,EAAD,OAFR,YAWR,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACEntB,MAAM,sBACN+kB,SAAS,mGACTC,MAAO,CACL,kBAAC,IAAMgK,MAAP,CAAaC,SAAO,EAAC1uB,UAAU,YAC7B,kBAAC,IAAMgvB,OAAP,CACEhvB,UAAU,QACVyV,YAAW,sCACXmZ,YAAU,EACV3oB,MAAOinB,EACP3F,SAAU,SAACI,GAAD,OAAOwF,EAAexF,EAAEzpB,OAAO+H,QACzCgpB,SAAU,SAAChpB,GACTknB,EAAelnB,UAMzB,yBAAKsQ,MAAOsE,IACV,kBAAC,KAAD,CAAOkQ,WAAYqF,EAAiBE,QAASA,SC1EtCC,GA1ByB,SAAC,GAKlC,IAJL7kB,EAII,EAJJA,OACA8kB,EAGI,EAHJA,aACAvsB,EAEI,EAFJA,KACAumB,EACI,EADJA,SAEMvoB,EAAO6D,GAAY4F,GACzB,OACE,kBAAC,KAAD,CAAKqc,KAAM,GACT,yBACE/P,QAAS,kBACPwS,EAAS,IAAD,OACO,WAATvmB,EAAoB,UAAY,WAD9B,YAC4CyH,EAAO9L,OAI7D,kBAAC,IAAD,CAAOkV,UAAU,YACf,kBAAC,GAAD,CAAQ+B,IAAKnL,EAAOwf,iBAAkBtU,SAAU3U,EAAM4T,KAAM,KAC5D,kBAAC,IAAWqJ,KAAZ,KAAkBjd,GAClB,kBAAC,IAAWid,KAAZ,CAAiBjb,KAAK,aAAausB,OCiC9BC,GAvD0B,SAAC,GAI5B,IAHZhkB,EAGW,EAHXA,YACAxI,EAEW,EAFXA,KACAumB,EACW,EADXA,SAEA,EAAsD7S,mBACpD,IADF,mBAAO+Y,EAAP,KAA4BC,EAA5B,KAGA,EAAkChZ,mBAAS,UAA3C,mBAAOiZ,EAAP,KAAkBC,EAAlB,KAoBA,OAJAjR,qBAAU,WACR+Q,EAAuBlkB,EAAYxC,QAAO,SAACc,GAAD,OAAOA,EAAEzJ,SAAWsvB,QAC7D,CAACnkB,EAAamkB,IAGf,kBAAC,IAAD,CACEnxB,MAAM,cACNqxB,QAtBY,CACd,CACEvyB,IAAK,SACLwyB,IAAK,UAEP,CACExyB,IAAK,UACLwyB,IAAK,WAEP,CACExyB,IAAK,WACLwyB,IAAK,aAYLC,aAAcJ,EACdK,YAAa,SAAC1yB,GAAD,OAASsyB,EAAatyB,MAEjCkO,EAAYpO,QAAU,kBAAC,KAAD,CAAO+M,YAAY,mBAE3C,kBAAC,IAAD,CAAK2J,QAAQ,iBACV2b,EAAoB9pB,KAAI,SAAC8F,GACxB,IAAMhB,EACK,WAATzH,EAAoByI,EAAWE,QAAUF,EAAWG,OACtD,OACE,kBAAC,GAAD,CACEnB,OAAQA,EACR8kB,aAAc9jB,EAAW8jB,aACzBhG,SAAUA,EACVvmB,KAAMA,U,WC0DLitB,GAxFwB,SAAC,GAKjC,IAJLjtB,EAII,EAJJA,KACAktB,EAGI,EAHJA,aACAC,EAEI,EAFJA,QACAC,EACI,EADJA,SAEMC,EAAS,CACb,CACE7F,KAAM,IACN8F,eAAgBJ,GAElB,CACE1F,KAAM,WACN8F,eAAyB,YAATttB,EAAqB,WAAa,uBAEpD,CACEwnB,KAAM,IACN8F,eAAgBzrB,GAAYsrB,KAI1BI,EACJH,GAAYA,EAASI,YAAcJ,EAASI,YAAY3d,IAAM,GAC1D4d,EAASL,GAAYA,EAASM,WAAaN,EAASM,WAAW7d,IAAM,GACrE8d,EACJP,GAAYA,EAASQ,aAAeR,EAASQ,aAAa/d,IAAM,GAkDlE,OACE,kBAAC,KAAD,CACEge,OAAO,EACPC,OAAQ,kBAAM7P,OAAO5T,QAAQ0jB,QAC7BvyB,MAAOqG,GAAYsrB,GACnBa,WAAY,CAAEX,UACd/a,MAAO,CAAE2N,aAAc,KAtDP,WAClB,OAAQjgB,GACN,IAAK,SACH,OACE,kBAAC,KAAD,CAAc4R,KAAK,QAAQqc,OAAQ,EAAGC,UAAQ,GAC5C,kBAAC,KAAa/c,KAAd,CAAmBlO,MAAM,cACtBkqB,EAAQ/sB,WAEX,kBAAC,KAAa+Q,KAAd,CAAmBlO,MAAM,aACtBkqB,EAAQ9sB,UAEX,kBAAC,KAAa8Q,KAAd,CAAmBlO,MAAM,aACrBkqB,EAAmBzG,sBAEvB,kBAAC,KAAavV,KAAd,CAAmBlO,MAAM,OACtBwD,aAAO,IAAI3B,KAAMqoB,EAAmBxG,aAAc,eAErD,kBAAC,KAAaxV,KAAd,CAAmBlO,MAAM,cACrBkqB,EAAmBgB,QAI7B,IAAK,UACH,OACE,kBAAC,KAAD,CAAcvc,KAAK,QAAQqc,OAAQ,EAAGC,UAAQ,GAC5C,kBAAC,KAAa/c,KAAd,CAAmBlO,MAAM,cACtBkqB,EAAQ/sB,WAEX,kBAAC,KAAa+Q,KAAd,CAAmBlO,MAAM,aACtBkqB,EAAQ9sB,UAEX,kBAAC,KAAa8Q,KAAd,CAAmBlO,MAAM,aACrBkqB,EAAoB1vB,OAExB,kBAAC,KAAa0T,KAAd,CAAmBlO,MAAM,YACvB,kBAAC,KAAD,CAAO4P,MAAO,IAAKD,IAAK2a,KAE1B,kBAAC,KAAapc,KAAd,CAAmBlO,MAAM,WACvB,kBAAC,KAAD,CAAO4P,MAAO,IAAKD,IAAK6a,KAE1B,kBAAC,KAAatc,KAAd,CAAmBlO,MAAM,UACvB,kBAAC,KAAD,CAAO4P,MAAO,IAAKD,IAAK+a,OAe/BS,K,sBCjGMC,GAAmB,SAAC,GAAqC,IAAnC5zB,EAAkC,EAAlCA,KAAMuF,EAA4B,EAA5BA,KAAMumB,EAAsB,EAAtBA,SAuE7C,OAtEmB,WACjB,IAAM+H,EACJ,kBAAC,IAAWrT,KAAZ,CAAiB+F,QAAM,GACX,WAAThhB,EACGsG,GAAyB7L,GACzB2L,GAAwB3L,IAI1B8zB,EAAY9nB,aAAO,IAAI3B,KAAKrK,EAAK6H,gBAAiB,eAExD,OAAQ7H,EAAK4C,QACX,IAAK,mBACH,OACE,kBAAC,KAAS8T,KAAV,CAAelO,MAAOsrB,EAAWla,MAAM,UAAvC,aACaia,EADb,wBAIJ,IAAK,YACH,OACE,kBAAC,KAASnd,KAAV,CAAelO,MAAOsrB,EAAWla,MAAM,UAAvC,uBACuBia,GAG3B,IAAK,YACH,OACE,kBAAC,KAASnd,KAAV,CAAelO,MAAOsrB,EAAWla,MAAM,OAAvC,aACaia,EADb,kBAIJ,IAAK,UACH,OACE,kBAAC,KAASnd,KAAV,CAAelO,MAAOsrB,EAAWla,MAAM,OAAvC,iCACiCia,GAGrC,IAAK,kBACL,IAAK,OACH,OACE,kBAAC,KAASnd,KAAV,CAAelO,MAAOsrB,EAAWla,MAAM,SAAvC,uBACuBia,GAG3B,IAAK,aACL,IAAK,QACH,MAAgC,SAAzB7zB,EAAK+zB,gBACV,kBAAC,KAASrd,KAAV,CACElO,MAAOwD,aAAO,IAAI3B,KAAKrK,EAAK6H,gBAAiB,gBAG7C,kBAAC,IAAWkkB,KAAZ,CAAiBzS,QAAS,kBAAMwS,EAAS,SAAD,OAAU9rB,EAAKkB,OAAvD,UACU2yB,IAIZ,kBAAC,KAASnd,KAAV,CACEsd,IAAK,kBAACC,GAAA,EAAD,CAAqBpc,MAAO,CAAEoN,SAAU,UAC7Czc,MAAOsrB,GAGP,kBAAC,IAAW/H,KAAZ,CAAiBzS,QAAS,kBAAMwS,EAAS,SAAD,OAAU9rB,EAAKkB,OAAvD,yBACyB2yB,IAI/B,QACE,OAAO,+BAINK,ICnFMC,GCUuB,SAAC,GAA+B,IAA7B/oB,EAA4B,EAA5BA,MAAO7F,EAAqB,EAArBA,KAAMumB,EAAe,EAAfA,SACpD,OACE,kBAAC,IAAD,CACE/qB,MAAM,gBACN8W,MAAO,CAAEuc,UAAW,OAAQC,UAAW,YAErCjpB,EAAMzL,QAAU,kBAAC,KAAD,CAAO+M,YAAY,aACrC,kBAAC,KAAD,CAAUgI,KAAM,SACbtJ,EAAMlD,KAAI,SAAClI,GAAD,OACT,kBAAC,GAAD,CACEH,IAAKG,EAAKkB,GACVlB,KAAMA,EACNuF,KAAMA,EACNumB,SAAUA,UCvBPwI,GCqBkB,SAAC,GAQ3B,IAPLlpB,EAOI,EAPJA,MACA2C,EAMI,EANJA,YACAxI,EAKI,EALJA,KACAktB,EAII,EAJJA,aACAE,EAGI,EAHJA,SACAD,EAEI,EAFJA,QACA5G,EACI,EADJA,SAEA,OACE,kBAAC,IAAD,KACE,kBAAC,IAAOlW,QAAR,CAAgBiC,MAAOsE,IACrB,kBAAC,GAAD,CACE5W,KAAMA,EACNmtB,QAASA,EACTD,aAAcA,EACdE,SAAUA,IAEZ,kBAAC,IAAD,CAAKtc,QAAQ,gBAAgB8P,OAAQ,IACnC,kBAAC,KAAD,CAAKkD,KAAM,IACT,kBAAC,GAAD,CAAcje,MAAOA,EAAO7F,KAAMA,EAAMumB,SAAUA,KAEpD,kBAAC,KAAD,CAAKzC,KAAM,GACT,kBAAC,GAAD,CACEtb,YAAaA,EACbxI,KAAMA,EACNumB,SAAUA,SCtBjB,SAASyI,GAAmB3xB,GACjC,MAA0BqW,mBAAiB,IAA3C,mBAAO7N,EAAP,KAAcopB,EAAd,KACMC,EAAYzgB,GAAemH,IAC3BjP,EAAc8H,GAAeiH,IAC7BhN,EAAa+F,GAAe8G,IAC5B1O,EAAY4H,GAAewH,IAcjC,OAZA0F,qBAAU,WACR,IAAIwT,EAAeD,EAAUlpB,QAAO,SAACvL,GAAD,OAAUA,EAAK4C,SAAWA,KAC/C,SAAXA,IACF8xB,EAAeA,EAAanpB,QAC1B,SAACc,GAAD,OAAO,IAAIhC,KAAKgC,EAAEb,eAAiB,IAAInB,SAG3CmqB,EACEvoB,GAAoByoB,EAAcxoB,EAAa+B,EAAY7B,MAE5D,CAACqoB,EAAWxmB,EAAY/B,EAAaE,EAAWxJ,IAE5CwI,ECDMupB,OAhCf,YAA4E,IAAtDC,EAAqD,EAArDA,MACdnC,EAAexe,aACnB,SAAChQ,GAAD,uBAAsBA,EAAM8M,WAAWU,gBAAvC,aAAsB,EAA2BlO,QAG7C6K,EAAWwmB,EAAMC,OAAO3zB,GACxBiN,EAAS8F,aAAY,SAAChQ,GAAD,OACzByW,GAAiBzW,EAAOmK,MAEpBL,EvBoBD,SAA8B7M,GACnC,MAAkD+X,mBAAuB,IAAzE,mBAAO6b,EAAP,KAA0BC,EAA1B,KAEMhnB,EAAc0d,KAQpB,OANAvK,qBAAU,WACR6T,EACEhnB,EAAYxC,QAAO,SAACyC,GAAD,OAAgBA,EAAWI,WAAalN,QAE5D,CAAC6M,EAAa7M,IAEV4zB,EuB/BaE,EAA2B,OAAN7mB,QAAM,IAANA,OAAA,EAAAA,EAAQjN,KAAM,IACjDkK,EDsCD,SAAwBlK,GAC7B,MAA0B+X,mBAAiB,IAA3C,mBAAO7N,EAAP,KAAcopB,EAAd,KACMC,EAAYzgB,GAAemH,IAC3BjP,EAAc8H,GAAeiH,IAC7BhN,EAAa+F,GAAe8G,IAC5B1O,EAAY4H,GAAewH,IAWjC,OATA0F,qBAAU,WACR,IAAM+T,EAAkBR,EAAUlpB,QAAO,SAACvL,GAAD,OACvCA,EAAKwM,UAAUvC,SAAS/I,MAE1BszB,EACEvoB,GAAoBgpB,EAAiB/oB,EAAa+B,EAAY7B,MAE/D,CAACqoB,EAAWxmB,EAAY/B,EAAaE,EAAWlL,IAE5CkK,ECtDO8pB,EAAqB,OAAN/mB,QAAM,IAANA,OAAA,EAAAA,EAAQjN,KAAM,IAErC8P,EAAW8C,KAMjB,OAJAoN,qBAAU,WACRlQ,EAASlB,GAAW,CAAE,8BAA+B1B,OACpD,CAACA,EAAU4C,IAET7C,GAAWskB,EAGd,kBAAC,GAAD,CACE1kB,YAAaA,EACb2kB,QAASvkB,EACTskB,aAAcA,EACdrnB,MAAOA,EACP7F,KAAK,SACLumB,SAAU,SAACiB,GAAD,OAAkB/b,EAAShJ,aAAK+kB,OATT,+BCJjC0E,GAAqB,CAAEzpB,WAuDd8N,OArDGC,aAZM,SACtB9R,EACAkxB,GAFsB,MAGlB,CACJ/pB,MAAOuQ,GACL1X,EACAiY,GAAsBjY,EAAOkxB,EAASP,MAAMC,OAAO3zB,KAAO,OAMnBuwB,GAqD5B3b,EAjDf,YAGiE,IAF/D1K,EAE8D,EAF9DA,MACAwpB,EAC8D,EAD9DA,MAEA,EAAgC3b,mBAA+B,CAC7D8Z,YAAa,KACbE,WAAY,KACZE,aAAc,OAHhB,mBAAOR,EAAP,KAAiByC,EAAjB,KAKM3C,EAAexe,aACnB,SAAChQ,GAAD,uBAAsBA,EAAM8M,WAAWU,gBAAvC,aAAsB,EAA2BlO,QAG7CyN,EAAW8C,KAEX5F,EAAU+F,aAAY,SAAChQ,GAAD,OAC1B+W,GAAkB/W,EAAO2wB,EAAMC,OAAO3zB,OAIxCggB,qBAAU,YACc,uCAAG,4BAAApf,EAAA,0DACnBoM,EADmB,gCAEA8C,EAASlC,GAAqBZ,EAAQhN,KAFtC,QAEf6N,EAFe,QAGV3K,SACTgxB,EAAYrmB,EAAO3K,SAJA,2CAAH,qDAQtBixB,KACC,CAACnnB,EAAS8C,IAEb,IAAMjD,ExBTD,SAA+B7M,GACpC,MAAqC+X,mBAAuB,IAA5D,mBAAOjL,EAAP,KAAmB0d,EAAnB,KAEM3d,EAAc0d,KAQpB,OANAvK,qBAAU,WACRwK,EACE3d,EAAYxC,QAAO,SAACyC,GAAD,OAAgBA,EAAWtL,SAAWxB,QAE1D,CAAC6M,EAAa7M,IAEV8M,EwBFasnB,EAA6B,OAAPpnB,QAAO,IAAPA,OAAA,EAAAA,EAAShN,KAAM,IAEzD,OAAKgN,GAAYukB,EAGf,kBAAC,GAAD,CACE1kB,YAAaA,EACb2kB,QAASxkB,EACTukB,aAAcA,EACdE,SAAUA,EACVvnB,MAAOA,EACP7F,KAAK,UACLumB,SAAU,SAACiB,GAAD,OAAkB/b,EAAShJ,aAAK+kB,OAVR,iC,4ECzDzB,SAASwI,GAAT,GAKU,IAJvBx0B,EAIsB,EAJtBA,MACAwG,EAGsB,EAHtBA,MACAiuB,EAEsB,EAFtBA,OACA3e,EACsB,EADtBA,OAEA,OACE,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAW9V,MAAOA,EAAOwG,MAAOA,EAAOsP,OAAQA,EAAQ2e,OAAQA,K,cCNtD,SAASC,GAAT,GAMU,IALvB10B,EAKsB,EALtBA,MAMM20B,EAAY,CAChBC,OAFoB,EAJtBA,OAOEC,SAAU,CACR,CACE1zB,KALgB,EAHtBA,KASM4V,gBANgB,EAFtBA,gBASM+d,qBAPgB,EADtBA,wBAaA,OACE,kBAAC,IAAD,CAAM90B,MAAOA,EAAO8W,MAAOwE,IACzB,kBAAC,YAAD,CAAUna,KAAMwzB,KC5BtB,IAAMI,GAAQ,uBA6CCC,GAlCoB,SAAC,GAAoC,IAAlCh1B,EAAiC,EAAjCA,MAAOyH,EAA0B,EAA1BA,MAAOmtB,EAAmB,EAAnBA,OAAQzzB,EAAW,EAAXA,KACpDwzB,EAAY,CAChBC,SACAC,SAAU,CACR,CACEptB,QACAwtB,YAAa,GACble,gBAjBG,yBAkBHme,YAAaH,GACbI,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkBR,GAClBS,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2BZ,GAC3Ba,sBA3Ba,uBA4BbC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChB50B,UAKN,OACE,kBAAC,IAAD,CAAMnB,MAAOA,GACX,kBAAC,QAAD,CAAMmB,KAAMwzB,M,SC0CHqB,GA7EF,SAAC,GAAqC,IAAnC3e,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,OACf2e,EAD0C,EAAnBpd,OACR,UACrB,OACE,kBAAC,OAAD,CACExY,QAAQ,oBACRyW,MAAO,CAAEO,MAAOA,GAAS,IAAKC,OAAQA,GAAU,KAEhD,kBAAC,QAAD,CACE4e,KAAMD,EACNE,OAAO,OACPC,YAAa,EACb51B,EAAE,yIAEJ,kBAAC,WAAD,CACE01B,KAAMD,EACNE,OAAO,OACPC,YAAa,EACb9V,QAAS,GACT7f,OAAO,uJAET,kBAAC,WAAD,CACEy1B,KAAMD,EACNE,OAAO,OACPC,YAAa,EACb31B,OAAO,2GAET,kBAAC,QAAD,CACEy1B,KAAMD,EACNE,OAAO,OACPC,YAAa,EACb51B,EAAE,mMAEJ,kBAAC,WAAD,CACE01B,KAAMD,EACNE,OAAO,OACPC,YAAa,EACb31B,OAAO,mNAET,kBAAC,WAAD,CACEy1B,KAAMD,EACNE,OAAO,OACPC,YAAa,EACb9V,QAAS,GACT7f,OAAO,qHAET,kBAAC,QAAD,CACEy1B,KAAK,UACL11B,EAAE,2GAEJ,kBAAC,QAAD,CACE01B,KAAK,UACL11B,EAAE,wUAEJ,kBAAC,QAAD,CACE01B,KAAK,UACL11B,EAAE,iTAEJ,kBAAC,QAAD,CACE01B,KAAK,UACL11B,EAAE,uTAEJ,kBAAC,QAAD,CACE01B,KAAK,UACL11B,EAAE,mEAEJ,kBAAC,QAAD,CACE01B,KAAK,UACL11B,EAAE,oLAEJ,kBAAC,QAAD,CACE01B,KAAK,UACL11B,EAAE,8KC5EJ61B,GAASC,cAAWC,OAAO,CAC/BC,UAAW,CACTC,cAAe,MACf7R,WAAY,SACZ8R,eAAgB,gBAChBjS,aAAc,IAEhBkS,OAAQ,CACNF,cAAe,MACf7R,WAAY,UAEdgS,YAAa,CACXH,cAAe,SACfI,UAAW,YAEbC,aAAc,CACZL,cAAe,UAEjBj0B,KAAM,CACJ0hB,SAAU,GACV6S,WAAY,QAEdhS,SAAU,CACRb,SAAU,MAuBCY,GAdA,SAAC,GAAD,IAAG9kB,EAAH,EAAGA,MAAO+kB,EAAV,EAAUA,SAAV,OACb,kBAAC,QAAD,CAAMjO,MAAOuf,GAAOG,UAAWQ,OAAK,GAClC,kBAAC,QAAD,CAAMlgB,MAAOuf,GAAOS,cAClB,kBAAC,QAAD,CAAMhgB,MAAOuf,GAAOM,QAClB,kBAAC,QAAD,CAAM7f,MAAOuf,GAAO7zB,MAAOxC,IAE7B,kBAAC,QAAD,CAAM8W,MAAOuf,GAAOtR,UAAWA,IAEjC,kBAAC,QAAD,CAAMjO,MAAOuf,GAAOO,aAClB,kBAAC,GAAD,CAAMvf,MAAO,IAAKC,OAAQ,QC1C1B+e,GAASC,cAAWC,OAAO,CAC/BC,UAAW,CACTnf,MAAO,OACPN,gBAAiB,UACjB0M,QAAS,OACTmB,WAAY,SACZ8R,eAAgB,SAChBD,cAAe,MACfQ,gBAAiB,GAEnBj3B,MAAO,CACL+2B,WAAY,WACZ7S,SAAU,MAUCgT,GANO,SAAC,GAAD,IAAGl3B,EAAH,EAAGA,MAAH,OACpB,kBAAC,QAAD,CAAM8W,MAAOuf,GAAOG,WAClB,kBAAC,QAAD,CAAM1f,MAAOuf,GAAOr2B,OAAQA,KClBnBm3B,GAAa,WACxB,OACE,kBAAC,OAAD,CAAK9f,MAAM,KAAKC,OAAO,KAAKjX,QAAQ,aAClC,kBAAC,QAAD,CACEG,EAAE,6LACF01B,KAAK,cAMAkB,GAAc,WACzB,OACE,kBAAC,OAAD,CAAK/f,MAAM,KAAKC,OAAO,KAAKjX,QAAQ,aAClC,kBAAC,QAAD,CACEG,EAAE,mWACF01B,KAAK,cAMAmB,GAAa,WACxB,OACE,kBAAC,OAAD,CAAKhgB,MAAM,KAAKC,OAAO,KAAKjX,QAAQ,aAClC,kBAAC,QAAD,CACEG,EAAE,6LACF01B,KAAK,cAMAoB,GAAa,WACxB,OACE,kBAAC,OAAD,KACE,kBAAC,QAAD,CACE92B,EAAE,qEACF01B,KAAK,YAEP,kBAAC,QAAD,CACE11B,EAAE,mEACF01B,KAAK,YAEP,kBAAC,QAAD,CACE11B,EAAE,uDACF01B,KAAK,YAEP,kBAAC,QAAD,CACE11B,EAAE,iFACF01B,KAAK,YAEP,kBAAC,QAAD,CACE11B,EAAE,kEACF01B,KAAK,YAEP,kBAAC,QAAD,CACE11B,EAAE,iEACF01B,KAAK,cChDPG,GAASC,cAAWC,OAAO,CAC/BC,UAAW,GACXe,KAAM,CACJC,kBAAmB,QACnBC,kBAAmB,EACnBC,kBAAmB,UACnBjU,QAAS,OACTgT,cAAe,UAEjBE,OAAQ,CACN5f,gBAAiB,UACjB0M,QAAS,OACTgT,cAAe,MACfC,eAAgB,gBAChBiB,SAAU,EACVV,gBAAiB,EACjBW,kBAAmB,IAErBC,WAAY,CACVd,WAAY,WACZ7S,SAAU,IAEZ4T,IAAK,CACHrU,QAAS,OACTgT,cAAe,MACfpb,QAAS,IAEX0c,aAAc,CACZC,KAAM,EACNC,WAAY,EACZxB,cAAe,MACfhT,QAAS,OACTmB,WAAY,UAEdsT,QAAS,CACPF,KAAM,EACNC,WAAY,EACZxU,QAAS,OACTgT,cAAe,UAEjB0B,UAAW,CACTC,cAAe,YACflU,SAAU,GACV6S,WAAY,SAEdsB,SAAU,CACRtB,WAAY,WACZ7S,SAAU,IAEZlL,KAAM,CACJsf,YAAa,GAEfC,SAAU,CACRlF,UAAW,GACXmF,SAAU,MAkFCC,GA9ES,SAAC,GAAD,IAAGpuB,EAAH,EAAGA,MAAOquB,EAAV,EAAUA,eAAV,OACtB,kBAAC,QAAD,CAAM5hB,MAAOuf,GAAOG,WACjBnsB,EAAMlD,KAAI,SAAClI,GAAD,OACT,kBAAC,QAAD,CAAMH,IAAKG,EAAKkB,GAAI2W,MAAOuf,GAAOkB,MAChC,kBAAC,QAAD,CAAMzgB,MAAOuf,GAAOM,QAClB,kBAAC,QAAD,CAAM7f,MAAOuf,GAAOwB,YACjB5sB,aAAO,IAAI3B,KAAKrK,EAAK6H,gBAAiB,aADzC,KACyD,IACtDmE,aAAO,IAAI3B,KAAKrK,EAAKwL,cAAe,cAEvC,kBAAC,QAAD,CAAMqM,MAAOuf,GAAOkC,UAClB,kBAAC,GAAD,QAGJ,kBAAC,QAAD,CAAMzhB,MAAOuf,GAAOyB,KAClB,kBAAC,QAAD,CAAMhhB,MAAOuf,GAAO0B,cAClB,kBAAC,QAAD,CAAMjhB,MAAOuf,GAAOrd,MAClB,kBAAC,GAAD,OAEF,kBAAC,QAAD,KACE,kBAAC,QAAD,CAAMlC,MAAOuf,GAAO8B,WAApB,WACA,kBAAC,QAAD,CAAMrhB,MAAOuf,GAAOgC,UAAWp5B,EAAKkB,MAGxC,kBAAC,QAAD,CAAM2W,MAAOuf,GAAO6B,SAClB,kBAAC,QAAD,CAAMphB,MAAOuf,GAAO8B,WAApB,gBACA,kBAAC,QAAD,CAAMrhB,MAAOuf,GAAOgC,UAAWp5B,EAAK+L,MAAMxI,QAG7CvD,EAAK2E,QAAQuD,KAAI,SAACiG,GAAD,OAChB,kBAAC,QAAD,CAAM0J,MAAOuf,GAAOyB,IAAKh5B,IAAKsO,EAAOjN,IACnC,kBAAC,QAAD,CAAM2W,MAAOuf,GAAO0B,cAClB,kBAAC,QAAD,CAAMjhB,MAAOuf,GAAOrd,MAClB,kBAAC,GAAD,OAEF,kBAAC,QAAD,KACE,kBAAC,QAAD,CAAMlC,MAAOuf,GAAO8B,WAApB,eACA,kBAAC,QAAD,CAAMrhB,MAAOuf,GAAOgC,UAAWhyB,GAAY+G,MAG/C,kBAAC,QAAD,CAAM0J,MAAOuf,GAAO6B,SAClB,kBAAC,QAAD,CAAMphB,MAAOuf,GAAO8B,WAApB,aACA,kBAAC,QAAD,CAAMrhB,MAAOuf,GAAOgC,UAAWjrB,EAAO8d,2BAI3CwN,GACC,kBAAC,QAAD,CAAM5hB,MAAOuf,GAAOyB,KAClB,kBAAC,QAAD,CAAMhhB,MAAOuf,GAAO0B,cAClB,kBAAC,QAAD,CAAMjhB,MAAOuf,GAAOrd,MAClB,kBAAC,GAAD,OAEF,kBAAC,QAAD,KACE,kBAAC,QAAD,CAAMlC,MAAOuf,GAAO8B,WAApB,gBACCl5B,EAAKsM,SAASpE,KAAI,SAACgG,GAAD,OACjB,kBAAC,QAAD,CACErO,IAAG,UAAKqO,EAAQhN,GAAb,YAAmBgN,EAAQvI,UAA3B,YAAwCuI,EAAQtI,UACnDiS,MAAOuf,GAAOgC,UAEbhyB,GAAY8G,SAKrB,kBAAC,QAAD,CAAM2J,MAAOuf,GAAO6B,SAClB,kBAAC,QAAD,CAAMphB,MAAOuf,GAAO8B,WAApB,cACCl5B,EAAKsM,SAASpE,KAAI,SAACgG,GAAD,OACjB,kBAAC,QAAD,CAAMrO,IAAKqO,EAAQhN,GAAI2W,MAAOuf,GAAOgC,UAClClrB,EAAQhN,eCvIrBk2B,GAASC,cAAWC,OAAO,CAC/BC,UAAW,CACTC,cAAe,MACf7R,WAAY,SACZ8R,eAAgB,gBAChB3S,SAAU,WACVC,OAAQ,GACRiD,KAAM,GACN5P,MAAO,QAETshB,WAAY,CACVzU,SAAU,MAgBC0U,GAZA,WACb,OACE,kBAAC,QAAD,CAAM9hB,MAAOuf,GAAOG,UAAWQ,OAAK,GAClC,kBAAC,QAAD,CAAMlgB,MAAOuf,GAAOsC,YAApB,eACA,kBAAC,QAAD,CACE7hB,MAAOuf,GAAOsC,WACd/hB,OAAQ,gBAAGiiB,EAAH,EAAGA,WAAYC,EAAf,EAAeA,WAAf,gBAAmCD,EAAnC,cAAmDC,QCd7DzC,GAASC,cAAWC,OAAO,CAC/BnQ,KAAM,CACJ/K,QAAS,IAEXmb,UAAW,CACTwB,KAAM,EACNvB,cAAe,OAEjBsC,eAAgB,CACdxd,aAAc,EACdyd,YAAa,QACb9D,YAAa,UACb+D,YAAa,EACbxU,aAAc,MAwCHyU,GA9BsBrY,IAAMC,MACzC,gBAAGqY,EAAH,EAAGA,WAAY3pB,EAAf,EAAeA,SAAUkpB,EAAzB,EAAyBA,eAAzB,OACE,kBAAC,YAAD,CACEU,OAAO,cACPC,SAAS,qBACTr5B,MAAM,kBAEN,kBAAC,QAAD,CAAM8W,MAAOuf,GAAOjQ,KAAMkT,MAAI,GAC5B,kBAAC,GAAD,CACEt5B,MAAK,kCAA6BiL,aAChC,IAAI3B,KACJ,kBAEFyb,SAAQ,UAAKvV,EAAShN,QAEvBjE,OAAOgB,KAAK45B,GAAYhyB,KAAI,SAACkP,GAAD,OAC3B,kBAAC,QAAD,CAAMvX,IAAKuX,EAAOS,MAAOuf,GAAO0C,gBAC9B,kBAAC,GAAD,CAAe/4B,MAAOiL,aAAO,IAAI3B,KAAK+M,GAAQ,eAC9C,kBAAC,GAAD,CACEhM,MAAO8uB,EAAW9iB,GAClBqiB,eAAgBA,QAItB,kBAAC,GAAD,WCJOa,GAtC4B1Y,IAAMC,MAC/C,YAA0C,IAAvCzW,EAAsC,EAAtCA,MAAOmF,EAA+B,EAA/BA,SAAUkpB,EAAqB,EAArBA,eAGlB,EAAoCxgB,oBAAS,GAA7C,mBAAOshB,EAAP,KAAmBC,EAAnB,KAMA,GAJAtZ,qBAAU,WACRrM,YAAW,kBAAM2lB,GAAc,KAAO,OACrC,KAEED,EACH,OACE,kBAAC,IAAW/Z,KAAZ,CAAiBjb,KAAK,aAAtB,8BAC6B,kBAAC,KAAD,CAAM4R,KAAK,WAI5C,IAAM5R,EAAOk0B,EAAiB,QAAU,SACxC,OACE,kBAAC,mBAAD,CACEgB,SACE,kBAAC,GAAD,CACEP,WAAY/wB,GAAQiC,GAAO,SAACpL,GAAD,OAAUA,EAAK6H,kBAC1C0I,SAAUA,EACVkpB,eAAgBA,IAGpBiB,SAAQ,0BAAqBn1B,EAArB,eAAgCgL,EAAShN,KAAzC,YAAiDyI,aACvD,IAAI3B,KACJ,sBAGD9E,EAbH,sB,UChCSo1B,GC8CoB,SAAC,GAO7B,IANLvvB,EAMI,EANJA,MACAwvB,EAKI,EALJA,aACArqB,EAII,EAJJA,SACAsqB,EAGI,EAHJA,cACAC,EAEI,EAFJA,aACAC,EACI,EADJA,QAEA,EAAwC9hB,qBAAxC,mBAAO+hB,EAAP,KAAqBC,EAArB,KACA,EAAoChiB,qBAApC,mBAAOiiB,EAAP,KAAmBC,EAAnB,KACA,EAAgDliB,mBAAS,GAAzD,mBAAOmiB,EAAP,KAAyBC,EAAzB,KAEA,EAAmDpiB,mBAAiB,IAApE,mBAAOqiB,EAAP,KAA2BC,EAA3B,KA0BA,GAxBAra,qBAAU,kBAAMqa,ExE4HQ,SAAyBnwB,GACjD,IAAMowB,EAAU,IAAInxB,KACpBmxB,EAAQlxB,SAAS,EAAG,EAAG,EAAG,GAC1B,IAAMmxB,EAAU,IAAIpxB,KAEpB,OADAoxB,EAAQnxB,SAAS,GAAI,GAAI,GAAI,IACtBa,GAAkBC,EAAOowB,EAASC,GwEjIJC,CAAWtwB,MAAS,CAACA,IAE1D8V,qBAAU,WACR,IAAM5M,EAAU6P,aAAY,WAC1BkX,EAAoBM,aAAoB,IAAItxB,KAAQwwB,MACnD,KAEH,OAAO,kBAAMzW,cAAc9P,MAC1B,CAACumB,IAEJ3Z,qBAAU,WACR,IAAM/O,EAAShJ,GACbiC,EAAMG,QAAO,SAACvL,GAAD,QAAYA,EAAKuP,WAC9B,SAACvP,GAAD,OAAUA,EAAKuP,SACf,CAAC,EAAG,EAAG,EAAG,EAAG,IAGTqsB,EAAat8B,OAAOgB,KAAK6R,GAAQ0pB,OACvCZ,EAAgBW,EAAW1zB,KAAI,SAACrI,GAAD,OAASsS,EAAO2pB,SAASj8B,IAAMF,WAG9Dw7B,ExE0H6B,SAC/B/vB,GASA,IAPA,IAAM2wB,EAAM,IAAI1xB,KACV2xB,EAAalxB,GAAcixB,GAE3B75B,EAA+B,GAGjCqmB,EADUzd,GAAcmxB,aAAaF,IAElCxT,GAAQyT,GAAY,CACzB,IAAME,EAAOC,aAAS5T,EAAM,GAC5BrmB,EAAK8J,aAAOuc,EAAM,WAAapd,GAAkBC,EAAOmd,EAAM2T,GAAMv8B,OACpE4oB,EAAO2T,EAET,OAAOh6B,EwEzISk6B,CAAkBhxB,MAC/B,CAACA,KAEC4vB,IAAiBE,EAAY,OAAO,8BAEzC,IAAMmB,EACJ,kBAAC,KAAD,KACE,kBAAC,KAAK3lB,KAAN,CAAW7W,IAAI,IAAIka,KAAM,kBAACuiB,GAAA,EAAD,OACvB,kBAAC,GAAD,CACElxB,MAAOkwB,EACP/qB,SAAUA,EACVkpB,gBAAgB,KAGpB,kBAAC,KAAK/iB,KAAN,CAAW7W,IAAI,IAAIka,KAAM,kBAACuiB,GAAA,EAAD,OACvB,kBAAC,GAAD,CACElxB,MAAOkwB,EACP/qB,SAAUA,EACVkpB,gBAAgB,KAGpB,kBAAC,KAAK/iB,KAAN,CAAW7W,IAAI,IAAIka,KAAM,kBAACwiB,GAAA,EAAD,OACvB,kBAAC,WAAD,CACEr6B,KAAMuJ,GAAiB6vB,GACvB97B,OAAO,SACPg9B,SAAQ,qBAAgBjsB,EAAShN,KAAzB,YAAiCyI,aACvC,IAAI3B,KACJ,sBALJ,sBAaN,OACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CACEtJ,MAAM,YACN+kB,SAAS,gEACTC,MAAO,CACL,kBAAC,KAAD,CAAUtM,QAAS4iB,GACjB,kBAAC,IAAD,0BACoB,kBAAC1iB,GAAA,EAAD,QAGtB,6BACGyhB,EAAmB,IAAMN,GACxB,6BACE,kBAAC,IAAWta,KAAZ,CAAiBjb,KAAK,YAAYjE,UAAU,UAA5C,YACY85B,EADZ,gBAGA,kBAAC,IAAD,CAAQ71B,KAAK,OAAO+T,QAASyhB,GAA7B,aAMN,6BACGD,GACC,6BACE,kBAAC,KAAD,MACA,kBAAC,IAAWta,KAAZ,CAAiBjb,KAAK,aAAtB,gCAQV,kBAAC,WAAD,KACE,kBAAC,IAAD,CACE6Q,UAAU,WACVyB,MAAK,2BAAO0E,IAAeJ,IAC3BhF,KAAK,SAEL,kBAAC,IAAD,CAAKgP,OAAQ,IACX,kBAAC,KAAD,CAAKkD,KAAM,EAAG/nB,UAAU,YACtB,kBAACi0B,GAAD,CACEx0B,MAAM,kBACNwG,MACEjI,OAAO6W,OAAO+kB,GACZ57B,OAAO6W,OAAO+kB,GAAYv7B,OAAS,GAGvCkX,OAAQ,kBAAC4lB,GAAA,EAAD,MACRjH,OAAM,WAGV,kBAAC,KAAD,CAAKnM,KAAM,EAAG/nB,UAAU,YACtB,kBAACi0B,GAAD,CACEx0B,MAAM,mBACNwG,MACE6D,EAAMG,QACJ,SAACvL,GAAD,MACkB,SAAhBA,EAAK4C,QACW,oBAAhB5C,EAAK4C,UACPjD,OAEJkX,OAAQ,kBAACgO,GAAA,EAAD,MACR2Q,OAAO,WAGX,kBAAC,KAAD,CAAKnM,KAAM,EAAG/nB,UAAU,YACtB,kBAACi0B,GAAD,CACEx0B,MAAM,uBACNwG,OAKI,IAJD6D,EACElD,KAAI,SAAClI,GAAD,OAAUA,EAAKwM,aACnBhD,QAAO,SAAC0gB,EAAM3B,GAAP,6BAAoB2B,GAApB,aAA6B3B,MAAO,IAC3Chd,OAAOjE,IAAY3H,OAEtBi7B,GACA8B,QAAQ,GACVlH,OAAO,IACP3e,OAAQ,kBAAC8lB,GAAA,EAAD,UAId,kBAAC,IAAD,CAAKxW,OAAQ,IACX,kBAAC,KAAD,CAAKkD,KAAM,IACT,kBAAC,GAAD,CACEtoB,MAAM,QACNyH,MAAM,UACNmtB,OAAQr2B,OAAOgB,KAAK46B,GACpBh5B,KAAM5C,OAAO6W,OAAO+kB,MAGxB,kBAAC,KAAD,CAAK7R,KAAM,IACT,kBAACoM,GAAD,CACE10B,MAAK,4BAAuBiL,aAAO,IAAI3B,KAAQ,SAC/CnI,KAAM84B,EACNljB,gBAAiB0E,GACjBqZ,qBAAsBrZ,GACtBmZ,OAAQ,CAAC,WAAY,OAAQ,OAAQ,OAAQ,mB,WC7K9CiH,GApCiB,WAC9B,IAAMxxB,EhBED,WACL,MAA0B6N,mBAAiB,IAA3C,mBAAO7N,EAAP,KAAcopB,EAAd,KACMC,EAAYzgB,GAAemH,IAC3BjP,EAAc8H,GAAeiH,IAC7BhN,EAAa+F,GAAe8G,IAC5B1O,EAAY4H,GAAewH,IAQjC,OANA0F,qBAAU,WACRsT,EACEvoB,GAAoBwoB,EAAWvoB,EAAa+B,EAAY7B,MAEzD,CAACqoB,EAAWxmB,EAAY/B,EAAaE,IAEjChB,EgBfOyxB,GACRjC,EAAe5mB,GAAe4G,IAC9BrK,EAAWyD,IAAe,SAAC/P,GAAD,OAAWA,EAAM8M,WAAWU,YAC5D,EAA0CwH,mBAAS,IAAI5O,MAAvD,mBAAOwwB,EAAP,KAAsBiC,EAAtB,KACA,EAAwC7jB,oBAAS,GAAjD,mBAAO6hB,EAAP,KAAqBiC,EAArB,KACM/rB,EAAW8C,KAgBjB,OAAKvD,EAGH,kBAAC,GAAD,CACEnF,MAAOA,EACPwvB,aAAcA,EACdrqB,SAAUA,EACVsqB,cAAeA,EACfE,QAtBY,WACdgC,GAAgB,GAChB/rB,EACElB,GAAW,CACTjI,eAAgB,CACdC,WAAYm0B,aAAa,IAAI5xB,MAAQ2yB,UACrCj1B,SAAUk1B,aAAW,IAAI5yB,MAAQ2yB,cAIvCF,EAAiB,IAAIzyB,MACrB0yB,GAAgB,IAYdjC,aAAcA,IATI,+B,qDCmGToC,GA5GU,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,WAAY1sB,EAAuB,EAAvBA,UACtC,EAA4BwI,qBAA5B,mBAAOmkB,EAAP,KAAeC,EAAf,KACA,EAAkCpkB,mBAA8B,IAAhE,mBAAOqkB,EAAP,KAAkBC,EAAlB,KACMC,EAAa,QAQnB,GALAtc,qBAAU,WACRqc,EAAa9sB,GACb4sB,E1EiBmC,SACrC5sB,GAEA,IAAM0B,EAASwC,KAAExL,QAAQsH,GAAW,SAACtG,GAAD,OAAUA,EAAKY,OAE7C0yB,EAAqCt3B,GAAS+B,KAClD,SAACw1B,GACC,OAAMA,KAAWvrB,EAGV,CACLurB,EACAvrB,EAAOurB,GAAS7B,MAAK,SAAC8B,EAAKC,GACzB,OAAID,EAAIpzB,KAAOqzB,EAAIrzB,KAAa,EAC5BozB,EAAIpzB,KAAOqzB,EAAIrzB,MAAc,EAE7BozB,EAAIlzB,OAASmzB,EAAInzB,OAAe,EAChCkzB,EAAIlzB,OAASmzB,EAAInzB,QAAgB,EAC9B,MAVF,CAACizB,EAAS,OAgBnBrX,EAAM,EAEJ+W,EAEAK,EAAOv1B,KAAI,YAAuB,IAAD,mBAApBw1B,EAAoB,KAAXG,EAAW,KACrC,IAAKA,EAAMl+B,OACT,OAAO,gBAAG+9B,EAAU,IAEtB,IAJqC,EAI/BI,EAA0B,GAC5BvV,EAAiBsV,EAAM,GACvBE,EAAkBF,EAAM,GANS,eASlBA,EAAMjQ,MAAM,EAAGiQ,EAAMl+B,SATH,IASrC,2BAAiD,CAAC,IAAvCwK,EAAsC,QAE3Coe,EAAKhe,OAASJ,EAAKI,MACdJ,EAAKI,OAASge,EAAKhe,KAAO,GAAqB,IAAhBJ,EAAKM,OADhB8d,EAAOpe,GAOlC2zB,EAAW91B,KAAK,CACd6C,SAAUlE,GACV0E,MAAOnB,GAAqB6zB,GAC5BzyB,IAAKX,GAAgB4d,GACrBlC,MACAtb,IAAKgzB,EAAMhzB,MAGbgzB,EAAQ5zB,EACRoe,EAAOpe,EACPkc,GAAO,IA5B0B,8BAwCrC,OARAyX,EAAW91B,KAAK,CACd6C,SAAUlE,GACV0E,MAAOnB,GAAqB6zB,GAC5BzyB,IAAKX,GAAgB4d,GACrBlC,MACAtb,IAAKgzB,EAAMhzB,MAGN,gBAAG2yB,EAAUI,MAEtB,OAAOx+B,OAAOC,OAAP,MAAAD,OAAM,CAAQ,IAAR,oBAAe89B,K0EvFhBY,CAAwBvtB,MACjC,CAACA,KAEC2sB,EAAQ,OAAO,8BAEpB,IAAMvU,EAAW,SACfxd,EACAC,EACAP,EACAsb,EACA9gB,GAEA,I7EJwB04B,E6EIlBC,G7EJkBD,E6EIFb,E7EHxB76B,KAAK47B,MAAM57B,KAAKC,UAAUy7B,K6EMxBC,EAAEnzB,GAAKsb,GAAO,CACZhb,MAAOA,EAAMX,WACbY,IAAKA,EAAIZ,WACTG,SAAUlE,GACV0f,MACAtb,OAEFwyB,E1EoEmC,SACrCH,EACA73B,GA8BA,OA5BkBY,GAAS+B,KAAI,SAACw1B,GAAD,OAAaN,EAAOM,IAAY,MAAIl0B,QACjE,SAAC0gB,EAAM3B,GAAP,OAAgB2B,EAAKtW,OAAO2U,KAC5B,IAICrgB,KAAI,SAACk2B,GACJ,IAAIC,EAAW,IAAIh0B,KAAK+zB,EAAM/yB,OACxBizB,EAAU,IAAIj0B,KAAK+zB,EAAM9yB,KAE/B,GAAI+yB,EAAWC,EAAS,MAAM,IAAIz7B,MAAM,sBAIxC,IAFA,IAAM4N,EAAiC,GAEhC4tB,EAAWC,GAChB7tB,EAAUzI,KAAK,CACbuC,KAAMg0B,aAASF,GACf5zB,OAAQ+zB,aAAWH,GACnBtzB,IAAKqzB,EAAMrzB,IACXF,SAAUuzB,EAAMvzB,SAChBtF,SAEF84B,EAAWzzB,aAAgByzB,EAAUD,EAAMvzB,UAG7C,OAAO4F,KAERjH,QAAO,SAAC0gB,EAAM3B,GAAP,OAAgB2B,EAAKtW,OAAO2U,KAAO,I0EnG9BkW,CAAwBP,EAAG34B,IACxC83B,EAAUa,IA2DZ,OACE,kBAAC,IAAD,CACEn9B,MAAM,aACNglB,MAAO,CACL,kBAAC,IAAD,CAAQxgB,KAAK,UAAU+T,QAAS,kBAAM6jB,EAAWG,KAAjD,kBAKF,kBAAC,IAAD,CAAOlnB,UAAU,YACdjQ,GAAS+B,KAAI,SAACw1B,GAAD,OAlED,SACjB3yB,EACAqyB,EACA73B,GAEA,OACE,kBAAC,IAAD,CAAKsS,MAAO,CAAEO,MAAO,OAAQsmB,OAAQ,KACnC,kBAAC,KAAD,CAAKrV,KAAM,IACT,kBAAC,IAAW/S,MAAZ,CAAkBC,MAAO,G1E6F/B,CACE,SACA,SACA,UACA,YACA,WACA,SACA,Y0EnGyBxL,I1EoGZ,K0EjGX,kBAAC,KAAD,CAAKse,KAAM,IACT,kBAAC,IAAD,CAAOjT,UAAU,WAAWyB,MAAO0E,IAChC6gB,EAAOl1B,KAAI,SAACiC,GAAD,OACV,kBAAC,KAAW6iB,YAAZ,CACE2R,WAAY,GACZC,YAAY,EACZ3O,aAAc,CACZ4O,KAAO7yB,aAAO,IAAI3B,KAAKF,EAAKkB,OAAQmyB,GAAaA,GACjDqB,KAAO7yB,aAAO,IAAI3B,KAAKF,EAAKmB,KAAMkyB,GAAaA,IAEjD3U,SAAU,SAAC1S,GACJA,GAAWA,EAAO,IAAOA,EAAO,IACrC0S,EACE1S,EAAO,GAAG2oB,SACV3oB,EAAO,GAAG2oB,SACV/zB,EACAZ,EAAKkc,IACL9gB,IAGJyG,OAAQwxB,OAGZ,kBAAC,KAAWxQ,YAAZ,CACEhhB,OAAQwxB,EACRmB,WAAY,GACZC,YAAY,EACZ/V,SAAU,SAAC1S,GACJA,GAAWA,EAAO,IAAOA,EAAO,IACrC0S,EACE1S,EAAO,GAAG2oB,SACV3oB,EAAO,GAAG2oB,SACV/zB,EACAqyB,EAAOz9B,OACP4F,SAqBR2uB,CAAWwJ,EAASN,EAAOM,GAAUx0B,GAAe6kB,yBC9C/CgR,GAjEO,SAAC,GAAkC,IAAhCjzB,EAA+B,EAA/BA,OAAQkzB,EAAuB,EAAvBA,UACzBpN,EAAU,CACd,CACE7wB,MAAO,KACPwrB,UAAW,KACX1sB,IAAK,MAEP,CACEkB,MAAO,OACPwrB,UAAW,OACX1sB,IAAK,QAOP,CACEkB,MAAO,WACPwrB,UAAW,UACX1sB,IAAK,QACL8X,OAAQ,SAAC/K,GAAD,aACN,oCACE,kBAAC,KAAD,eAAMoyB,EAAUpyB,UAAhB,aAAM,EAAoBrJ,SAIhC,CACExC,MAAO,OAIPlB,IAAK,OACL8X,OAAQ,kBACN,oCACGjP,KAAKu2B,MAAsB,EAAhBv2B,KAAKw2B,UAAgB,IAAM,EACrC,kBAAC,KAAD,CAAKtlB,MAAM,QAAX,cAEA,kBAAC,KAAD,CAAKA,MAAM,SAAX,mBAoBV,OACE,kBAAC,IAAD,CAAM7Y,MAAM,UACV,kBAAC,KAAD,CAAOsrB,WAAYvgB,EAAQ8lB,QAASA,MCrE3BuN,GCmBE,SAAC,GAMJ,IALZC,EAKW,EALXA,UACAJ,EAIW,EAJXA,UACAzuB,EAGW,EAHXA,SACAzE,EAEW,EAFXA,OACAuzB,EACW,EADXA,sBAEA,EAAkCpmB,mBAAe,WAAjD,mBAAOiZ,EAAP,KAAkBC,EAAlB,KAEA,OACE,kBAAC,IAAOvc,QAAR,KACE,kBAAC,GAAD,CACE7U,MAAM,WACN+kB,SAAS,yFAEX,yBAAKjO,MAAOsE,IACV,kBAAC,KAAD,CACEmjB,iBAAkBpN,EAClBrJ,SAAU,SAAChpB,GAAD,OAASsyB,EAAatyB,KAEhC,kBAAC,KAAK0/B,QAAN,CAAclN,IAAI,mBAAmBxyB,IAAI,WACvC,kBAAC,GAAD,CACEs9B,WAAYkC,EACZ5uB,UAAWF,EAASE,aAGxB,kBAAC,KAAK8uB,QAAN,CAAclN,IAAI,WAAWxyB,IAAI,YAC/B,kBAAC,IAAD,CAAMkB,MAAM,iBACV,kBAAC,KAAD,CAAMy+B,SAAUJ,EAAWK,kBAAkB,MAGjD,kBAAC,KAAKF,QAAN,CAAclN,IAAI,SAASxyB,IAAI,UAC7B,kBAAC,GAAD,CAAeiM,OAAQA,EAAQkzB,UAAWA,SCjBvCU,OA7Bf,WACE,IAAMN,EAAYprB,IAAe,SAAC/P,GAAD,OAAWA,EAAMkO,OAAOC,SACnD4sB,EAAYhrB,GAAeyH,IAC3BlL,EAAWyD,IAAe,SAAC/P,GAAD,OAAWA,EAAM8M,WAAWU,YACtD3F,EAASkI,GAAeuH,IACxBvK,EAAW8C,KAEjB,OAAKvD,EAYH,kBAAC,GAAD,CACE6uB,UAAWA,EACXJ,UAAWA,EACXzuB,SAAUA,EACVzE,OAAQA,EACRuzB,sBAf0B,SAAC/B,GAC7BtsB,EACEE,GAAgB,CACdE,aAAcksB,EACdnsB,aAAcZ,EAASE,gBANP,+B,qBCMhBmF,GAAmBC,IAAnBD,QAAS4C,GAAU3C,IAAV2C,MA2HF1C,I,GAAAA,GAlHGC,aAPM,SACtB9R,EACAkxB,GAFsB,MAGlB,CACJn1B,KAAM8b,GAAY7X,EAAOkxB,EAASP,MAAMC,OAAO3zB,OAqHlC4U,EA5Gf,YAGiE,IAF/D9V,EAE8D,EAF9DA,KACA40B,EAC8D,EAD9DA,MAEA,EAAiB3b,mBAAS2b,EAAMC,OAAO3zB,IAAhC6a,EAAP,oBACA,EAA0C9C,oBAAS,GAAnD,mBAAO0G,EAAP,KAAsBmH,EAAtB,KAEMvW,EAAW0D,aACf,SAAChQ,GAAD,uBAAsBA,EAAM8M,WAAWU,gBAAvC,aAAsB,EAA2BlO,QAG7C0M,EAAWgE,aAAY,SAAChQ,GAAD,O3DVM,SAACA,EAAkB8X,GACtD,OAAO9X,EAAMmH,MAAM6E,SAAS8L,IAAW,G2DUrC4jB,CAAsB17B,EAAO8X,MAGzB/K,EAAW8C,KAMjB,OAJAoN,qBAAU,WACJnF,GAAQ/K,EAAShB,GAAkB+L,MACtC,CAACA,EAAQ/K,IAEPhR,EAGH,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAS6X,MAAOsE,IACbnc,EAAK4/B,eACJ,kBAAC,KAAD,CACEC,UAAU,EACVte,OAAO,EACPue,UAAU,EACV1nB,MAAM,OACNhD,IAAKpV,EAAK4/B,gBAGd,kBAAC,KAAD,CACExM,OAAO,EACPC,OAAQ,kBAAM7P,OAAO5T,QAAQ0jB,QAC7BvyB,MAAK,eAAUgb,GACfgkB,SAAUxvB,GAEV,kBAAC,KAAD,CAAc4G,KAAK,QAAQqc,OAAQ,EAAGC,UAAQ,EAACuM,OAAO,YACpD,kBAAC,KAAatpB,KAAd,CAAmBlO,MAAM,iBACtBxI,EAAKkB,IAER,kBAAC,KAAawV,KAAd,CAAmBlO,MAAM,uBACtBxI,EAAK2E,QAAQuD,KAAI,SAACiG,GAAD,OAAY/G,GAAY+G,OAE5C,kBAAC,KAAauI,KAAd,CAAmBlO,MAAM,aACtBxI,EAAK2E,QAAQuD,KAAI,SAACiG,GAAD,OAAYA,EAAO8d,yBAEvC,kBAAC,KAAavV,KAAd,CAAmBlO,MAAM,eACtBqD,GAAyB7L,IAG5B,kBAAC,KAAa0W,KAAd,CAAmBlO,MAAM,QACtBwD,aAAO,IAAI3B,KAAKrK,EAAK6H,gBAAiB,eAEzC,kBAAC,KAAa6O,KAAd,CAAmBlO,MAAM,cACtBwD,aAAO,IAAI3B,KAAKrK,EAAK6H,gBAAiB,UAEzC,kBAAC,KAAa6O,KAAd,CAAmBlO,MAAM,YACtBwD,aAAO,IAAI3B,KAAKrK,EAAKwL,cAAe,UAEvC,kBAAC,KAAakL,KAAd,CAAmBlO,MAAM,SACtBxI,EAAK+L,MAAMxI,MAGd,kBAAC,KAAamT,KAAd,CAAmBlO,MAAM,QAAzB,WAON,kBAAC,GAAD,CACEqR,MAAM,QACNhC,MAAO,CAAEQ,OAAQ,QAAS+b,UAAW,SACrChc,MAAO,IACPmB,aAAW,EACXL,UAAWyG,EACXnG,WAAY,SAACN,GAAD,OAAe4N,EAAiB5N,MAE1CyG,GACA,6BACE,kBAAC,KAAD,CAAY5e,MAAM,SAAU,IAC5B,yBAAK8W,MAAOsE,IACV,kBAAC,IAAD,CACE/F,UAAU,WACVyB,MAAO,CACLwc,UAAW,SACX7P,QAAS,OACTgT,cAAe,SACfnf,OAAQ,SAGTpI,EAAS/H,KAAI,SAAC3D,GAAD,OACZ,kBAAC,GAAD,CAAgBA,QAASA,EAASvE,KAAMA,YA5EtC,iCCrCPigC,GAAe,SAAC,GAMf,IALZ70B,EAKW,EALXA,MACAghB,EAIW,EAJXA,OACAxX,EAGW,EAHXA,OACAkX,EAEW,EAFXA,SACA1oB,EACW,EADXA,QAEA,OACE,kBAAC,KAAD,CAAOipB,WAAYjhB,EAAOhI,QAASA,GACjC,kBAAC,KAAMkpB,OAAP,CACEvrB,MAAM,GACNwrB,UAAU,UACV1sB,IAAI,mBACJ8X,OAAQ,SAAChT,GAAD,OACN,oCACGA,EAAQuD,KAAI,SAACiG,GAAD,OACX,kBAAC,GAAD,CACEgK,IAAKhK,EAAOqe,iBACZtU,SAAU9Q,GAAY+G,GACtBgJ,KAAM,YAMhB,kBAAC,KAAMmV,OAAP,CACEvrB,MAAM,sBACNwrB,UAAU,UACV1sB,IAAI,aACJ8X,OAAQ,SAAChT,GAAD,OACN,oCACE,kBAAC,IAAD,CAAOyR,UAAU,YACdzR,EAAQuD,KAAI,SAACiG,GAAD,OACX,kBAAC,GAAD,CAAYA,OAAQA,EAAQ2d,SAAUA,YAMhD,kBAAC,KAAMQ,OAAP,CACEvrB,MAAM,GACNwrB,UAAU,WACV1sB,IAAI,oBACJ8X,OAAQ,SAACrL,GAAD,OACN,oCACGA,EAASpE,KAAI,SAACgG,GAAD,OACZ,kBAAC,GAAD,CACEiK,IAAKjK,EAAQse,iBACbtU,SAAU9Q,GAAY8G,GACtBiJ,KAAM,YAMhB,kBAAC,KAAMmV,OAAP,CACEvrB,MAAM,UACNwrB,UAAU,WACV1sB,IAAI,cACJ8X,OAAQ,SAACrL,GAAD,OACN,oCACE,kBAAC,IAAD,CAAO8J,UAAU,YACd9J,EAASpE,KAAI,SAACgG,GAAD,OACZ,kBAAC,GAAD,CAAaA,QAASA,EAAS4d,SAAUA,YAMnD,kBAAC,KAAMQ,OAAP,CACEvrB,MAAM,kBACNwrB,UAAU,iBACV1sB,IAAI,iBACJ8X,OAAQ,SAAC9P,GAAD,OACN,oCACE,kBAAC,IAAW2Y,KAAZ,KACGxU,aAAO,IAAI3B,KAAKxC,GAAiB,qBAK1C,kBAAC,KAAMykB,OAAP,CACEvrB,MAAM,gBACNwrB,UAAU,eACV1sB,IAAI,eACJ8X,OAAQ,SAACnM,GAAD,OACN,oCACE,kBAAC,IAAWgV,KAAZ,KACGxU,aAAO,IAAI3B,KAAKmB,GAAe,qBAKxC,kBAAC,KAAM8gB,OAAP,CAAcvrB,MAAM,QAAQwrB,UAAU,UAAU1sB,IAAI,YACpD,kBAAC,KAAMysB,OAAP,CACEvrB,MAAM,GACNlB,IAAI,UACJ8X,OAAQ,SAAC8U,EAAOlP,GAAR,OACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQhY,KAAK,UAAU+T,QAAS,kBAAM8S,EAAO7O,KAA7C,UAGA,kBAAC,IAAD,CAAQmP,QAAM,EAACpT,QAAS,kBAAM1E,EAAO2I,KAArC,gBCzGC2iB,GAAkB,CAC7B,CAAEnT,KAAM,YAAatV,UAAW0oB,GAAc33B,MAAO,QACrD,CACEukB,KAAM,uBACNtV,UAAW2oB,GACX53B,MAAO,uBAET,CACEukB,KAAM,iBACNtV,UCd+B,WACjC,IAAMrM,EAAQmpB,GAAmB,oBAE3BvjB,EAAW8C,KAEX1Q,EAAU4Q,IAAe,SAAC/P,GAAD,OAAsBA,EAAMmH,MAAMhI,WAE3Di9B,EAAmB,SAACrgC,EAAY4C,GACpCoO,EAASjB,GAAiB,CAAE7O,GAAIlB,EAAKkB,GAAI0B,aAO3C,OAJAse,qBAAU,WACRlQ,EAASlB,GAAW,CAAElN,OAAQ,wBAC7B,CAACoO,IAGF,kBAAC,IAAO4E,QAAR,KACE,kBAAC,GAAD,CACE7U,MAAM,oBACN+kB,SAAS,oHAEX,yBAAKjO,MAAOsE,IACV,kBAAC,GAAD,CACE/Q,MAAOA,EACPghB,OAAQ,SAACpsB,GAAD,OAAgBqgC,EAAiBrgC,EAAM,cAC/C4U,OAAQ,SAAC5U,GAAD,OAAgBqgC,EAAiBrgC,EAAM,aAC/C8rB,SAAU,SAACiB,GAAD,OAAkB/b,EAAShJ,aAAK+kB,KAC1C3pB,QAASA,ODZfoF,MAAO,iBAET,CAAEukB,KAAM,QAAStV,UAAW6oB,GAAU93B,MAAO,qBAC7C,CAAEukB,KAAM,SAAUtV,UAAW8oB,GAAW/3B,MAAO,SAC/C,CAAEukB,KAAM,WAAYtV,UAAW+oB,GAAah4B,MAAO,WACnD,CACEukB,KAAM,eACNtV,UAAWgpB,GACXj4B,MAAO,2BAET,CACEukB,KAAM,gBACNtV,UAAWipB,GACXl4B,MAAO,WAET,CAAEukB,KAAM,eAAgBtV,UAAWkpB,GAAqBn4B,MAAO,cAC/D,CAAEukB,KAAM,YAAatV,UAAWmpB,GAAcp4B,MAAO,YACrD,CAAEukB,KAAM,YAAatV,UAAWopB,GAAer4B,MAAO,aACtD,CAAEukB,KAAM,IAAKtV,UAAWmlB,GAAep0B,MAAO,cEzCnCqnB,GAIP,CACJ,CACErnB,MAAO,aACP3I,IAAK,aACL0H,MAAO,cAET,CACEiB,MAAO,QACP3I,IAAK,QACL0H,MAAO,SAET,CACEiB,MAAO,YACP3I,IAAK,YACL0H,MAAO,cAIEuoB,GAIP,CACJ,CACEtnB,MAAO,6BACP3I,IAAKqJ,GAAe2kB,iBACpBtmB,MAAO2B,GAAe2kB,kBAExB,CACErlB,MAAO,gCACP3I,IAAKqJ,GAAe4kB,4BACpBvmB,MAAO2B,GAAe4kB,6BAExB,CACEtlB,MAAO,cACP3I,IAAKqJ,GAAe6kB,kBACpBxmB,MAAO2B,GAAe6kB,oB,IAIW,sBAClC7kB,GAAe2kB,iBAAmB,8BADA,gBAElC3kB,GAAe4kB,4BAA8B,iCAFX,gBAGlC5kB,GAAe6kB,kBAAoB,qB,mBCtChC+S,GAA+B,CACnC,CACE//B,MAAO,uBACP2L,YACE,iGACF7M,IAAK,SAEP,CACEkB,MAAO,WACP2L,YACE,uFACF7M,IAAK,aCtBMkhC,GD0BS,SAAC,GAA6C,IAA3C/gC,EAA0C,EAA1CA,KAAMghC,EAAoC,EAApCA,WAAYhuB,EAAwB,EAAxBA,WAC3C,EAA4BiG,mBAAS,IAArC,mBAAOgoB,EAAP,KAAeC,EAAf,KACA,OACE,kBAAC,KAAD,CACEngC,MAAK,sBAAiBf,EAAKkB,GAAtB,KACLwf,KAAM,WACJsgB,EAAWhhC,EAAKkB,GAAI+/B,GACpBjuB,KAEF2N,SAAU3N,EACVmuB,OAAO,UACP1gB,SAAS,GAET,kBAAC,IAAD,CAAOrK,UAAU,YACf,kBAAC,IAAWoK,KAAZ,KACG,IADH,gEAEgE,IAC7D7U,GAAwB3L,GAH3B,QAGuC6L,GAAyB7L,GAHhE,KAMA,kBAAC,KAAD,CACEohC,KAAM,EACNvY,SAAU,SAACI,GAAD,OAAOiY,EAAUjY,EAAEzpB,OAAO+H,QACpCA,MAAO05B,IAET,kBAAC,IAAD,KACE,kBAAC,IAAWzgB,KAAZ,wBACCsgB,GAA6B54B,KAAI,SAAC+4B,GAAD,OAChC,kBAAC,KAAD,CAAKphC,IAAKohC,EAAOphC,IAAKyZ,QAAS,kBAAM4nB,EAAUD,EAAOv0B,eACnDu0B,EAAOlgC,cEtDPsgC,GCMD,SAACpgC,GACb,IAAM+P,EAAW8C,KACX5R,EAAO8R,IAAe,SAAC/P,GAAD,OAAWA,EAAMuP,OAAOtR,QAEpD,OAAQA,EAAK4Q,YACX,IAAK,oBACH,OACE,kBAAC,GAAD,CACE9S,KAAMkC,EAAKmF,OACX2L,WAAY,kBAAMhC,EAASgC,OAC3BguB,WAAY,SAAC9/B,EAAY+/B,GAAb,OACVjwB,EACEjB,GAAiB,CACf7O,KACA0B,OAAQ,YACRyM,cAAe4xB,QAM3B,QACE,OAAO,gC,qBCIPK,GAAa,SAEb7f,GAAS,kBACb,yBAAKngB,UAAU,0BACb,kBAAC,KAAD,CAAM6V,KAAK,QAAQ7V,UAAU,SAASogB,IAAK,0BAqHhC6f,OAjHf,YAAiD,IAAlC3xB,EAAiC,EAAjCA,QACPiB,EAAUmD,IAAe,SAAC/P,GAAD,OAAWA,EAAM4M,WAC1CY,EAAWuC,IAAe,SAAC/P,GAAD,OAAWA,EAAM8M,WAAWU,YACtDiG,EAAW1D,IAAe,SAAC/P,GAAD,OAAWA,EAAMoP,OAAOmuB,SAAS9pB,YAC3DqB,EAAiBwb,GAAmB,QAAQ50B,OAC5CqR,EAAW8C,KAEjB,EAA8CmF,mBACzB,WAAnBpI,EAAQjO,QADV,mBAAO2U,EAAP,KAAwBkqB,EAAxB,KAGA,EAA0CxoB,oBAAS,GAAnD,mBAAOyoB,EAAP,KAAsBC,EAAtB,KAEAC,KAAY,CACVC,IAAK1tB,4EACL2tB,aAAc,CAAC,IAAIC,KAAaC,gBAChCC,QAAS,kBAAoB9tB,gSAAY+tB,oBACzCC,iBAAkB,IAGpB,IAAMrpB,ErDUkB9E,GAAeuG,IAEhBhP,QAAO,SAACyC,GAAD,MAAsC,YAAtBA,EAAWpL,UACtDjD,OqDZGyiC,E/BbD,SAAgCx/B,GACrC,MAA0BqW,mBAAS,GAAnC,mBAAOiB,EAAP,KAAcmoB,EAAd,KACM5N,EAAYzgB,GAAemH,IAOjC,OALA+F,qBAAU,WACR,IAAMohB,EAAkB7N,EAAUlpB,QAAO,SAACvL,GAAD,OAAUA,EAAK4C,SAAWA,KACnEy/B,EAASC,EAAgB3iC,UACxB,CAAC80B,EAAW7xB,IAERsX,E+BImBqoB,CAAuB,oBAEjDrhB,qBAAU,kBAAMugB,EAAsC,WAAnB5wB,EAAQjO,UAAsB,CAC/DiO,EAAQjO,SAGV,IAAM4/B,EAAkD,CACtDjrB,kBACAC,mBAAoB8pB,IAGhBvwB,EAAakD,YAAYoH,IAuC/B,OArCA6F,qBAAU,WACJ3J,GAAiBvG,EAASN,QAC7B,CAAC6G,EAAiBvG,IAErBkQ,qBAAU,WACH3J,GAAmBG,IAAa4pB,IACnCtwB,E7FpBG,CACLzL,KAAMJ,EACNf,Q6FkB0BsT,MACzB,CAAC1G,EAAUuG,EAAiBG,IAE/BwJ,qBAAU,WACJzP,IACFkwB,GAAiB,GAIjB,sBAAC,sBAAA7/B,EAAA,sEACOyS,QAAQkuB,WAAW,CACvBzxB,EAASnC,MACTmC,EAASpP,KACToP,EAASvM,KACTuM,EAASxC,MACTwC,EAAS0B,MACT1B,EAASgB,MACThB,EACElB,GAAW,CACTjI,eAAgB,CACdC,WAAYm0B,aAAa,IAAI5xB,MAAQ2yB,UACrCj1B,SAAUk1B,aAAW,IAAI5yB,MAAQ2yB,WAEnCpO,MAAO,SAdd,0CAAD,GAkBKvL,MAAK,kBAAMse,GAAiB,SAElC,CAAClwB,EAAUT,IAGZ,kBAAC,KAAD,CAAiBpB,QAASA,GACxB,kBAAC,IAAD,CAAQiI,MAAO,CAAE6qB,UAAW,UACzBjxB,GACC,kBAAC,GAAD,CACE/L,KAAMmL,EAAQnL,KACdkT,WAAYrB,EACZjS,OAAQA,GACRmM,SAAUA,EACVV,WAAYA,EACZ8H,OAAQ,SAACtI,GAAD,OACNS,EAASV,GAAqBC,KAEhCwI,eAAgBA,EAChBD,cAAeA,EACfE,kBAAmBopB,IAGvB,kBAAC,IAAD,KACIV,GAAiBnqB,GACA,YAAnB1G,EAAQjO,OACN,kBAAC,GAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+/B,OAAK,EAAC5V,KAAMuU,GAAY7pB,UAAWmrB,KACzC1C,GAAOh4B,KAAI,SAAC26B,GAAD,OACV,kBAAC,GAAD,eACEF,OAAK,GACDH,EAFN,CAGEzV,KAAM8V,EAAM9V,KACZtV,UAAWorB,EAAMprB,UACjB5X,IAAKgjC,EAAMr6B,eAOvB,kBAAC64B,GAAD,QC1IcyB,QACW,cAA7Btf,OAAOge,SAASuB,UAEe,UAA7Bvf,OAAOge,SAASuB,UAEhBvf,OAAOge,SAASuB,SAASnO,MACvB,2DCXNoO,IAASrrB,OACP,kBAAC,IAAMsrB,WAAP,KACE,kBAAC,IAAD,CAAUC,MAAOvyB,IACf,kBAAC,GAAD,CAAKf,QAASA,OAGlB6qB,SAAS0I,eAAe,SD8HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjgB,MAAK,SAAAkgB,GACJA,EAAaC,gBAEdC,OAAM,SAAAn/B,GACLU,QAAQV,MAAMA,EAAMC,a","file":"static/js/main.c6c02ae2.chunk.js","sourcesContent":["var _defs, _path, _polygon, _polygon2, _path2, _polygon3, _polygon4, _path3, _path4, _path5, _path6, _path7, _path8, _path9;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Golden_Grid\",\n    \"data-name\": \"Golden Grid\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 666.85 257.93\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1,.cls-2{fill:#0073eb;stroke:#fff;stroke-miterlimit:10;stroke-width:3px;}.cls-2{opacity:0.7;}.cls-3{fill:#1a1a1a;}\"))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M111.83,48.88h0l-8.38,20.22L98.27,81.58l0,0v.08L91.48,98h0L90,101.55h0l-2.9,7-.6-2.23-.64-2.43-4-15.27L71,47.66l-1.6-6.1L63.79,20.1Z\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"cls-2\",\n    points: \"87.09 108.56 85.99 107.12 84.4 105.05 77.65 96.2 71.96 88.74 50.31 60.32 41.21 48.39 71.04 47.66 81.83 88.63 85.85 103.9 86.49 106.33 87.09 108.56\"\n  })), _polygon2 || (_polygon2 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"cls-1\",\n    points: \"67.95 154.72 59.71 174.61 29.58 171.5 58.55 149.76 64.48 145.32 75.17 137.31 67.96 154.69 67.95 154.72\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M134.41,137.69h0L81.75,151.16l-2.83.73-11,2.8,7.21-17.38h0l2.27-5.48h0l9.54-23,.1-.23h0l2.9-7h0L91.47,98h0l6.75-16.29h0l0-.09,5.17-12.47,8.38-20.22h0l4,15.53,4.51,17.78,4.95,19.43,3,11.89h0Z\"\n  })), _polygon3 || (_polygon3 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"cls-1\",\n    points: \"161.52 72.3 156.34 84.79 151.4 96.73 147.81 105.36 146.74 107.93 146.74 107.94 134.41 137.69 128.27 113.52 128.26 113.52 125.24 101.63 120.29 82.2 120.3 82.19 121.87 81.82 141.5 77.1 160.2 72.62 161.52 72.3\"\n  })), _polygon4 || (_polygon4 = /*#__PURE__*/React.createElement(\"polygon\", {\n    className: \"cls-2\",\n    points: \"187.8 89.91 179.44 91.47 170.42 93.17 170.41 93.16 151.4 96.73 156.34 84.79 161.52 72.3 162.14 72.71 187.8 89.91\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M234.77,211.91h-17.2L209.18,190H163l-8.4,21.88H137.37l38.93-98.23h19.54Zm-66-36.73H203.4l-17.33-45.27Z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M259.67,211.91H245V161.28h-5.64V148.07h11.83l6.19,6.2c5.5-4.54,12.24-7.43,18.57-7.43a20.61,20.61,0,0,1,17.34,8.66,31.53,31.53,0,0,1,21-8.66c11.7,0,22.43,8,22.43,26.55v38.52H322V173.39c0-8.39-4.54-12.93-11.28-12.93-7.57,0-12.52,4.54-12.52,10.59v40.86H283.61V173.39c0-8.39-4.68-12.93-11.29-12.93-7.42,0-12.65,4.4-12.65,10.18Z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M393.53,190.72l12.1,6.61c-4.95,8.39-14.17,16.09-26.82,16.09-18.3,0-31.37-15.41-31.37-33.29s13.07-33.57,31.23-33.57,29.44,15.27,30,31.92l-5.5,5.36H362.3c.82,9.5,8.11,15.82,16.51,15.82C384.58,199.66,390.36,196,393.53,190.72ZM363,172.15h30.95c-1-7.15-7.43-12.52-15.27-12.52A15.72,15.72,0,0,0,363,172.15Z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M461.76,190.72l12.11,6.61c-4.95,8.39-14.17,16.09-26.83,16.09-18.3,0-31.37-15.41-31.37-33.29s13.07-33.57,31.23-33.57,29.44,15.27,30,31.92l-5.5,5.36H430.53c.83,9.5,8.12,15.82,16.51,15.82C452.82,199.66,458.6,196,461.76,190.72Zm-30.54-18.57h30.95c-1-7.15-7.42-12.52-15.27-12.52A15.72,15.72,0,0,0,431.22,172.15Z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M489.41,113.68l4.82-5h10.18V197.6h5.64v14.31H495.6l-6.19-6.33Z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M540.73,211.91H526V161.28h-5.5V148.07h15l5.23,5.23ZM532,112a10.49,10.49,0,0,1,10.39,10.39A10.37,10.37,0,0,1,532,132.67a10.25,10.25,0,0,1-10.25-10.26A10.37,10.37,0,0,1,532,112Z\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-3\",\n    d: \"M620,180a33.36,33.36,0,1,1-33.29-33.29A33.35,33.35,0,0,1,620,180Zm-15,0c0-10.32-7.71-19.12-18.3-19.12s-18.44,8.8-18.44,19.12,7.85,19.26,18.44,19.26S605,190.31,605,180Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.31994bf9.svg\";\nexport { ForwardRef as ReactComponent };","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n  EntityState,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\n\nexport const staffAdapter = createEntityAdapter<Staff>();\n\nexport const fetchStaff = createAsyncThunk(\"staff/fetchStaff\", async () => {\n  const body = await fetchAuthenticated(`staffMembers`);\n\n  const staff = (body.data as Record<string, unknown>).results as Staff[];\n\n  return staff;\n});\n\nexport const updateStaff = createAsyncThunk(\n  \"staff/updateStaff\",\n  async (args: { userId: string; permissions: Permission[] }) => {\n    const body = await fetchAuthenticated(\"/admin\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user_id: args.userId,\n        permissions: args.permissions,\n      }),\n    });\n\n    if (body.status !== 200)\n      throw new Error(\"Failed to update staff member information\");\n\n    return { userId: args.userId, changes: { permissions: args.permissions } };\n  }\n);\n\nexport const createStaff = createAsyncThunk(\n  \"staff/createStaff\",\n  async (args: { email: string; role: string; permissions: Permission[] }) => {\n    const body = await fetchAuthenticated(`/admin`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: args.email,\n        role: args.role,\n        permissions: args.permissions,\n      }),\n    });\n    const staff = body.data as Staff;\n\n    return staff;\n  }\n);\ninterface StaffState extends EntityState<Staff> {\n  error?: string;\n}\n\nconst initialState: StaffState = staffAdapter.getInitialState({\n  loading: false,\n});\n\nexport const staffSlice = createSlice({\n  name: \"staff\",\n  initialState: initialState,\n  reducers: {\n    staffSetAll: staffAdapter.setAll,\n    staffUpdateOne: staffAdapter.updateOne,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchStaff.fulfilled, (state, action) =>\n      staffAdapter.addMany(state, action.payload)\n    );\n    builder.addCase(fetchStaff.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n    builder.addCase(updateStaff.fulfilled, (state, action) =>\n      staffAdapter.updateOne(state, {\n        id: action.payload.userId,\n        changes: action.payload.changes,\n      })\n    );\n    builder.addCase(updateStaff.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n    builder.addCase(createStaff.fulfilled, (state, action) =>\n      staffAdapter.addOne(state, action.payload)\n    );\n    builder.addCase(createStaff.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n  },\n});\n\nexport const staffActions = staffSlice.actions;\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { Inmate } from \"src/typings/Inmate\";\n\nexport const fetchInmates = createAsyncThunk(\n  \"inmates/fetchInmates\",\n  async () => {\n    const body = await fetchAuthenticated(`inmates`);\n\n    const inmates = (body.data as Record<string, unknown>).results as Inmate[];\n\n    return inmates;\n  }\n);\n\nexport const inmatesAdapter = createEntityAdapter<Inmate>();\n\nexport const inmatesSlice = createSlice({\n  name: \"inmates\",\n  initialState: inmatesAdapter.getInitialState(),\n  reducers: {\n    inmatesAddMany: inmatesAdapter.addMany,\n    inmatesUpdate: inmatesAdapter.updateOne,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchInmates.fulfilled, (state, action) =>\n      inmatesAdapter.setAll(state, action.payload)\n    );\n    builder.addCase(fetchInmates.rejected, (state, action) =>\n      console.log(\"error\")\n    );\n  },\n});\n\nexport const inmatesActions = inmatesSlice.actions;\n","import { AuthInfo, User } from \"src/typings/Session\";\n\n// TODO migrate this to redux slice\n// @gabe: I attempted the migraton, but it's creating some wild circular dependeies\n\ntype SessionStatus = \"inactive\" | \"active\" | \"loading\";\n\ninterface SessionState {\n  status: SessionStatus;\n  user: User;\n  redirectUrl: string;\n  authInfo: AuthInfo;\n}\n\n// Constants & Shapes\nconst SET_SESSION = \"user/SET_SESSION\";\nconst SET_REDIRECT_URL = \"user/SET_REDIRECT_URL\";\nconst LOGOUT = \"user/LOGOUT\";\nconst SET_SESSION_STATUS = \"user/SET_SESSION_STATUS\";\n\ninterface SetSessionAction {\n  type: typeof SET_SESSION;\n  payload: { user: User; token: string };\n}\ninterface LogoutAction {\n  type: typeof LOGOUT;\n}\n\ninterface SetRedirectUrlAction {\n  type: typeof SET_REDIRECT_URL;\n  payload: string;\n}\n\ninterface SetSessionStatusAction {\n  type: typeof SET_SESSION_STATUS;\n  payload: SessionStatus;\n}\n\ntype UserActionTypes =\n  | LogoutAction\n  | SetSessionAction\n  | SetRedirectUrlAction\n  | SetSessionStatusAction;\n\nexport const logout = (): UserActionTypes => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const setSession = (payload: {\n  user: User;\n  token: string;\n}): UserActionTypes => {\n  return {\n    type: SET_SESSION,\n    payload,\n  };\n};\n\nexport const setRedirectUrl = (url: string): UserActionTypes => {\n  return {\n    type: SET_REDIRECT_URL,\n    payload: url,\n  };\n};\n\nexport const setSessionStatus = (status: SessionStatus): UserActionTypes => {\n  return {\n    type: SET_SESSION_STATUS,\n    payload: status,\n  };\n};\n// Reducer\nconst initialState: SessionState = {\n  user: {\n    id: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    staffPositions: [],\n  },\n  authInfo: {\n    id: \"\",\n    type: \"doc\",\n    token: \"\",\n  },\n  status: \"inactive\",\n  redirectUrl: \"/\",\n};\n\nexport function sessionReducer(\n  state = initialState,\n  action: UserActionTypes\n): SessionState {\n  switch (action.type) {\n    case SET_SESSION:\n      const { user, token } = action.payload;\n      return {\n        ...state,\n        user,\n        authInfo: { token, type: \"doc\", id: user.id },\n        status: \"active\",\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        user: {\n          id: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          staffPositions: [],\n        },\n        status: \"inactive\",\n        redirectUrl: \"/\",\n      };\n    case SET_REDIRECT_URL:\n      return { ...state, redirectUrl: action.payload };\n    case SET_SESSION_STATUS:\n      return { ...state, status: action.payload };\n    default:\n      return state;\n  }\n}\n","import { CallAlert, GridOption } from \"src/typings/Call\";\n\nexport enum WeekdayMap {\n  Sunday = 0,\n  Monday = 1,\n  Tuesday = 2,\n  Wednesday = 3,\n  Thursday = 4,\n  Friday = 5,\n  Saturday = 6,\n}\n\nexport const WEEKDAYS = [\n  WeekdayMap.Sunday,\n  WeekdayMap.Monday,\n  WeekdayMap.Tuesday,\n  WeekdayMap.Wednesday,\n  WeekdayMap.Thursday,\n  WeekdayMap.Friday,\n  WeekdayMap.Saturday,\n];\n\n// 30 min\nexport const DEFAULT_DURATION_MS = 1800000;\n\nexport const SIDEBAR_WIDTH = 300;\n\nexport const GRID_TO_SPAN_WIDTH: { [key in GridOption]: number } = {\n  1: 24,\n  2: 12,\n  4: 12,\n  6: 8,\n  8: 6,\n};\n\nexport const GRID_TO_VH_HEIGHT: { [key in GridOption]: number } = {\n  1: 80,\n  2: 80,\n  4: 40,\n  6: 40,\n  8: 40,\n};\n\nexport const CALL_ALERTS: CallAlert[] = [\n  {\n    id: 0,\n    title: \"Unallowed visitor\",\n    body:\n      \"All participants on the call must have  been registered and pre-approved ahead of time. The presence of unallowed visitors may lead to call termination.\",\n  },\n  {\n    id: 1,\n    title: \"Appropriate clothing\",\n    body:\n      \"All adult and minor visitors, including attorneys, must be fully dressed in appopriate, conventional clothing which is not unduly provocative, suggestive, or revealing and does not resemble offender attire or present adornments which could be used as a weapon.\",\n  },\n  {\n    id: 2,\n    title: \"Clothing exposure\",\n    body:\n      \"Any clothing worn on the top half of the body must have sleeves and not expose the cleavage line, back, midriff and/or underarm at any time while standing, sitting, and/or bending down.\",\n  },\n  {\n    id: 3,\n    title: \"Appropriate undergarments\",\n    body: \"Appropriate undergarments are required, and will not be visible.\",\n  },\n  {\n    id: 4,\n    title: \"No sheer clothing\",\n    body:\n      \"Clothing which is sheer or transparent will not be permitted. Clothing that contains holes and/or rips will not be permitted.\",\n  },\n  {\n    id: 5,\n    title: \"Clothing no shorter than knee\",\n    body:\n      \"Outer garments worn on the bottom half of the body must be no shorter than the knee while standing.\",\n  },\n  {\n    id: 6,\n    title: \"Leggings no shorter than knee\",\n    body:\n      \"Leggings and jeggings may only be worn under outer garments that must be no shorter than the knee while standing.\",\n  },\n];\n","import { EventInput } from \"@fullcalendar/react\";\nimport { addSeconds, format, differenceInSeconds } from \"date-fns\";\nimport { snakeCase } from \"snake-case\";\nimport { toQueryString } from \"src/api/Common\";\nimport { CallFilters, Call } from \"src/typings/Call\";\n\nexport const genFullName = (entity?: BasePersona): string =>\n  entity ? `${entity.firstName} ${entity.lastName}` : \"\";\n\nexport const genImageUri = (user?: BasePersona): string => {\n  return user?.profileImagePath || \"default.jpg\";\n};\n\nexport const VisitationToEventInput = (call: Call): EventInput => {\n  const contactNames = call.contacts.reduce(\n    (prev, cur) => `${prev}, ${genFullName(cur)}`,\n    \"\"\n  );\n  const inmateNames = call.inmates.reduce(\n    (prev, cur) => `${prev}, ${genFullName(cur)}`,\n    \"\"\n  );\n  return {\n    title: `${inmateNames} <> ${contactNames}`,\n    start: call.scheduledStart,\n    end: call.scheduledEnd,\n  };\n};\n\nconst formatSecondsToMS = (secs: number): string => {\n  return format(addSeconds(new Date(0), secs), \"mm:ss\");\n};\nexport const calculateDurationMS = (start: Date, end: Date): string => {\n  const secs = differenceInSeconds(end, start);\n  return formatSecondsToMS(secs);\n};\n\nexport const cloneObject = (obj: Object): Object =>\n  JSON.parse(JSON.stringify(obj));\n\nexport function onlyUnique(\n  value: number | string,\n  index: number,\n  self: (number | string)[]\n) {\n  return self.indexOf(value) === index;\n}\n\nexport const createCallOptionsParam = (filters: CallFilters): string => {\n  const options: string[][] = [];\n  for (const k of Object.keys(filters)) {\n    const key = k as keyof CallFilters;\n    if (key === \"scheduledStart\") {\n      if (\n        filters.scheduledStart?.rangeStart &&\n        filters.scheduledStart.rangeEnd\n      ) {\n        options.push([\n          snakeCase(key),\n          `${filters.scheduledStart.rangeStart},${filters.scheduledStart.rangeEnd}`,\n        ]);\n      }\n    } else if (filters[key]) {\n      options.push([snakeCase(key), `${filters[key]}`]);\n    }\n  }\n\n  return toQueryString(options);\n};\nexport const getInitials = (str: string) => {\n  return str\n    .split(\" \")\n    .map((n) => n[0])\n    .join(\"\");\n};\n\nfunction hashCode(str: string): number {\n  var hash = 0;\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 6) - hash);\n  }\n  return hash;\n}\n\nexport function generateBgColor(label: string): string {\n  const BACKGROUND_COLORS = [\n    \"#093145\",\n    \"#3C6478\",\n    \"#107896\",\n    \"#43ABC9\",\n    \"#C2571A\",\n    \"#9A2617\",\n  ];\n  return BACKGROUND_COLORS[\n    Math.abs(hashCode(label) % BACKGROUND_COLORS.length)\n  ];\n}\n\nexport function notEmpty<TParam>(\n  value: TParam | null | undefined\n): value is TParam {\n  return value !== null && value !== undefined;\n}\n\nexport const groupBy = <T, K extends keyof any>(\n  list: T[],\n  getKey: (item: T) => K,\n  mustHave?: K[] // makes it so that if there are no items of key X, it will still be initialized as X: [] instead of X: undefined\n) => {\n  const result = list.reduce((previous, currentItem) => {\n    const group = getKey(currentItem);\n    if (!previous[group]) previous[group] = [];\n    previous[group].push(currentItem);\n    return previous;\n  }, {} as Record<K, T[]>);\n  if (mustHave) {\n    mustHave.forEach((key) => {\n      if (!result[key]) {\n        result[key] = [];\n      }\n    });\n  }\n  return result;\n};\n\nexport function isSubstring(candidate: string, main: string) {\n  return main.toLowerCase().includes(candidate.toLowerCase());\n}\n\nexport function capitalize(str: string): string {\n  if (!str.length) return \"\";\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import { Store } from \"src/redux\";\nimport { showToast } from \"src/utils\";\n\nexport const API_URL = process.env.REACT_APP_API_URL || \"api/v1/\";\n\nexport interface ApiResponse {\n  date: number;\n  good: boolean;\n  status: number;\n  message?: string;\n  data: Record<string, unknown> | Record<string, unknown>[] | unknown;\n}\n\nexport function fetchTimeout(\n  fetchUrl: string,\n  options: Record<string, unknown>,\n  timeout = 15000\n): Promise<Response> {\n  return Promise.race([\n    fetch(fetchUrl, { ...options, mode: \"cors\" }),\n    new Promise<Response>((_, reject) =>\n      setTimeout(() => reject(new Error(\"timeout\")), timeout)\n    ),\n  ]);\n}\n\nexport function toQueryString(options: string[][]) {\n  return options.map((x) => x[0] + \"=\" + encodeURIComponent(x[1])).join(\"&\");\n}\n\nexport async function fetchAuthenticated(\n  fetchUrl: string,\n  options: Record<string, unknown> = {},\n  nodeResource = true,\n  timeout = 15000\n): Promise<ApiResponse> {\n  const state = Store.getState();\n\n  const requestOptions = {\n    ...options,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: state.session.authInfo.token,\n    },\n    credentials: \"include\",\n  };\n\n  const url = `${API_URL}${\n    nodeResource ? `facilities/${state.facilities.selected?.id}/` : \"\"\n  }${fetchUrl}`;\n  const response = await fetchTimeout(url, requestOptions, timeout);\n\n  if (response.status === 400 || response.status === 403) {\n    showToast(\n      \"fetchAuthenticated\",\n      \"You are not allowed to perform this action. Contact the admin.\",\n      \"error\"\n    );\n  }\n\n  if (response.status !== 200 && response.status !== 201) {\n    throw new Error(`Failed to access resource ${fetchUrl}`);\n  }\n\n  const body = await response.json();\n  return body;\n}\n","export interface Route {\n  path: string;\n  component: React.ComponentType<any>;\n  label: string;\n}\n\nexport interface TableColumn {\n  title: string;\n  dataIndex: string;\n  width?: string;\n  editable?: boolean;\n  render?: Function;\n}\n\nexport type MemberType = \"inmate\" | \"contact\";\n\nexport enum VisitationType {\n  FAMILY_IN_PERSON = \"family_in_person_with_contact\",\n  FAMILY_IN_PERSON_NO_CONTACT = \"family_in_person_no_contact\",\n  FAMILY_VIDEO_CALL = \"family_video_call\",\n}\n","import {\n  addMilliseconds,\n  format,\n  getHours,\n  getMinutes,\n  startOfMonth,\n} from \"date-fns\";\nimport {\n  CallBlock,\n  Call,\n  WeeklySchedule,\n  BaseCall,\n  CallVideoHandler,\n  CallParticipant,\n  ParticipantType,\n} from \"src/typings/Call\";\nimport { CallSlot, TentativeCallSlot } from \"src/typings/Facility\";\nimport { WeekdayMap, WEEKDAYS, DEFAULT_DURATION_MS } from \"./constants\";\nimport _ from \"lodash\";\nimport { addWeeks } from \"@fullcalendar/react\";\nimport { Contact } from \"src/typings/Contact\";\nimport { Dictionary } from \"@reduxjs/toolkit\";\nimport { Inmate } from \"src/typings/Inmate\";\nimport { notEmpty } from \"./Common\";\nimport { Kiosk } from \"src/typings/Kiosk\";\nimport { VisitationType } from \"src/typings/Common\";\n\nconst callSlotToDateString = (time: CallSlot): string => {\n  const date = new Date();\n  date.setHours(time.hour);\n  date.setMinutes(time.minute);\n  return date.toString();\n};\n\nconst calcEndCallSlot = (time: CallSlot): string => {\n  const date = new Date();\n  // TODO fix this\n  // const offset = date.getDay() - time.day;\n  //     date.setDate(date.getDate() + offset);\n  //   date.setDate(time.day);\n  date.setHours(time.hour);\n  date.setMinutes(time.minute);\n  // const hi = addMilliseconds(date, duration);\n  return addMilliseconds(date, time.duration).toString();\n};\n\nexport const mapCallSlotsToTimeBlock = (\n  callTimes: CallSlot[]\n): WeeklySchedule => {\n  const groups = _.groupBy(callTimes, (time) => time.day);\n\n  const sorted: [WeekdayMap, CallSlot[]][] = WEEKDAYS.map(\n    (weekday: WeekdayMap) => {\n      if (!(weekday in groups)) {\n        return [weekday, []];\n      }\n      return [\n        weekday,\n        groups[weekday].sort((ct1, ct2) => {\n          if (ct1.hour > ct2.hour) return 1;\n          if (ct1.hour < ct2.hour) return -1;\n\n          if (ct1.minute > ct2.minute) return 1;\n          if (ct1.minute < ct2.minute) return -1;\n          return 1;\n        }),\n      ];\n    }\n  );\n\n  let idx = 0;\n\n  const ranges: {\n    [key: number]: CallBlock[];\n  }[] = sorted.map(([weekday, times]) => {\n    if (!times.length) {\n      return { [weekday]: [] };\n    }\n    const timeRanges: CallBlock[] = [];\n    let curr: CallSlot = times[0];\n    let first: CallSlot = times[0];\n\n    // create intervals\n    for (const time of times.slice(1, times.length)) {\n      // if same time, just keep moving through the list e.g 11.00 --> 11.30\n      if (curr.hour === time.hour) curr = time;\n      else if (time.hour === curr.hour + 1 && time.minute === 0)\n        // e.g 11.30 --> 12.00\n        curr = time;\n      else {\n        // new time range\n        // TODO account for potential timezone differences?\n        timeRanges.push({\n          duration: DEFAULT_DURATION_MS,\n          start: callSlotToDateString(first),\n          end: calcEndCallSlot(curr),\n          idx,\n          day: first.day,\n        });\n        // reset\n        first = time;\n        curr = time;\n        idx += 1;\n      }\n    }\n    // create last range\n    timeRanges.push({\n      duration: DEFAULT_DURATION_MS,\n      start: callSlotToDateString(first),\n      end: calcEndCallSlot(curr),\n      idx,\n      day: first.day,\n    });\n\n    return { [weekday]: timeRanges };\n  });\n  return Object.assign({}, ...ranges);\n};\n\nexport const mapCallBlockToCallSlots = (\n  ranges: WeeklySchedule,\n  type: VisitationType\n): TentativeCallSlot[] => {\n  const rangeList = WEEKDAYS.map((weekday) => ranges[weekday] || []).reduce(\n    (prev, curr) => prev.concat(curr),\n    []\n  );\n\n  const res = rangeList\n    .map((range) => {\n      let iterator = new Date(range.start);\n      const endTime = new Date(range.end);\n\n      if (iterator > endTime) throw new Error(\"Invalid time range\");\n\n      const callTimes: TentativeCallSlot[] = [];\n\n      while (iterator < endTime) {\n        callTimes.push({\n          hour: getHours(iterator),\n          minute: getMinutes(iterator),\n          day: range.day,\n          duration: range.duration,\n          type,\n        });\n        iterator = addMilliseconds(iterator, range.duration);\n      }\n\n      return callTimes;\n    })\n    .reduce((prev, curr) => prev.concat(curr), []);\n  return res;\n};\n\nexport const dayOfWeekAsString = (dayIndex: WeekdayMap): string => {\n  return (\n    [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ][dayIndex] || \"\"\n  );\n};\n\nfunction mondayMorning(date: Date): Date {\n  const day = date.getDay();\n  date.setDate(date.getDate() - day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nconst callsWithinPeriod = <TCall extends BaseCall>(\n  calls: TCall[],\n  start: Date,\n  end: Date\n): TCall[] => {\n  return calls.filter(\n    (call) =>\n      new Date(call.scheduledEnd) >= start && new Date(call.scheduledEnd) <= end\n  );\n};\n\nexport const callsToday = <TCall extends BaseCall>(calls: TCall[]): TCall[] => {\n  const morning = new Date();\n  morning.setHours(0, 0, 0, 0);\n  const evening = new Date();\n  evening.setHours(23, 59, 59, 59);\n  return callsWithinPeriod(calls, morning, evening);\n};\n\nexport const callsToDailyLogs = (calls: Call[]) => {\n  return calls.map((call) => ({\n    incarceratedPerson: getCallInmatesFullNames(call),\n    visitors: getCallContactsFullNames(call),\n    kiosks: call.kiosk.name,\n    date: format(new Date(call.scheduledStart), \"MM/dd/yyyy\"),\n    scheduledStart: format(new Date(call.scheduledStart), \"HH:mm\"),\n    scheduledEnd: format(new Date(call.scheduledEnd), \"HH:mm\"),\n  }));\n};\n\nexport const callsToWeeklyData = <TCall extends BaseCall>(\n  calls: TCall[]\n): Record<string, number> => {\n  const now = new Date();\n  const thisMonday = mondayMorning(now);\n\n  const data: Record<string, number> = {};\n\n  const start = mondayMorning(startOfMonth(now));\n  let curr = start;\n  while (curr <= thisMonday) {\n    const next = addWeeks(curr, 1);\n    data[format(curr, \"MMM dd\")] = callsWithinPeriod(calls, curr, next).length;\n    curr = next;\n  }\n  return data;\n};\n\nexport function loadCallEntities(\n  call: BaseCall,\n  contactEnts: Dictionary<Contact>,\n  incPeopleEnts: Dictionary<Inmate>,\n  kioskEnts: Dictionary<Kiosk>\n): Call {\n  const contacts = call.userIds.map((id) => contactEnts[id]).filter(notEmpty);\n\n  if (contacts.length !== call.userIds.length) {\n    // TODO: sentry error\n    // https://github.com/Ameelio/connect-doc-client/issues/60\n  }\n\n  const inmates = call.inmateIds\n    .map((id) => incPeopleEnts[id])\n    .filter(notEmpty);\n\n  if (inmates.length !== call.inmateIds.length) {\n    // TODO: sentry error\n    // https://github.com/Ameelio/connect-doc-client/issues/60\n  }\n\n  const kiosk = kioskEnts[call.kioskId];\n\n  if (!kiosk) {\n    // TODO: sentry error\n    // https://github.com/Ameelio/connect-doc-client/issues/60\n  }\n\n  return {\n    ...call,\n    contacts,\n    inmates,\n    kiosk: kiosk || {\n      id: \"\",\n      name: \"Failed to load information\",\n      description: \"Failed to load information\",\n      enabled: true,\n      groupId: \"\",\n    },\n  };\n}\n\nexport function loadAllCallEntities(\n  calls: BaseCall[],\n  contactEnts: Dictionary<Contact>,\n  incPeopleEnts: Dictionary<Inmate>,\n  kioskEnts: Dictionary<Kiosk>\n): Call[] {\n  return calls.map((c) =>\n    loadCallEntities(c, contactEnts, incPeopleEnts, kioskEnts)\n  );\n}\n\nexport function getCallInmatesFullNames(call: Call) {\n  return call.inmates\n    .map((user) => `${user.firstName} ${user.lastName}`)\n    .join(\", \");\n}\n\nexport function getCallContactsFullNames(call: Call) {\n  return call.contacts\n    .map((user) => `${user.firstName} ${user.lastName}`)\n    .join(\", \");\n}\n\nexport function getFirstNames(people: (Contact | Inmate)[]) {\n  return people.map((person) => person.firstName).join(\", \");\n}\n\nexport const getVideoHandlerHostname = (handler: CallVideoHandler) => {\n  return `https://${handler.host}:${handler.port}`;\n};\n\ntype StreamId = string;\n\nexport const getParticipantStreamId = (\n  participant: CallParticipant\n): StreamId => {\n  return `${participant.type}-${participant.id}`;\n};\n\nexport const getStreamParticipantType = (\n  streamId: StreamId\n): ParticipantType => {\n  return streamId.includes(\"inmate\") ? \"inmate\" : \"user\";\n};\n\nexport const getVisitationLabel = (type: VisitationType) => {\n  switch (type) {\n    case VisitationType.FAMILY_IN_PERSON:\n      return \"In-Person (Contact)\";\n    case VisitationType.FAMILY_IN_PERSON_NO_CONTACT:\n      return \"In-Person (No Contact)\";\n    case VisitationType.FAMILY_VIDEO_CALL:\n      return \"Video Call\";\n  }\n};\n","import { message, notification } from \"antd\";\n\nexport const openNotificationWithIcon = (\n  message: string,\n  description: string,\n  type: \"success\" | \"info\" | \"error\" | \"warning\"\n) => {\n  notification[type]({\n    message,\n    description,\n  });\n};\n\nexport const showToast = (\n  key: string,\n  content: string,\n  type: \"success\" | \"error\" | \"warning\" | \"loading\" | \"info\",\n  duration = 3\n) => {\n  switch (type) {\n    case \"success\":\n      message.success({ content, key, duration });\n      break;\n    case \"error\":\n      message.error({ content, key, duration });\n      break;\n    case \"warning\":\n      message.warning({ content, key, duration });\n      break;\n    case \"loading\":\n      message.loading({ content, key, duration });\n      break;\n    default:\n      message.info({ content, key, duration });\n      break;\n  }\n};\n","import { Dictionary } from \"@reduxjs/toolkit\";\nimport { BaseConnection, Connection } from \"src/typings/Connection\";\nimport { Contact } from \"src/typings/Contact\";\nimport { Inmate } from \"src/typings/Inmate\";\n\nexport function loadConnectionEntities(\n  connection: BaseConnection,\n  contactEnts: Dictionary<Contact>,\n  inmateEnts: Dictionary<Inmate>\n): Connection {\n  const contact = contactEnts[connection.userId];\n\n  if (!contact) {\n    throw new Error(\"Failed to load contact information\");\n  }\n\n  const inmate = inmateEnts[connection.inmateId];\n\n  if (!inmate) {\n    throw new Error(\"Failed to load incarcerated person information\");\n  }\n\n  return {\n    ...connection,\n    inmate,\n    contact,\n  };\n}\n\nexport function loadAllConnectionEntities(\n  connections: BaseConnection[],\n  contactEnts: Dictionary<Contact>,\n  incPeopleEnts: Dictionary<Inmate>\n): Connection[] {\n  return connections.map((c) =>\n    loadConnectionEntities(c, contactEnts, incPeopleEnts)\n  );\n}\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { openNotificationWithIcon } from \"src/utils\";\nimport { BaseConnection, ConnectionStatus } from \"src/typings/Connection\";\n\nexport const updateConnection = createAsyncThunk(\n  \"connections/updateConnection\",\n  async (args: { connectionId: string; status: ConnectionStatus }) => {\n    await fetchAuthenticated(`connections/${args.connectionId}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        status: args.status,\n      }),\n    });\n\n    return args;\n  }\n);\n\nexport const fetchConnections = createAsyncThunk(\n  \"connections/fetchConnections\",\n  async () => {\n    const body = await fetchAuthenticated(`connections`);\n\n    const connections = (body.data as Record<string, unknown>)\n      .results as BaseConnection[];\n\n    return connections;\n  }\n);\n\nexport const connectionsAdapter = createEntityAdapter<BaseConnection>();\n\nexport const connectionsSlice = createSlice({\n  name: \"connections\",\n  initialState: connectionsAdapter.getInitialState({\n    loading: false,\n    error: null,\n  }),\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchConnections.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchConnections.fulfilled, (state, action) => {\n      state.loading = false;\n      connectionsAdapter.upsertMany(state, action.payload);\n    });\n    builder.addCase(fetchConnections.rejected, (state, action) => {\n      console.log(action.error.message);\n    });\n    builder.addCase(updateConnection.fulfilled, (state, action) => {\n      const { status, connectionId } = action.payload;\n      switch (status) {\n        case \"active\":\n          openNotificationWithIcon(\n            \"Connection was successfully approved.\",\n            \"Both parties were notified of the decision.\",\n            \"success\"\n          );\n          break;\n        case \"rejected\":\n          openNotificationWithIcon(\n            \"Connection request was rejected.\",\n            \"Both parties were notified of the decision.\",\n            \"info\"\n          );\n          break;\n      }\n      connectionsAdapter.updateOne(state, {\n        id: connectionId,\n        changes: { status },\n      });\n    });\n    builder.addCase(updateConnection.rejected, (state, action) =>\n      console.log(action.error)\n    );\n  },\n});\n\nexport const connectionsActions = connectionsSlice.actions;\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { Contact } from \"src/typings/Contact\";\nimport { IdentificationImages } from \"src/typings/IdentificationImage\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contact/fetchContacts\",\n  async () => {\n    const body = await fetchAuthenticated(`contacts`);\n\n    const contacts = (body.data as Record<string, unknown>)\n      .results as Contact[];\n\n    return contacts;\n  }\n);\n\nexport const fetchContactIdImages = createAsyncThunk(\n  \"contacts/fetchContactIdImages\",\n  async (userId: string) => {\n    const body = await fetchAuthenticated(\n      `contacts/${userId}/identificationImages`\n    );\n\n    const images = body.data as IdentificationImages;\n\n    return images;\n  }\n);\n\nexport const contactsAdapter = createEntityAdapter<Contact>();\n\nexport const contactsSlice = createSlice({\n  name: \"inmates\",\n  initialState: contactsAdapter.getInitialState(),\n  reducers: {\n    contactsAddMany: contactsAdapter.addMany,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchContacts.fulfilled, (state, action) =>\n      contactsAdapter.setAll(state, action.payload)\n    );\n    builder.addCase(fetchContacts.rejected, (state, action) =>\n      console.log(\"error\")\n    );\n  },\n});\n\nexport const contactsActions = contactsSlice.actions;\n","import { ThunkAction } from \"redux-thunk\";\nimport { RootState } from \"./index\";\nimport { Action } from \"redux\";\nimport { BaseCall, CallMessage, CallStatus } from \"src/typings/Call\";\nimport { VisitationType } from \"src/typings/Common\";\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\n// call helpers\nexport interface CallRO {\n  id: string;\n  facilityId: string;\n  kioskId: string;\n  status: CallStatus;\n  statusDetails?: string;\n  scheduledStart: Date;\n  scheduledEnd: Date;\n  inmateIds: string[];\n  userIds: string[];\n  averageRating: number;\n  schedulerId: string;\n  schedulerType: \"user\" | \"inmate\";\n  messages: CallMessage[];\n  videoHandler?: {\n    port: string;\n    host: string;\n  };\n  type: VisitationType;\n}\n\nexport function cleanCall(call: CallRO): BaseCall {\n  return {\n    id: call.id,\n    facilityId: call.facilityId,\n    kioskId: call.kioskId,\n    status: call.status,\n    statusDetails: call.statusDetails,\n    scheduledStart: new Date(call.scheduledStart).toISOString(),\n    scheduledEnd: new Date(call.scheduledEnd).toISOString(),\n    inmateIds: call.inmateIds,\n    userIds: call.userIds,\n    rating: call.averageRating,\n    schedulerId: call.schedulerId,\n    schedulerType: call.schedulerType,\n    videoHandler: call.videoHandler,\n    type: call.type,\n  };\n}\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n  EntityState,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { cleanCall, CallRO } from \"../helpers\";\nimport { createCallOptionsParam, openNotificationWithIcon } from \"src/utils\";\nimport {\n  BaseCall,\n  CallFilters,\n  CallMessage,\n  CallStatus,\n} from \"src/typings/Call\";\n\nexport const callsAdapter = createEntityAdapter<BaseCall>();\n\nexport const fetchCalls = createAsyncThunk(\n  \"calls/fetchAll\",\n  async (filters: CallFilters) => {\n    const body = await fetchAuthenticated(\n      `calls?${createCallOptionsParam(filters)}`\n    );\n\n    const calls = ((body.data as Record<string, unknown>)\n      .results as CallRO[]).map(cleanCall) as BaseCall[];\n\n    return calls;\n  }\n);\n\nexport const updateCallStatus = createAsyncThunk(\n  \"calls/updateCallStatus\",\n  async ({\n    id,\n    status,\n    statusDetails,\n  }: {\n    id: string;\n    status: CallStatus;\n    statusDetails?: string;\n  }) => {\n    await fetchAuthenticated(`calls/${id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ status, statusDetails }),\n    });\n\n    return { id, changes: { status, statusDetails } };\n  }\n);\n\nexport const fetchCallMessages = createAsyncThunk(\n  \"calls/fetchOne\",\n  async (id: string) => {\n    const body = await fetchAuthenticated(`calls/${id}/callMessages`);\n    const messages = body.data as CallMessage[];\n    return { id, messages };\n  }\n);\n\ninterface VisitationState extends EntityState<BaseCall> {\n  error?: string;\n  messages: Record<string, CallMessage[]>;\n  loading: boolean;\n}\n\nconst initialState: VisitationState = callsAdapter.getInitialState({\n  messages: {},\n  loading: false,\n});\n\nexport const callsSlice = createSlice({\n  name: \"calls\",\n  initialState,\n  reducers: {\n    addMessage: (\n      state,\n      action: PayloadAction<{ id: string; message: CallMessage }>\n    ) => {\n      const { id, message } = action.payload;\n      state.messages[id] = [...(state.messages[id] || []), message];\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCalls.fulfilled, (state, action) => {\n      callsAdapter.upsertMany(state, action.payload);\n      state.error = undefined;\n      state.loading = false;\n    });\n    builder.addCase(fetchCalls.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n      loading: false,\n    }));\n    builder.addCase(fetchCalls.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchCallMessages.fulfilled, (state, action) => {\n      state.messages[action.payload.id] = action.payload.messages;\n    });\n    builder.addCase(updateCallStatus.fulfilled, (state, action) => {\n      callsAdapter.updateOne(state, action.payload);\n      const { status } = action.payload.changes;\n      openNotificationWithIcon(\n        `Call was ${status}.`,\n        \"Both parties were notified of the decision.\",\n        \"info\"\n      );\n    });\n  },\n});\n\nexport const callsActions = callsSlice.actions;\n","import { combineReducers } from \"redux\";\nimport { staffSlice } from \"./modules/staff\";\nimport { inmatesSlice } from \"./modules/inmate\";\nimport { sessionReducer } from \"./modules/session\";\nimport { connectionsSlice } from \"./modules/connections\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { contactsSlice } from \"./modules/contact\";\nimport { callsSlice } from \"./modules/call\";\nimport { facilitiesSlice } from \"./modules/facility\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport { createHashHistory, History } from \"history\";\nimport { socketsSlice } from \"./modules/socket\";\nimport { groupsSlice } from \"./modules/group\";\nimport { kiosksSlice } from \"./modules/kiosk\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { modalsSlice } from \"./modules/modal\";\n\nexport const history = createHashHistory();\n\nexport const createRootReducer = (history: History) =>\n  combineReducers({\n    staff: staffSlice.reducer,\n    session: sessionReducer,\n    inmates: inmatesSlice.reducer,\n    contacts: contactsSlice.reducer,\n    connections: connectionsSlice.reducer,\n    calls: callsSlice.reducer,\n    facilities: facilitiesSlice.reducer,\n    router: connectRouter(history),\n    sockets: socketsSlice.reducer,\n    groups: groupsSlice.reducer,\n    kiosks: kiosksSlice.reducer,\n    modals: modalsSlice.reducer,\n  });\n\nexport const rootReducer = createRootReducer(history);\n\nexport const Store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(routerMiddleware(history)),\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppDispatch = typeof Store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>(); // Export a hook that can be reused to resolve types\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n  EntityState,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport {\n  SelectedFacility,\n  Facility,\n  CallSlot,\n  TentativeCallSlot,\n} from \"src/typings/Facility\";\nimport { showToast } from \"src/utils\";\nimport { Store } from \"..\";\n\nexport const facilitiesAdapter = createEntityAdapter<Facility>();\n\nexport const selectActiveFacility = createAsyncThunk(\n  \"facility/selectActiveFacility\",\n  async (facility: Facility) => {\n    // need to harcode the nodeId for initialization,\n    const bodyCt = await fetchAuthenticated(\n      `facilities/${facility.id}/callSlots`,\n      {},\n      false\n    );\n\n    const callTimes = (bodyCt.data as Record<string, unknown>)\n      .results as CallSlot[];\n\n    return { ...facility, callTimes };\n  }\n);\n\nexport const fetchFacilities = createAsyncThunk(\n  \"facility/fetchFacilities\",\n  async () => {\n    const fBody = await fetchAuthenticated(\n      `users/${Store.getState().session.user.id}/facilities`,\n      {},\n      false\n    );\n\n    const facilities = fBody.data as Facility[];\n\n    if (!facilities.length) {\n      throw new Error(\"Must have access to at least one facility\");\n    }\n\n    // fetch information for first facility\n    Store.dispatch(selectActiveFacility(facilities[0]));\n\n    return { facilities };\n  }\n);\n\nconst UPDATE_CALL_HOURS = \"facility/updateCallTimes\";\nexport const updateCallTimes = createAsyncThunk(\n  UPDATE_CALL_HOURS,\n  async ({\n    oldCallSlots,\n    newCallSlots,\n  }: {\n    oldCallSlots: CallSlot[];\n    newCallSlots: TentativeCallSlot[];\n  }) => {\n    // delete previous call slots, if any\n    if (oldCallSlots.length) {\n      await fetchAuthenticated(`callSlots/bulk`, {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          ids: oldCallSlots.map((slot) => slot.id),\n        }),\n      });\n    }\n\n    // create new call slots\n    const response = await fetchAuthenticated(`callSlots/bulk`, {\n      method: \"POST\",\n      body: JSON.stringify(newCallSlots),\n    });\n\n    return response.data as CallSlot[];\n  }\n);\n\ninterface FacilitiesState extends EntityState<Facility> {\n  error?: string;\n  selected?: SelectedFacility;\n  loading: boolean;\n}\n\nconst initialState: FacilitiesState = facilitiesAdapter.getInitialState({\n  loading: false,\n});\n\nexport const facilitiesSlice = createSlice({\n  name: \"facilities\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchFacilities.fulfilled, (state, action) => {\n      const newState = facilitiesAdapter.setAll(\n        state,\n        action.payload.facilities\n      );\n      return newState;\n    });\n    builder.addCase(fetchFacilities.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n    builder.addCase(selectActiveFacility.fulfilled, (state, action) => ({\n      ...state,\n      selected: action.payload,\n      loading: false,\n    }));\n    builder.addCase(selectActiveFacility.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n      loading: false,\n    }));\n    builder.addCase(selectActiveFacility.pending, (state) => ({\n      ...state,\n      loading: true,\n    }));\n    builder.addCase(updateCallTimes.pending, (state, action) => {\n      showToast(UPDATE_CALL_HOURS, \"Processing request...\", \"loading\");\n    });\n    builder.addCase(updateCallTimes.fulfilled, (state, action) => {\n      showToast(\n        UPDATE_CALL_HOURS,\n        \"Succesfully updated the settings!\",\n        \"success\"\n      );\n      if (!state.selected) return { ...state };\n      return {\n        ...state,\n        selected: { ...state.selected, callTimes: action.payload },\n      };\n    });\n    builder.addCase(updateCallTimes.rejected, (state, action) => {\n      showToast(UPDATE_CALL_HOURS, \"Failed to update.\", \"success\");\n    });\n  },\n});\n\nexport const facilitiesActions = facilitiesSlice.actions;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface SocketState {\n  socket?: SocketIOClient.Socket;\n}\n\nconst initialState: SocketState = {};\n\nexport const socketsSlice = createSlice({\n  name: \"socket\",\n  initialState: initialState,\n  reducers: {\n    setSocket: (state, action: PayloadAction<SocketIOClient.Socket>) => ({\n      ...state,\n      socket: action.payload,\n    }),\n  },\n});\n\nexport const socketsActions = socketsSlice.actions;\n","import {\n  createSlice,\n  createAsyncThunk,\n  createEntityAdapter,\n  EntityState,\n} from \"@reduxjs/toolkit\";\nimport { DataNode } from \"rc-tree/lib/interface\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { Group, GroupDataNode } from \"src/typings/Group\";\nimport { showToast } from \"src/utils\";\n\nconst cleanTree = (group: GroupDataNode): DataNode => {\n  const { id, name, children } = group;\n\n  return {\n    title: name,\n    key: id,\n    children: children.length ? children.map((child) => cleanTree(child)) : [],\n  };\n};\n\nexport const fetchGroups = createAsyncThunk(\"node/fetchGroups\", async () => {\n  const body = await fetchAuthenticated(`groups`);\n\n  const groupTrees = (body.data as any).tree as GroupDataNode[];\n  const groups = (body.data as any).groups as GroupDataNode[];\n\n  const nodes = groupTrees.map((tree) => cleanTree(tree));\n\n  return { nodes, groups };\n});\n\nexport const groupsAdapter = createEntityAdapter<Group>();\n\ninterface GroupState extends EntityState<Group> {\n  nodes: DataNode[];\n}\n\nconst initialState: GroupState = groupsAdapter.getInitialState({ nodes: [] });\nexport const groupsSlice = createSlice({\n  name: \"groups\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchGroups.fulfilled, (state, action) => {\n      groupsAdapter.setAll(state, action.payload.groups);\n      state.nodes = action.payload.nodes;\n    });\n    builder.addCase(fetchGroups.rejected, (_state, _action) =>\n      showToast(\"nodes\", \"Could not load facility information\", \"error\")\n    );\n  },\n});\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport { fetchAuthenticated } from \"src/api/Common\";\nimport { Kiosk } from \"src/typings/Kiosk\";\nimport { SelectedFacility } from \"src/typings/Facility\";\n\nexport const kiosksAdapter = createEntityAdapter<Kiosk>();\n\nexport const fetchKiosks = createAsyncThunk(\"kiosk/fetchKiosks\", async () => {\n  const body = await fetchAuthenticated(`kiosks`);\n\n  const kiosks = (body.data as Record<string, unknown>).results as Kiosk[];\n\n  return kiosks;\n});\n\nexport const kiosksSlice = createSlice({\n  name: \"kiosks\",\n  initialState: kiosksAdapter.getInitialState(),\n  reducers: {\n    setSelected: (state, action: PayloadAction<SelectedFacility>) => ({\n      ...state,\n      selected: action.payload,\n    }),\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchKiosks.fulfilled, (state, action) =>\n      kiosksAdapter.setAll(state, action.payload)\n    );\n    builder.addCase(fetchKiosks.rejected, (state, action) => ({\n      ...state,\n      error: action.error.message,\n    }));\n  },\n});\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  CancelCallModalData,\n  SendAlertModalData,\n  InactiveModalData,\n} from \"src/typings/Modal\";\n\ntype ModalEntity = InactiveModalData | CancelCallModalData | SendAlertModalData;\n\ntype ModalsSliceState = { data: ModalEntity };\n\nconst initialState: ModalsSliceState = {\n  data: { activeType: \"INACTIVE_MODAL\", entity: null },\n};\n\nexport const modalsSlice = createSlice({\n  name: \"modals\",\n  initialState,\n  reducers: {\n    openModal: (state, action: PayloadAction<ModalEntity>) => {\n      state.data = action.payload;\n    },\n    closeModal: (state) => {\n      state.data = { activeType: \"INACTIVE_MODAL\", entity: null };\n    },\n  },\n});\n\nexport const { openModal, closeModal } = modalsSlice.actions;\n","import { API_URL, fetchTimeout } from \"./Common\";\nimport url from \"url\";\nimport { setSessionStatus, setSession } from \"src/redux/modules/session\";\nimport { Store } from \"src/redux\";\nimport { User, UserCredentials } from \"src/typings/Session\";\n\nasync function initializeSession(token: string, body: any) {\n  const user = body.data as User;\n  Store.dispatch(setSession({ user, token }));\n}\n\nexport async function loginWithCredentials(\n  cred: UserCredentials\n): Promise<void> {\n  Store.dispatch(setSessionStatus(\"loading\"));\n  const response = await fetchTimeout(\n    url.resolve(API_URL, \"auth/staff/login\"),\n    {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        email: cred.email,\n        password: cred.password,\n      }),\n    }\n  );\n  const body = await response.json();\n\n  if (response.status !== 201) {\n    Store.dispatch(setSessionStatus(\"inactive\"));\n    throw response;\n  }\n  const token = response.headers.get(\"Authorization\") || \"\";\n  if (!token) throw new Error(\"Cannot find header token\");\n  await initializeSession(token, body);\n}\n","import React, { ReactElement } from \"react\";\nimport { RootState } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport {\n  Input,\n  Layout,\n  Button,\n  Form,\n  Row,\n  Typography,\n  Space,\n  Card,\n} from \"antd\";\n\nimport { ReactComponent as Logo } from \"src/assets/logo.svg\";\nimport \"./index.css\";\nimport { Redirect } from \"react-router\";\nimport { loginWithCredentials } from \"src/api/Session\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { showToast } from \"src/utils\";\n\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  session: state.session,\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst TOAST_KEY = \"login\";\n\nfunction UnconnectedLoginContainer({ session }: PropsFromRedux): ReactElement {\n  if (session.status === \"active\") {\n    showToast(TOAST_KEY, `Welcome back, ${session.user.firstName}!`, \"success\");\n    return <Redirect to={session.redirectUrl} />;\n  }\n\n  const onFinish = async (values: any) => {\n    showToast(TOAST_KEY, \"Authenticating with credentials...\", \"loading\");\n    try {\n      await loginWithCredentials({\n        email: values.email,\n        password: values.password,\n      });\n    } catch (err) {\n      showToast(TOAST_KEY, \"Invalid email or password\", \"error\");\n    }\n  };\n\n  const onFinishFailed = (_errorInfo: any) => {\n    showToast(TOAST_KEY, \"Invalid email or password\", \"error\");\n  };\n\n  return (\n    <Content className=\"flex flex-col\">\n      <Space direction=\"vertical\" className=\"m-auto\">\n        <Row justify=\"center\">\n          <Logo className=\"login-logo\" />\n        </Row>\n\n        <Card className=\"login-form-container shadow rounded\">\n          <Row>\n            <Typography.Title level={4}>\n              Sign in to your account\n            </Typography.Title>\n          </Row>\n          <Form\n            name=\"basic\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n            className=\"login-form \"\n          >\n            <Form.Item\n              name=\"email\"\n              rules={[{ required: true, message: \"Email is required.\" }]}\n            >\n              <Input\n                prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Email\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"password\"\n              rules={[{ required: true, message: \"Password is required.\" }]}\n            >\n              <Input.Password\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Password\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                size=\"large\"\n                block\n                loading={session.status === \"loading\"}\n              >\n                Log In\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n      </Space>\n    </Content>\n  );\n}\n\nexport default connector(UnconnectedLoginContainer);\n","import * as React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router\";\n\nexport interface ProtectedRouteProps extends RouteProps {\n  isAuthenticated: boolean;\n  authenticationPath: string;\n}\n\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = (props) => {\n  let redirectPath = \"\";\n  if (!props.isAuthenticated) {\n    redirectPath = props.authenticationPath;\n  }\n\n  if (redirectPath) {\n    const renderComponent = () => <Redirect to={{ pathname: redirectPath }} />;\n    return <Route {...props} component={renderComponent} render={undefined} />;\n  } else {\n    return <Route {...props} />;\n  }\n};\n\nexport default ProtectedRoute;\n","import { Avatar } from \"antd\";\nimport { AvatarProps } from \"antd/lib/avatar\";\nimport React from \"react\";\nimport { generateBgColor, getInitials } from \"src/utils\";\n\ninterface Props extends AvatarProps {\n  name: string;\n}\nexport const InitialsAvatar = ({ name, ...props }: Props): JSX.Element => (\n  <Avatar style={{ backgroundColor: generateBgColor(name) }} {...props}>\n    {getInitials(name)}\n  </Avatar>\n);\n","import Avatar from \"./Avatar\";\nexport default Avatar;\n","import React from \"react\";\nimport { InitialsAvatar } from \"./InitialsAvatar\";\nimport { Image } from \"antd\";\n\ninterface Props {\n  fallback: string;\n  size?: number;\n  src?: string;\n}\n\nconst Avatar = ({ fallback, size, src }: Props) => {\n  return src ? (\n    <Image\n      src={src}\n      width={size || 200}\n      height={size || 200}\n      className=\"object-cover\t\"\n      preview={false}\n    />\n  ) : (\n    <InitialsAvatar name={fallback} size={size || \"default\"} shape=\"square\" />\n  );\n};\n\nexport default Avatar;\n","import React, { ReactElement, useState } from \"react\";\nimport { Layout, Menu as AntdMenu, Space, Dropdown, Badge } from \"antd\";\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  TeamOutlined,\n  SettingOutlined,\n  UserAddOutlined,\n  DownOutlined,\n} from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { Facility, SelectedFacility } from \"src/typings/Facility\";\nimport \"./Menu.css\";\nimport { genFullName } from \"src/utils\";\nimport { SIDEBAR_WIDTH } from \"src/utils/constants\";\nimport { User } from \"src/typings/Session\";\nimport Avatar from \"../Avatar\";\n\nconst { Sider } = Layout;\nconst { SubMenu } = AntdMenu;\n\ninterface Props {\n  isLoggedIn: boolean;\n  user: User;\n  selected: SelectedFacility;\n  facilities: Facility[];\n  logout: () => void;\n  select: (facility: Facility) => void;\n  requestsCount: number;\n  liveCallsCount: number;\n  callRequestsCount: number;\n}\n\nexport default function Menu({\n  isLoggedIn,\n  user,\n  selected,\n  facilities,\n  select,\n  logout,\n  requestsCount,\n  liveCallsCount,\n  callRequestsCount,\n}: Props): ReactElement {\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const history = useHistory();\n  if (!isLoggedIn) return <div />;\n\n  const headerMenu = (\n    <AntdMenu>\n      <SubMenu key=\"sub2\" title=\"Switch Organization\">\n        {facilities.map((facility) => (\n          <AntdMenu.Item key={facility.id} onClick={() => select(facility)}>\n            <Space>\n              <Avatar fallback={selected.name} size={48} />\n              <span>{facility.name}</span>\n            </Space>\n          </AntdMenu.Item>\n        ))}\n      </SubMenu>\n      <AntdMenu.Item>\n        <span onClick={() => logout()}>Log out</span>\n      </AntdMenu.Item>\n    </AntdMenu>\n  );\n\n  return (\n    <Sider\n      collapsible\n      collapsed={collapsed}\n      onCollapse={(collapsed) => setCollapsed(collapsed)}\n      width={SIDEBAR_WIDTH}\n    >\n      <Dropdown overlay={headerMenu}>\n        <Space align=\"center\" className=\"menu-header\">\n          <Avatar fallback={selected.name} size={48} />\n          {!collapsed && (\n            <Space direction=\"vertical\" size={0}>\n              <Space align=\"center\">\n                <span className=\"menu-header-facility\">{selected.name}</span>\n                <DownOutlined style={{ color: \"white\" }} />\n              </Space>\n              <span className=\"menu-header-name\">{genFullName(user)}</span>\n            </Space>\n          )}\n        </Space>\n      </Dropdown>\n\n      <AntdMenu theme=\"dark\" defaultSelectedKeys={[\"dash\"]}>\n        <AntdMenu.Item\n          key=\"dash\"\n          icon={<PieChartOutlined />}\n          onClick={() => history.push(\"/\")}\n        >\n          Dashboard\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"live\"\n          icon={<DesktopOutlined />}\n          onClick={() => history.push(\"/visitations\")}\n        >\n          Live Video Calls\n          <Badge count={liveCallsCount} />\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"connection-requests\"\n          icon={<UserAddOutlined />}\n          onClick={() => history.push(\"/connection-requests\")}\n        >\n          Visitation List Requests\n          <Badge count={requestsCount} />\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"call-requests\"\n          icon={<UserAddOutlined />}\n          onClick={() => history.push(\"/call-requests\")}\n        >\n          Scheduling Requests\n          <Badge count={callRequestsCount} />\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"search\"\n          icon={<UserAddOutlined />}\n          onClick={() => history.push(\"/logs\")}\n        >\n          Search for Visits\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"staff\"\n          icon={<TeamOutlined />}\n          onClick={() => history.push(\"/staff\")}\n        >\n          Staff\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"members\"\n          icon={<TeamOutlined />}\n          onClick={() => history.push(\"/members\")}\n        >\n          Incarcerated People\n        </AntdMenu.Item>\n        <AntdMenu.Item\n          key=\"settings\"\n          icon={<SettingOutlined />}\n          onClick={() => history.push(\"/settings\")}\n        >\n          Settings\n        </AntdMenu.Item>\n      </AntdMenu>\n    </Sider>\n  );\n}\n","import { RootState } from \".\";\nimport { connectionsAdapter } from \"./modules/connections\";\nimport { contactsAdapter } from \"./modules/contact\";\nimport { inmatesAdapter } from \"./modules/inmate\";\nimport { callsAdapter } from \"./modules/call\";\nimport { staffAdapter } from \"./modules/staff\";\nimport { facilitiesAdapter } from \"./modules/facility\";\nimport { BaseCall, Call } from \"src/typings/Call\";\nimport { kiosksAdapter } from \"./modules/kiosk\";\nimport { groupsAdapter } from \"./modules/group\";\nimport { notEmpty } from \"src/utils\";\n\n// get selectors from entity adapter\nexport const {\n  selectById: selectConnectionById,\n  selectAll: selectAllConnections,\n} = connectionsAdapter.getSelectors<RootState>((state) => state.connections);\n\nexport const {\n  selectById: selectInmateById,\n  selectAll: selectAllInmates,\n  selectTotal: selectTotalInmates,\n  selectEntities: selectInmateEntities,\n} = inmatesAdapter.getSelectors<RootState>((state) => state.inmates);\n\nexport const {\n  selectById: selectContactById,\n  selectAll: selectAllContacts,\n  selectEntities: selectContactEntities,\n} = contactsAdapter.getSelectors<RootState>((state) => state.contacts);\n\nexport const {\n  selectById: selectCallById,\n  selectAll: selectAllCalls,\n} = callsAdapter.getSelectors<RootState>((state) => state.calls);\n\nexport const selectMessageByCallId = (state: RootState, callId: string) => {\n  return state.calls.messages[callId] || [];\n};\n\nexport const {\n  selectById: selectStaffByIdd,\n  selectAll: selectAllStaff,\n} = staffAdapter.getSelectors<RootState>((state) => state.staff);\n\nexport const {\n  selectById: selectFacilityById,\n  selectAll: selectAllFacilities,\n} = facilitiesAdapter.getSelectors<RootState>((state) => state.facilities);\n\nexport const {\n  selectById: selectKioskById,\n  selectAll: selectAllKiosks,\n  selectEntities: selectKioskEntities,\n} = kiosksAdapter.getSelectors<RootState>((state) => state.kiosks);\n\nexport const {\n  selectAll: selectAllGroups,\n  selectById: selectGroupById,\n  selectEntities: selectGroupEntities,\n} = groupsAdapter.getSelectors<RootState>((state) => state.groups);\n\n// Calls\nconst getCallEntities = (\n  state: RootState,\n  call: BaseCall\n): Call | undefined => {\n  const inmates = call.inmateIds\n    .map((id) => selectInmateById(state, id))\n    .filter(notEmpty);\n  const contacts = call.userIds\n    .map((id) => selectContactById(state, id))\n    .filter(notEmpty);\n\n  const kiosk = selectKioskById(state, call.kioskId);\n  if (!kiosk) return;\n\n  return { ...call, inmates, contacts, kiosk };\n};\n\nexport const getCallsInfo = (\n  state: RootState,\n  visitations: BaseCall[]\n): Call[] => {\n  return visitations\n    .map((visitation) => getCallEntities(state, visitation))\n    .filter(notEmpty);\n};\n\nexport const getCallInfo = (state: RootState, callId: string) => {\n  const plainCall = selectCallById(state, callId);\n  if (!plainCall) return;\n  return getCallEntities(state, plainCall) as Call;\n};\n\nexport const selectLiveCalls = (state: RootState): Call[] => {\n  const calls = selectAllCalls(state);\n  return getCallsInfo(\n    state,\n    calls.filter(\n      (call) =>\n        (call.status === \"missing_monitor\" || call.status === \"live\") &&\n        !!call.videoHandler &&\n        new Date(call.scheduledEnd) > new Date()\n    )\n  );\n};\n\n// Inmate\nexport const selectInmateCallsById = (state: RootState, inmateId: string) => {\n  const inmate = selectInmateById(state, inmateId);\n  if (!inmate) return;\n  const calls = selectAllCalls(state);\n  return calls.filter((call) => inmateId in call.inmateIds);\n};\n","export const PADDING = 24;\nexport const WRAPPER_STYLE = { padding: PADDING };\nexport const CONTAINER_BORDER_RADIUS = { borderRadius: 6 };\nexport const FULL_WIDTH = { width: \"100%\" };\nexport const BASE_CHART_COLORS = [\n  \"#eef6ff\",\n  \"#9ac1ec\",\n  \"#70a9e9\",\n  \"#0275D8\",\n  \"#004886\",\n];\n\nexport const WHITE_BACKGROUND_LAYOUT = { backgroundColor: \"white\" };\n","import * as mediasoupClient from \"mediasoup-client\";\nimport { Transport } from \"mediasoup-client/lib/types\";\n/*\n  Copyright 2020 Ameelio.org.\n  Published under the GPL v3.\n\n  You can obtain a copy of the GPL v3 at:\n  https://www.gnu.org/licenses/gpl-3.0.en.html\n\n  This file was inspired by code from https://github.com/Dirvann/mediasoup-sfu-webrtc-video-rooms,\n  which was published under the Apache License.\n  Copyright 2020 github.com/Dirvann.\n\n  You can obtain a copy of the Apache License at:\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  This file was substantially modified by Ameelio to streamline\n  the signalling protocol and change the structure of how a RoomClient\n  is initialized and what events it exposes for easier use by\n  Ameelio's client-side code, and to refactor and restructure the code\n  for easier maintainenance, among other changes.\n*/\n\nclass RoomClient {\n  private callId: string;\n  private producerTransport: Transport | null;\n  private consumerTransport: Transport | null;\n  private device: mediasoupClient.Device | null;\n  private consumers: Record<string, mediasoupClient.types.Consumer>;\n  private producers: Record<string, mediasoupClient.types.Producer>;\n  private handlers: Record<string, ((...args: unknown[]) => void)[]>;\n\n  public socket: SocketIOClient.Socket;\n\n  constructor(socket: SocketIOClient.Socket, callId: string) {\n    this.socket = socket;\n    this.callId = callId;\n\n    this.producerTransport = null;\n    this.consumerTransport = null;\n\n    this.device = null;\n\n    this.consumers = {};\n    this.producers = {};\n\n    this.handlers = { consume: [] };\n  }\n\n  async request(name: string, data: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!this.socket) return reject(\"No socket connection.\");\n\n      this.socket.emit(name, data, (response: any) => {\n        if (response.error) reject(response.error);\n        else resolve(response);\n      });\n    });\n  }\n\n  async handleTransportConnect(transport: Transport) {\n    return new Promise((resolve: (value?: unknown) => void, reject) => {\n      // Wait for the producer transport to connect...\n      transport.on(\n        \"connect\",\n        async ({ dtlsParameters }, callback: () => void, errback) => {\n          await this.request(\"establishDtls\", {\n            dtlsParameters,\n            callId: this.callId,\n            transportId: transport.id,\n          });\n          callback();\n          resolve();\n        }\n      );\n    });\n  }\n\n  async init() {\n    // Request to join the room.\n    const {\n      producerTransportInfo,\n      consumerTransportInfo,\n      routerRtpCapabilities,\n    } = await this.request(\"join\", { callId: this.callId });\n\n    // Load up a local media device consistent with server\n    this.device = await this.loadDevice(routerRtpCapabilities);\n    if (!this.device) return;\n\n    // Set up both transports and promise to send\n    // dtls info when they connect (this won't occur until\n    // someone actually produces).\n    if (producerTransportInfo) {\n      this.producerTransport = this.device.createSendTransport(\n        producerTransportInfo\n      );\n      this.handleTransportConnect(this.producerTransport);\n    }\n\n    this.consumerTransport = this.device.createRecvTransport(\n      consumerTransportInfo\n    );\n    this.handleTransportConnect(this.consumerTransport);\n\n    // Declare what our device is capable of.\n    await this.request(\"declareRtpCapabilities\", {\n      rtpCapabilities: this.device.rtpCapabilities,\n    });\n\n    // We don't actually need to wait for this request to come back.\n    this.request(\"finishConnecting\", { callId: this.callId });\n\n    // When our producer transport is producing a new stream,\n    // inform the server.\n    if (this.producerTransport) {\n      this.producerTransport.on(\n        \"produce\",\n        async ({ kind, rtpParameters }, callback, errback) => {\n          const { producerId } = await this.request(\"produce\", {\n            callId: this.callId,\n            kind,\n            rtpParameters,\n          });\n\n          callback({ id: producerId });\n        }\n      );\n    }\n\n    // When we get a consumer, fire an event.\n    this.socket.on(\"consume\", async (info: any) => {\n      const consumeResult = await this.consume(info);\n      if (!consumeResult) return;\n      const { consumer, stream } = consumeResult;\n      this.socket.emit(\"resumeConsumer\", {\n        callId: this.callId,\n        consumerId: consumer.id,\n      });\n      this.handlers[\"consume\"].forEach((f) => f(info.kind, stream, info.user));\n    });\n  }\n\n  async loadDevice(\n    routerRtpCapabilities: mediasoupClient.types.RtpCapabilities\n  ) {\n    const device = new mediasoupClient.Device();\n\n    await device.load({ routerRtpCapabilities });\n\n    return device;\n  }\n\n  async consume(info: mediasoupClient.types.ConsumerOptions) {\n    if (!this.consumerTransport) return;\n    const consumer = await this.consumerTransport.consume(info);\n    const stream = new MediaStream([consumer.track]);\n    this.consumers[consumer.id] = consumer;\n    return { consumer, stream };\n  }\n\n  async on(event: string, fn: (...args: any) => void) {\n    if (!(event in this.handlers)) {\n      this.handlers[event] = [];\n    }\n    this.handlers[event].push(fn);\n  }\n\n  async terminate() {\n    await this.request(\"terminate\", { callId: this.callId });\n  }\n\n  async destroy() {\n    this.socket.off(\"connect\");\n    this.socket.off(\"consume\");\n    this.socket.off(\"textMessage\");\n\n    if (this.consumerTransport) this.consumerTransport.close();\n    if (this.producerTransport) this.producerTransport.close();\n    this.consumerTransport = null;\n    this.producerTransport = null;\n\n    Object.values(this.producers).forEach((producer) => {\n      producer.close();\n    });\n    Object.values(this.consumers).forEach((consumer) => {\n      consumer.close();\n    });\n    this.consumers = {};\n    this.producers = {};\n\n    this.handlers = {};\n\n    this.socket.close();\n  }\n}\n\nexport default RoomClient;\n","import React, { ReactElement, useState } from \"react\";\nimport \"./Video.css\";\nimport { Menu, Dropdown, Button, Modal, Space, Typography } from \"antd\";\nimport {\n  AudioMutedOutlined,\n  AudioOutlined,\n  LockFilled,\n  MessageFilled,\n  MessageOutlined,\n  MoreOutlined,\n  SettingFilled,\n} from \"@ant-design/icons\";\nimport { CallAlert } from \"src/typings/Call\";\n\nconst { SubMenu } = Menu;\n\ninterface Props {\n  alerts: CallAlert[];\n  terminateCall: () => void;\n  lockCall: () => void;\n  muteCall: () => void;\n  unmuteCall: () => void;\n  emitAlert: (alert: CallAlert) => void;\n  isAudioOn: boolean;\n  openChat: () => void;\n  closeChat: () => void;\n  chatCollapsed: boolean;\n}\n\nexport default function VideoOverlay({\n  alerts,\n  terminateCall,\n  lockCall,\n  muteCall,\n  unmuteCall,\n  isAudioOn,\n  openChat,\n  closeChat,\n  chatCollapsed,\n  emitAlert,\n}: Props): ReactElement {\n  const [selectedAlert, setSelectedAlert] = useState<CallAlert | null>(null);\n\n  const handleConfirmation = () => {\n    if (selectedAlert) emitAlert(selectedAlert);\n    setSelectedAlert(null);\n  };\n\n  const menu = (\n    <Menu>\n      <SubMenu key=\"alert\" icon={<MessageFilled />} title=\"Send Alert\">\n        {alerts.map((alert) => (\n          <Menu.Item key={alert.id} onClick={() => setSelectedAlert(alert)}>\n            {alert.title}\n          </Menu.Item>\n        ))}\n      </SubMenu>\n      <Menu.Item key=\"lock\" icon={<LockFilled />} onClick={() => lockCall()}>\n        Lock\n      </Menu.Item>\n      <Menu.Item\n        key=\"terminate\"\n        icon={<SettingFilled />}\n        onClick={terminateCall}\n      >\n        Terminate Call\n      </Menu.Item>\n      <Menu.Item\n        key=\"mute\"\n        icon={isAudioOn ? <AudioMutedOutlined /> : <AudioOutlined />}\n        onClick={() => (isAudioOn ? muteCall() : unmuteCall())}\n      >\n        {isAudioOn ? \"Mute\" : \"Unmute\"}\n      </Menu.Item>\n      <Menu.Item\n        key=\"chat\"\n        icon={chatCollapsed ? <MessageOutlined /> : <MessageOutlined />}\n        onClick={() => (chatCollapsed ? openChat() : closeChat())}\n      >\n        {chatCollapsed ? \"View Chat\" : \"Close Chat\"}\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Space className=\"video-commands-overlay\">\n      <Dropdown overlay={menu}>\n        <Button>\n          <MoreOutlined />\n        </Button>\n      </Dropdown>\n      <Typography.Text></Typography.Text>\n      <Modal\n        title=\"Are you sure you want to send this alert?\"\n        visible={!!selectedAlert}\n        onOk={handleConfirmation}\n        onCancel={() => setSelectedAlert(null)}\n      >\n        <p>Send the following alert to the participants:</p>\n        <p>{selectedAlert?.body}</p>\n      </Modal>\n    </Space>\n  );\n}\n","import Video from \"./Video\";\n\nexport default Video;\n","import React from \"react\";\nimport { VideoHTMLAttributes, useEffect, useRef, useState } from \"react\";\n\ntype PropsType = VideoHTMLAttributes<HTMLVideoElement> & {\n  srcObject: MediaStream;\n  isFadingOut?: boolean;\n};\n\nexport default function Video({ srcObject, isFadingOut, ...props }: PropsType) {\n  const refVideo = useRef<HTMLVideoElement>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!refVideo.current) return;\n    refVideo.current.srcObject = srcObject;\n  }, [srcObject]);\n\n  useEffect(() => {\n    if (!refVideo.current) return;\n    refVideo.current.addEventListener(\"loadeddata\", () => setLoading(false));\n  }, []);\n\n  return (\n    <video\n      ref={refVideo}\n      {...props}\n      style={{\n        ...props.style,\n        opacity: loading || isFadingOut ? 0 : 1,\n      }}\n    />\n  );\n}\n","import Audio from \"./Audio\";\nexport default Audio;\n","import React from \"react\";\nimport { AudioHTMLAttributes, useEffect, useRef } from \"react\";\n\ntype PropsType = AudioHTMLAttributes<HTMLAudioElement> & {\n  srcObject: MediaStream;\n  isFadingOut?: boolean;\n  muted?: boolean;\n};\n\nexport default function Video({\n  srcObject,\n  isFadingOut,\n  muted,\n  ...props\n}: PropsType) {\n  const refAudio = useRef<HTMLAudioElement>(null);\n\n  useEffect(() => {\n    if (!refAudio.current) return;\n    refAudio.current.srcObject = srcObject;\n  }, [srcObject]);\n\n  useEffect(() => {\n    if (!refAudio.current) return;\n    refAudio.current.muted = muted || false;\n  }, [muted]);\n\n  return <audio ref={refAudio} {...props} />;\n}\n","import React, { ReactElement, useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport RoomClient from \"src/pages/LiveCall/RoomClient\";\nimport { Spin, Typography } from \"antd\";\nimport \"./Video.css\";\nimport VideoOverlay from \"./VideoOverlay\";\nimport {\n  CallAlert,\n  CallMessage,\n  CallParticipant,\n  CallStatus,\n  InCallStatus,\n} from \"src/typings/Call\";\nimport { AudioMutedOutlined, VideoCameraOutlined } from \"@ant-design/icons\";\nimport {\n  getParticipantStreamId,\n  getStreamParticipantType,\n  openNotificationWithIcon,\n} from \"src/utils\";\nimport Video from \"src/components/LiveCall/Video\";\nimport Audio from \"src/components/LiveCall/Audio\";\n\ninterface Props {\n  isVisible: boolean;\n  width: number | string;\n  height: number | string;\n  callId: string;\n  participantNames: { inmates: string; contacts: string };\n  socket: SocketIOClient.Socket;\n  alerts: CallAlert[];\n  muteCall: (id: string) => void;\n  unmuteCall: (id: string) => void;\n  isAudioOn: boolean;\n  openChat: (id: string) => void;\n  closeChat: (id: string) => void;\n  chatCollapsed: boolean;\n  lockCall: (id: string) => void;\n  addMessage: (id: string, message: CallMessage) => void;\n  updateCallStatus: (id: string, status: CallStatus) => void;\n}\n\ndeclare global {\n  interface Window {\n    Debug: any;\n  }\n}\n\nfunction Loader(): ReactElement {\n  return (\n    <div className=\"video-loading-spinner\">\n      <Spin tip=\"Loading video call...\" />\n    </div>\n  );\n}\n\nconst VideoChat: React.FC<Props> = React.memo(\n  ({\n    callId,\n    isVisible,\n    width,\n    height,\n    socket,\n    alerts,\n    lockCall,\n    muteCall,\n    unmuteCall,\n    isAudioOn,\n    openChat,\n    closeChat,\n    chatCollapsed,\n    addMessage,\n    updateCallStatus,\n    participantNames,\n  }) => {\n    const authInfo = useSelector((state: RootState) => state.session.authInfo);\n\n    const [loading, setLoading] = useState(false);\n    const [isAuthed, setIsAuthed] = useState(false);\n    const [rc, setRc] = useState<RoomClient>();\n    const [status, setStatus] = useState<InCallStatus>();\n    const [inmateAudioPaused, setInmateAudioPaused] = useState(false);\n    const [inmateVideoPaused, setInmateVideoPaused] = useState(false);\n    // If we allow multiple contacts to join from different clients, we'll have to change this\n    const [contactAudioPaused, setContactAudioPaused] = useState(false);\n    const [contactVideoPaused, setContactVideoPaused] = useState(false);\n    const [remoteVideos, setRemoteVideos] = useState<\n      Record<string, MediaStream>\n    >({});\n    const [remoteAudios, setRemoteAudios] = useState<\n      Record<string, MediaStream>\n    >({});\n\n    const joinRoom = useCallback(async () => {\n      const rc = new RoomClient(socket, callId);\n      await rc.init();\n      setRc(rc);\n    }, [socket, callId]);\n\n    const emitAlert = async (alert: CallAlert) => {\n      if (!rc) return;\n      rc.request(\"textMessage\", {\n        callId,\n        contents: alert.body,\n      }).then(\n        () =>\n          openNotificationWithIcon(\n            \"Alert succesfully issue.\",\n            \"Both parties have been notified.\",\n            \"success\"\n          ),\n        (rejection: string) =>\n          openNotificationWithIcon(\n            \"Alert could not be sent.\",\n            `Error message: ${rejection}`,\n            \"error\"\n          )\n      );\n    };\n\n    // Asynchronously load the room\n    useEffect(() => {\n      setLoading(true);\n      if (!isAuthed) {\n        (async () => {\n          if (!socket.connected) {\n            console.log(\"Not connected, so waiting until connected.\");\n            window.Debug = socket;\n            await new Promise((resolve) => socket.on(\"connect\", resolve));\n            console.log(\"[VideoChat] Connected\");\n          }\n          await new Promise((resolve) => {\n            socket.emit(\"authenticate\", authInfo, resolve);\n          });\n          await joinRoom();\n          console.log(\"[VideoChat] Authenticated\");\n          setIsAuthed(true);\n        })();\n      }\n    }, [authInfo, socket, joinRoom, isAuthed]);\n\n    useEffect(() => {\n      // TODO: move all this socket stuff to a useRoomClient hook\n      // that sets up all of this in one centralized place instead\n      // of having it polluting the ffile\n      // https://github.com/Ameelio/connect-doc-client/issues/62\n      if (rc && isAuthed) {\n        console.log(\"[VideoChat] listening for text messages\");\n        rc.socket.on(\n          \"textMessage\",\n          ({ from, contents }: { from: CallParticipant; contents: string }) => {\n            console.log(\n              `[VideoChat] Received text message from ${from.type} for ${callId}`\n            );\n            const message = {\n              contents,\n              senderId: from.id,\n              senderType: from.type,\n              createdAt: new Date().toISOString(),\n              callId,\n            };\n            addMessage(callId, message);\n          }\n        );\n      }\n    }, [addMessage, callId, isAuthed, rc]);\n\n    useEffect(() => {\n      // TODO: move all this socket stuff to a useRoomClient hook\n      // that sets up all of this in one centralized place instead\n      // of having it polluting the ffile\n      // https://github.com/Ameelio/connect-doc-client/issues/62\n      if (rc && isAuthed) {\n        console.log(\"[VideoChat] listening for call status updates\");\n        rc.socket.on(\"callStatus\", async (status: InCallStatus) => {\n          console.log(\"[VideoChat] Received status update\", status);\n          setStatus(status);\n        });\n\n        rc.socket.on(\n          \"participantDisconnect\",\n          async (participant: CallParticipant) => {\n            setRemoteVideos((remotes) => {\n              const {\n                [getParticipantStreamId(participant)]: _,\n                ...otherRemotes\n              } = remotes;\n              return otherRemotes;\n            });\n            setRemoteAudios((remotes) => {\n              const {\n                [getParticipantStreamId(participant)]: _,\n                ...otherRemotes\n              } = remotes;\n              return otherRemotes;\n            });\n          }\n        );\n      }\n    }, [isAuthed, rc]);\n\n    useEffect(() => {\n      if (!rc) return;\n      rc.socket.on(\n        \"producerUpdate\",\n        async ({\n          from,\n          paused,\n          type,\n        }: {\n          from: CallParticipant;\n          producerId: string;\n          paused: boolean;\n          type: \"audio\" | \"video\";\n        }) => {\n          console.log(`[Videochat] producer ${type} update from ${from.type} `);\n          if (from.type === \"user\") {\n            type === \"audio\"\n              ? setContactAudioPaused(paused)\n              : setContactVideoPaused(paused);\n          } else if (from.type === \"inmate\") {\n            type === \"audio\"\n              ? setInmateAudioPaused(paused)\n              : setInmateVideoPaused(paused);\n          }\n        }\n      );\n    }, [rc]);\n\n    useEffect(() => {\n      if (!status) return;\n      updateCallStatus(callId, status);\n    }, [status, callId]);\n\n    const measuredRef = useCallback(\n      (node) => {\n        if (node !== null && rc && isAuthed) {\n          (async () => {\n            rc.on(\n              \"consume\",\n              async (\n                kind: string,\n                stream: MediaStream,\n                participant: CallParticipant\n              ) => {\n                console.log(\n                  `[VideoChat] Received ${kind} consume from ${participant.type} ${participant.id}`\n                );\n                if (node) {\n                  if (kind === \"video\") {\n                    setRemoteVideos((remotes) => ({\n                      ...remotes,\n                      [getParticipantStreamId(participant)]: stream,\n                    }));\n                  } else if (kind === \"audio\") {\n                    setRemoteAudios((remotes) => ({\n                      ...remotes,\n                      [getParticipantStreamId(participant)]: stream,\n                    }));\n                  }\n\n                  setLoading(false);\n                }\n              }\n            );\n          })();\n        }\n      },\n      [rc, isAuthed]\n    );\n\n    // useEffect(() => {\n    //   const inmate = document.getElementById(`inmate-${callId}-audio`);\n    //   const user = document.getElementById(`user-${callId}-audio`);\n    //   if (inmate) (inmate as HTMLAudioElement).muted = isAudioOn;\n    //   if (user) (user as HTMLAudioElement).muted = isAudioOn;\n    // }, [isAudioOn, callId]);\n\n    useEffect(() => {\n      if (rc) {\n        const interval = setInterval(() => {\n          rc.socket.emit(\"heartbeat\", { callId });\n        }, 1000);\n        return () => clearInterval(interval);\n      }\n    }, [rc, callId]);\n\n    const videoKeys = Object.keys(remoteVideos);\n    const audioKeys = Object.keys(remoteAudios);\n\n    return (\n      <div\n        className=\"bg-gray-900 rounded flex items-center\"\n        id={`call-${callId}`}\n        style={{\n          width,\n          height,\n          visibility: isVisible ? \"visible\" : \"hidden\",\n          display: isVisible ? \"flex\" : \"none\",\n        }}\n        ref={measuredRef}\n      >\n        {videoKeys.map((key: string, index: number) => {\n          const isInmate = getStreamParticipantType(key) === \"inmate\";\n\n          const isAudioPaused = isInmate\n            ? inmateAudioPaused\n            : contactAudioPaused;\n\n          const isVideoPaused = isInmate\n            ? inmateVideoPaused\n            : contactVideoPaused;\n\n          const name = isInmate\n            ? participantNames.inmates\n            : participantNames.contacts;\n\n          return (\n            <div\n              className=\"w-1/2 h-1/3 bg-gray-800 flex align-center\"\n              key={key}\n            >\n              <Video\n                srcObject={remoteVideos[key]}\n                className=\"w-full h-full\"\n                autoPlay={true}\n              />\n              {/* Blurb with metadata */}\n              <div\n                className={`absolute bottom-20 ${\n                  index === 0 ? \"left-4\" : \"right-4\"\n                } bg-black bg-opacity-50 py-1 px-2 rounded flex align-center`}\n              >\n                {isAudioPaused && (\n                  <AudioMutedOutlined className=\"text-red-600 text-base\" />\n                )}\n                {isVideoPaused && (\n                  <VideoCameraOutlined className=\"text-red-600 text-base ml-1\" />\n                )}\n                <Typography.Text className=\"text-white text-base ml-1\">\n                  {name}\n                </Typography.Text>\n              </div>\n            </div>\n          );\n        })}\n        {audioKeys.map((key: string) => (\n          <Audio\n            key={key}\n            srcObject={remoteAudios[key]}\n            autoPlay={true}\n            muted={!isAudioOn}\n          />\n        ))}\n        {!isAudioOn && (\n          <AudioMutedOutlined\n            style={{\n              position: \"absolute\",\n              bottom: 24,\n              right: 24,\n              fontSize: 36,\n              color: \"red\",\n            }}\n          />\n        )}\n        <VideoOverlay\n          alerts={alerts}\n          terminateCall={() => {\n            if (rc) {\n              rc.terminate();\n              updateCallStatus(callId, \"terminated\");\n              openNotificationWithIcon(\n                `Call #${callId} terminated`,\n                \"We notified both participants of the incident.\",\n                \"info\"\n              );\n            }\n          }}\n          lockCall={() => lockCall(callId)}\n          muteCall={() => muteCall(callId)}\n          unmuteCall={() => unmuteCall(callId)}\n          isAudioOn={isAudioOn}\n          emitAlert={emitAlert}\n          openChat={() => openChat(callId)}\n          closeChat={() => closeChat(callId)}\n          chatCollapsed={chatCollapsed}\n        />\n        {loading && <Loader />}\n      </div>\n    );\n  }\n);\n\nexport default VideoChat;\n","import React, { ReactElement } from \"react\";\nimport { Badge, Card } from \"antd\";\nimport \"./Video.css\";\n\ninterface Props {\n  width: number | string;\n  height: number | string;\n}\n\nexport default function VideoSkeleton({ width, height }: Props): ReactElement {\n  return (\n    <Badge.Ribbon text=\"Offline\">\n      <Card style={{ width, height }} className=\"video-wrapper\"></Card>\n    </Badge.Ribbon>\n  );\n}\n","import React, { ReactElement, ReactNode } from \"react\";\nimport { Typography, Layout, Space, Col, Row } from \"antd\";\nimport { FULL_WIDTH, PADDING } from \"src/styles/styles\";\n\ninterface Props {\n  title: string;\n  subtitle: string;\n  extra?: ReactNode[];\n}\n\nconst HEADER_STYLE = {\n  backgroundColor: \"white\",\n  boxShadow: \"0 2px 4px rgb(53 72 88 / 7%\",\n  marginBottom: \"16px\",\n  paddingLeft: PADDING,\n  paddingRight: PADDING,\n  display: \"flex\",\n  alignItems: \"center\",\n  lineHeight: 1.2,\n};\n\nexport default function Header({\n  title,\n  subtitle,\n  extra,\n}: Props): ReactElement {\n  return (\n    <Layout.Header\n      style={{\n        ...HEADER_STYLE,\n        paddingTop: extra?.length ? \"72px\" : \"48px\",\n        paddingBottom: extra?.length ? \"72px\" : \"48px\",\n      }}\n    >\n      <Space direction=\"vertical\" style={FULL_WIDTH}>\n        <Typography.Title level={3} style={{ marginBottom: 0 }}>\n          {title}\n        </Typography.Title>\n        <Typography.Text>{subtitle}</Typography.Text>\n        {extra?.length && (\n          <hr\n            style={{ border: 0, height: 1, backgroundColor: \"rgba(0,0,0,.15)\" }}\n            className=\"mb-2\"\n          />\n        )}\n        <Row gutter={16} style={FULL_WIDTH}>\n          {extra?.map((item, idx) => (\n            <Col key={idx}>{item}</Col>\n          ))}\n        </Row>\n      </Space>\n    </Layout.Header>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Space, Typography } from \"antd\";\nimport { format } from \"date-fns\";\nimport { Call, CallMessage, ParticipantType } from \"src/typings/Call\";\nimport { getCallContactsFullNames, getCallInmatesFullNames } from \"src/utils\";\n\ninterface Props {\n  message: CallMessage;\n  call: Call;\n  className?: string;\n}\n\nconst MessageDisplay: React.FC<Props> = ({ message, call, className }) => {\n  const getDisplayName = () => {\n    switch (message.senderType) {\n      case \"inmate\":\n        return getCallInmatesFullNames(call);\n\n      case \"user\":\n        return getCallContactsFullNames(call);\n      case \"doc\":\n        return \"DOC Staff\";\n    }\n  };\n\n  return (\n    <Space\n      direction=\"vertical\"\n      align={message.senderType === \"inmate\" ? \"end\" : \"start\"}\n      style={{ width: \"100%\" }}\n      className={className}\n    >\n      <Space>\n        <Typography.Text strong>{getDisplayName()}</Typography.Text>\n        <Typography.Text type=\"secondary\">\n          {format(new Date(message.createdAt), \"HH:mm\")}\n        </Typography.Text>\n      </Space>\n      <Typography.Text>{message.contents}</Typography.Text>\n    </Space>\n  );\n};\n\nexport default MessageDisplay;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { RootState, useAppDispatch } from \"src/redux\";\nimport {\n  CALL_ALERTS,\n  GRID_TO_SPAN_WIDTH,\n  GRID_TO_VH_HEIGHT,\n} from \"src/utils/constants\";\nimport { FULL_WIDTH, WRAPPER_STYLE } from \"src/styles/styles\";\nimport io from \"socket.io-client\";\nimport { selectLiveCalls } from \"src/redux/selectors\";\nimport {\n  Layout,\n  Row,\n  Col,\n  Space,\n  Pagination,\n  PageHeader,\n  Select,\n  Empty,\n} from \"antd\";\nimport {\n  fetchCalls,\n  callsActions,\n  updateCallStatus,\n} from \"src/redux/modules/call\";\nimport VideoChat from \"src/pages/LiveCall/VideoChat\";\nimport VideoSkeleton from \"./VideoSkeleton\";\nimport { Call, CallMessage, CallStatus, GridOption } from \"src/typings/Call\";\nimport _ from \"lodash\";\nimport Header from \"src/components/Header/Header\";\nimport MessageDisplay from \"src/components/calls/MessageDisplay\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport {\n  getCallContactsFullNames,\n  getCallInmatesFullNames,\n  getFirstNames,\n  getVideoHandlerHostname,\n} from \"src/utils\";\n\nconst { Content, Sider } = Layout;\n\nconst { addMessage } = callsActions;\n\nconst mapStateToProps = (state: RootState) => ({\n  visitations: selectLiveCalls(state),\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst MAX_VH_HEIGHT_FRAMES = 80;\nconst OPTIONS: GridOption[] = [1, 2, 4, 6, 8];\n\nconst LiveVisitationContainer: React.FC<PropsFromRedux> = ({ visitations }) => {\n  const [activeCallChat, setActiveCallChat] = useState<Call>();\n  const [activeMessages, setActiveMessages] = useState<CallMessage[]>([]);\n  const [chatCollapsed, setChatCollapsed] = useState(false);\n  const [grid, setGrid] = useState<GridOption>(1);\n  const [frameVhHeight, setFrameVhHeight] = useState(MAX_VH_HEIGHT_FRAMES);\n  const [page, setPage] = useState(1);\n  const [freshCalls, setFreshCalls] = useState<Call[]>([]);\n  const messagesMap = useSelector((state: RootState) => state.calls.messages);\n\n  const messagesContainerRef = useRef<HTMLDivElement>(null);\n  // map from video handler hostname to socket\n  const [socketMap, setSocketMap] = useState<\n    Record<string, SocketIOClient.Socket>\n  >({});\n\n  // map from call id to muted boolean\n  const [unmutedCallsMap, setUnmutedCalls] = useState<Record<number, boolean>>(\n    {}\n  );\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (!messagesContainerRef.current) return;\n    messagesContainerRef.current.scroll({\n      top: messagesContainerRef.current.scrollHeight,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  }, [messagesContainerRef, activeMessages]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch(\n        fetchCalls({\n          \"call.status\": [\"live\", \"missing_monitor\"],\n        })\n      );\n    }, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    const newCalls = visitations.filter(\n      (call) =>\n        call.videoHandler &&\n        !(getVideoHandlerHostname(call.videoHandler) in socketMap)\n    );\n    setFreshCalls(newCalls);\n  }, [socketMap, visitations]);\n\n  useEffect(() => {\n    if (!freshCalls.length) return;\n\n    const temp: Record<string, SocketIOClient.Socket> = {};\n\n    for (const call of freshCalls) {\n      if (!call.videoHandler) continue;\n      const target = getVideoHandlerHostname(call.videoHandler);\n      // initialize new sockets once\n      if (target in temp) continue;\n\n      const newSocketClient = io.connect(target, { transports: [\"websocket\"] });\n      temp[target] = newSocketClient;\n    }\n    console.log(\"[Index] New socket clients\", temp);\n    setSocketMap((curr) => ({ ...curr, ...temp }));\n  }, [freshCalls]);\n\n  // Initialize call messages sider\n  useEffect(() => {\n    // if there are no calls at all, just return\n    if (!visitations.length) return;\n    //  if there are no active calls, just select the first one\n    else if (!activeCallChat) {\n      const initialActiveChat = visitations[0];\n      setActiveCallChat(initialActiveChat);\n      setActiveMessages(messagesMap[initialActiveChat.id] || []);\n    } else {\n      setActiveMessages(messagesMap[activeCallChat.id] || []);\n    }\n  }, [visitations, activeCallChat, messagesMap]);\n\n  // Grid options\n  const handleGridChange = (grid: GridOption) => {\n    setGrid(grid);\n    setFrameVhHeight(GRID_TO_VH_HEIGHT[grid]);\n  };\n\n  const onPageChange = (page: number, _?: number) => {\n    setPage(page);\n  };\n\n  const onShowSizeChange = (_: number, pageSize: number) => {\n    handleGridChange(pageSize as GridOption);\n  };\n\n  const onMessageReceived = useCallback(\n    (callId: string, message: CallMessage) => {\n      dispatch(addMessage({ id: callId, message }));\n    },\n    []\n  );\n\n  return (\n    <Content>\n      <Header\n        title={`Live Calls (${visitations.length})`}\n        subtitle=\"Monitor, send alerts and terminate calls if needed. All in real-time\"\n      />\n      <Layout>\n        <Content>\n          <Space\n            direction=\"vertical\"\n            style={{ ...FULL_WIDTH, ...WRAPPER_STYLE }}\n          >\n            {visitations.length === 0 && (\n              <Empty description=\"There aren't any live calls currently.\" />\n            )}\n            {visitations.length > 0 && (\n              <Pagination\n                current={page}\n                defaultCurrent={1}\n                defaultPageSize={grid}\n                onChange={onPageChange}\n                pageSize={grid}\n                pageSizeOptions={OPTIONS.filter(\n                  (option) => option <= visitations.length\n                ).map((e) => `${e}`)}\n                total={visitations.length}\n                showSizeChanger={true}\n                onShowSizeChange={onShowSizeChange}\n              />\n            )}\n            <Row gutter={16}>\n              {visitations.map((call, idx) => {\n                if (!call.videoHandler)\n                  return (\n                    <Col span={GRID_TO_SPAN_WIDTH[grid]} key={call.id}>\n                      <VideoSkeleton\n                        width=\"100%\"\n                        height={`${frameVhHeight}vh`}\n                      />\n                    </Col>\n                  );\n\n                const socket =\n                  socketMap[getVideoHandlerHostname(call.videoHandler)];\n\n                if (!socket) return <div />;\n                return (\n                  <Col span={GRID_TO_SPAN_WIDTH[grid]} key={call.id}>\n                    <VideoChat\n                      height={`${frameVhHeight}vh`}\n                      socket={socket}\n                      callId={call.id}\n                      participantNames={{\n                        inmates: getCallInmatesFullNames(call),\n                        contacts: getCallContactsFullNames(call),\n                      }}\n                      isVisible={\n                        idx >= (page - 1) * grid &&\n                        idx < (page - 1) * grid + grid\n                      }\n                      width=\"100%\"\n                      alerts={CALL_ALERTS}\n                      muteCall={(callId: string) =>\n                        setUnmutedCalls(_.omit(unmutedCallsMap, callId))\n                      }\n                      unmuteCall={(callId: string) =>\n                        setUnmutedCalls({\n                          ...unmutedCallsMap,\n                          [callId]: true,\n                        })\n                      }\n                      isAudioOn={call.id in unmutedCallsMap}\n                      openChat={(callId: string) => {\n                        const call = visitations.find(\n                          (call) => call.id === callId\n                        );\n                        setActiveCallChat(call);\n                        setChatCollapsed(false);\n                      }}\n                      closeChat={(callId: string) => {\n                        setChatCollapsed(true);\n                      }}\n                      chatCollapsed={chatCollapsed}\n                      addMessage={onMessageReceived}\n                      lockCall={(callId: string) => {\n                        const idx = visitations.findIndex(\n                          (call) => call.id === callId\n                        );\n                        if (idx !== -1) {\n                          handleGridChange(1);\n                          setPage(idx + 1);\n                          setActiveCallChat(visitations[idx]);\n                        }\n                      }}\n                      updateCallStatus={(id: string, status: CallStatus) =>\n                        dispatch(updateCallStatus({ id, status }))\n                      }\n                    />\n                  </Col>\n                );\n              })}\n            </Row>\n          </Space>\n        </Content>\n        <Sider\n          theme=\"light\"\n          width={300}\n          collapsible\n          defaultCollapsed\n          reverseArrow\n          collapsed={chatCollapsed}\n          onCollapse={(collapsed) => setChatCollapsed(collapsed)}\n          className=\"max-h-screen shadow overflow-y-auto\"\n        >\n          {!chatCollapsed && (\n            <div ref={messagesContainerRef} className=\"pb-16\">\n              <PageHeader\n                title=\"Chat\"\n                extra={[\n                  <Select\n                    value={activeCallChat?.id}\n                    onSelect={(id) => {\n                      setActiveCallChat(visitations.find((v) => v.id === id));\n                    }}\n                  >\n                    {visitations.map((visitation) => (\n                      <Select.Option\n                        value={visitation.id}\n                        key={visitation.id}\n                        className=\"truncate mw-1/2\"\n                      >\n                        {getFirstNames(visitation.inmates)} &{\" \"}\n                        {getFirstNames(visitation.contacts)}\n                      </Select.Option>\n                    ))}\n                  </Select>,\n                ]}\n              />{\" \"}\n              <div\n                className=\"flex flex-col\"\n                style={{\n                  ...WRAPPER_STYLE,\n                }}\n                ref={messagesContainerRef}\n              >\n                {activeCallChat &&\n                  activeMessages.map((message) => (\n                    <MessageDisplay\n                      message={message}\n                      call={activeCallChat}\n                      className=\"mt-4\"\n                    />\n                  ))}\n              </div>\n            </div>\n          )}\n        </Sider>\n      </Layout>\n    </Content>\n  );\n};\n\nexport default connector(LiveVisitationContainer);\n","import React, { useState, useEffect } from \"react\";\nimport FullCalendar, {\n  EventClickArg,\n  EventContentArg,\n  EventInput,\n} from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./CalendarView.css\";\nimport { VisitationToEventInput } from \"src/utils\";\nimport { Call } from \"src/typings/Call\";\n\ninterface Props {\n  visitations: Call[];\n}\n\nconst CalendarView: React.FC<Props> = ({ visitations }) => {\n  const [events, setEvents] = useState<EventInput[]>([]);\n\n  const handleEventClick = (clickInfo: EventClickArg) => {\n    if (\n      window.confirm(\n        `Are you sure you want to delete the event '${clickInfo.event.title}'`\n      )\n    ) {\n      clickInfo.event.remove();\n    }\n  };\n\n  useEffect(() => {\n    setEvents(\n      visitations.map((visitation) => VisitationToEventInput(visitation))\n    );\n  }, [visitations]);\n\n  const renderEventContent = (\n    eventContent: EventContentArg\n  ): React.ReactFragment => {\n    return (\n      <>\n        <b>{eventContent.timeText}</b>\n        <i>{eventContent.event.title}</i>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"demo-app-main\">\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        headerToolbar={{\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        }}\n        initialView=\"timeGridWeek\"\n        editable={true}\n        selectable={true}\n        selectMirror={true}\n        dayMaxEvents={true}\n        weekends={false}\n        businessHours={true}\n        events={events} // alternatively, use the `events` setting to fetch from a feed\n        eventContent={renderEventContent} // custom render function\n        eventClick={handleEventClick}\n        // themeSystem=\"bootstrap\"\n        // eventsSet={(events: EventApi[]) => setCurrentEvents(events)} // called after events are initialized/added/changed/removed\n        /* you can update a remote database when these fire:\n            eventAdd={function(){}}\n            eventChange={function(){}}\n            eventRemove={function(){}}\n            */\n      />\n    </div>\n  );\n};\n\nexport default CalendarView;\n","import React from \"react\";\nimport CalendarView from \"src/components/calendar/CalendarView\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { getCallsInfo, selectAllCalls } from \"src/redux/selectors\";\nimport { Layout, PageHeader } from \"antd\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\n\nconst { Content } = Layout;\nconst mapStateToProps = (state: RootState) => ({\n  visitations: getCallsInfo(state, selectAllCalls(state)),\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst UnconnectedKioskCalendarContainer: React.FC<PropsFromRedux> = ({\n  visitations,\n}) => {\n  return (\n    <Content>\n      <PageHeader title=\"Calendar\" />\n      <div style={WRAPPER_STYLE}>\n        <CalendarView visitations={visitations} />\n      </div>\n    </Content>\n  );\n};\n\nexport default connector(UnconnectedKioskCalendarContainer);\n","import { useState, useEffect } from \"react\";\nimport { useAppSelector } from \"src/redux\";\nimport {\n  selectAllConnections,\n  selectContactEntities,\n  selectInmateEntities,\n} from \"src/redux/selectors\";\nimport { Connection } from \"src/typings/Connection\";\nimport { loadAllConnectionEntities } from \"src/utils\";\n\nexport function useConnections() {\n  const [connections, setConnections] = useState<Connection[]>([]);\n  const baseConnections = useAppSelector(selectAllConnections);\n  const contactEnts = useAppSelector(selectContactEntities);\n  const inmateEnts = useAppSelector(selectInmateEntities);\n\n  useEffect(() => {\n    const requests = baseConnections.filter(\n      (connection) => connection.status === \"pending\"\n    );\n    setConnections(\n      loadAllConnectionEntities(requests, contactEnts, inmateEnts)\n    );\n  }, [baseConnections, contactEnts, inmateEnts]);\n\n  return connections;\n}\n\nexport function useConnectionRequests() {\n  const [requests, setRequests] = useState<Connection[]>([]);\n\n  const connections = useConnections();\n\n  useEffect(() => {\n    setRequests(\n      connections.filter((connection) => connection.status === \"pending\")\n    );\n  }, [connections]);\n\n  return requests;\n}\n\nexport function useInmateConnections(id: string) {\n  const [inmateConnections, setInmateConnections] = useState<Connection[]>([]);\n\n  const connections = useConnections();\n\n  useEffect(() => {\n    setInmateConnections(\n      connections.filter((connection) => connection.inmateId === id)\n    );\n  }, [connections, id]);\n\n  return inmateConnections;\n}\n\nexport function useContactConnections(id: string) {\n  const [connection, setConnections] = useState<Connection[]>([]);\n\n  const connections = useConnections();\n\n  useEffect(() => {\n    setConnections(\n      connections.filter((connection) => connection.userId === id)\n    );\n  }, [connections, id]);\n\n  return connection;\n}\n\nexport function useConnectionRequestsCount() {\n  const baseConnections = useAppSelector(selectAllConnections);\n\n  return baseConnections.filter((connection) => connection.status === \"pending\")\n    .length;\n}\n","import { Space, Typography } from \"antd\";\nimport React from \"react\";\nimport { Contact } from \"src/typings/Contact\";\nimport { genFullName } from \"src/utils\";\n\ninterface Props {\n  contact: Contact;\n  navigate: (path: string) => void;\n}\n\nconst ContactCell = ({ contact, navigate }: Props) => {\n  return (\n    <Space direction=\"vertical\">\n      <Typography.Text>Name: {genFullName(contact)}</Typography.Text>\n      <Typography.Text>Visitor ID: {contact.id}</Typography.Text>\n      <Typography.Link onClick={() => navigate(`/contacts/${contact.id}`)}>\n        View Full Profile\n      </Typography.Link>\n    </Space>\n  );\n};\n\nexport default ContactCell;\n","import { Space, Typography } from \"antd\";\nimport { format } from \"date-fns\";\nimport React from \"react\";\nimport { Inmate } from \"src/typings/Inmate\";\nimport { genFullName } from \"src/utils\";\n\ninterface Props {\n  inmate: Inmate;\n  navigate: (path: string) => void;\n}\n\nconst InmateCell = ({ inmate, navigate }: Props) => {\n  return (\n    <Space direction=\"vertical\">\n      <Typography.Text>Name: {genFullName(inmate)}</Typography.Text>\n      <Typography.Text>\n        Unique ID: {inmate.inmateIdentification}\n      </Typography.Text>\n      <Typography.Text>\n        DOB: {format(new Date(inmate.dateOfBirth), \"dd/mm/yy\")}\n      </Typography.Text>\n      <Typography.Link onClick={() => navigate(`/members/${inmate.id}`)}>\n        View Full Profile\n      </Typography.Link>\n    </Space>\n  );\n};\n\nexport default InmateCell;\n","import React from \"react\";\nimport { Table, Space, Button } from \"antd\";\nimport { Connection } from \"src/typings/Connection\";\nimport { genFullName } from \"src/utils\";\nimport { Inmate } from \"src/typings/Inmate\";\nimport { Contact } from \"src/typings/Contact\";\nimport Avatar from \"../Avatar\";\nimport ContactCell from \"./ContactCell\";\nimport InmateCell from \"./InmateCell\";\n\ninterface Props {\n  connections: Connection[];\n  accept: (connection: Connection) => void;\n  reject: (connection: Connection) => void;\n  navigate: (path: string) => void;\n  loading?: boolean;\n}\n\nconst ConnectionRequests = ({\n  connections,\n  accept,\n  reject,\n  navigate,\n  loading,\n}: Props) => {\n  return (\n    <Table dataSource={connections} loading={loading}>\n      <Table.Column\n        title=\"\"\n        dataIndex=\"inmate\"\n        key=\"inmateProfilePic\"\n        render={(inmate: Inmate) => (\n          <>\n            {\n              <Avatar\n                src={inmate.profileImagePath}\n                fallback={genFullName(inmate)}\n                size={64}\n              />\n            }\n          </>\n        )}\n      />\n      <Table.Column\n        title=\"Inmate\"\n        dataIndex=\"inmate\"\n        key=\"inmateProfilePic\"\n        render={(inmate: Inmate) => (\n          <>\n            <InmateCell inmate={inmate} navigate={navigate} />\n          </>\n        )}\n      />\n      <Table.Column\n        title=\"\"\n        dataIndex=\"contact\"\n        key=\"contactProfilePic\"\n        render={(contact: Contact) => (\n          <>\n            <Avatar\n              src={contact.profileImagePath}\n              fallback={genFullName(contact)}\n              size={64}\n            />\n          </>\n        )}\n      />\n      <Table.Column\n        title=\"Contact\"\n        dataIndex=\"contact\"\n        key=\"contactInfo\"\n        render={(contact: Contact) => (\n          <>\n            <ContactCell contact={contact} navigate={navigate} />\n          </>\n        )}\n      />\n      <Table.Column\n        title=\"Relationship\"\n        dataIndex=\"relationship\"\n        key=\"relationship\"\n      />\n      <Table.Column\n        title=\"\"\n        key=\"actions\"\n        render={(_text, request: Connection) => (\n          <Space>\n            <Button type=\"primary\" onClick={() => accept(request)}>\n              Accept\n            </Button>\n            <Button danger onClick={() => reject(request)}>\n              Reject\n            </Button>\n          </Space>\n        )}\n      />\n    </Table>\n  );\n};\n\nexport default ConnectionRequests;\n","import Header from \"./Header\";\n\nexport default Header;\n","import React, { useEffect } from \"react\";\nimport { RootState, useAppDispatch, useAppSelector } from \"src/redux\";\nimport {\n  fetchConnections,\n  updateConnection,\n} from \"src/redux/modules/connections\";\nimport {\n  BaseConnection,\n  Connection,\n  ConnectionStatus,\n} from \"src/typings/Connection\";\nimport { useConnectionRequests } from \"src/hooks/useConnections\";\nimport { push } from \"connected-react-router\";\nimport ConnectionRequests from \"src/components/Requests/ConnectionRequests\";\nimport { Layout } from \"antd\";\nimport Header from \"src/components/Header\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\n\nconst RequestsPage: React.FC = () => {\n  const connections = useConnectionRequests();\n\n  const dispatch = useAppDispatch();\n  const loading = useAppSelector(\n    (state: RootState) => state.connections.loading\n  );\n\n  const handleConnectionUpdate = (\n    request: BaseConnection,\n    status: ConnectionStatus\n  ): void => {\n    dispatch(updateConnection({ connectionId: request.id, status }));\n  };\n\n  useEffect(() => {\n    // TODO: improve to only re-fetch connection requests here\n    dispatch(fetchConnections());\n  }, [dispatch]);\n\n  return (\n    <Layout.Content>\n      <Header\n        title=\"Approval Requests\"\n        subtitle=\"Review all connection requests between incarcerated people in your facility and their loved one on the outside.\"\n      />\n      <div style={WRAPPER_STYLE}>\n        <ConnectionRequests\n          accept={(connection: Connection) =>\n            handleConnectionUpdate(connection, \"active\")\n          }\n          reject={(connection: Connection) =>\n            handleConnectionUpdate(connection, \"rejected\")\n          }\n          connections={connections}\n          navigate={(path: string) => dispatch(push(path))}\n          loading={loading}\n        />\n      </div>\n    </Layout.Content>\n  );\n};\n\nexport default RequestsPage;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { ReactElement } from \"react\";\n// import { Menu, Dropdown } from \"antd\";\n// import { DownOutlined } from \"@ant-design/icons\";\nimport { DatePicker, Space } from \"antd\";\n\nconst { RangePicker } = DatePicker;\n\ninterface Props {\n  setStartDate: (date: number) => void;\n  setEndDate: (date: number) => void;\n  setDuration: (maxDuration: number) => void;\n}\n\nexport default function CallFiltersHeader({\n  setDuration,\n  setStartDate,\n  setEndDate,\n}: Props): ReactElement {\n  // const DURATION_FILTERS = [Infinity, 3, 5, 10, 15, 20];\n\n  // const DurationFilters = (\n  //   <Menu>\n  //     {DURATION_FILTERS.map((duration) => (\n  //       <Menu.Item key={duration} onClick={() => setDuration(duration)}>\n  //         {\"<\"}\n  //         {duration}\n  //       </Menu.Item>\n  //     ))}\n  //   </Menu>\n  // );\n\n  return (\n    <Space align=\"center\">\n      <RangePicker\n        onChange={(date) => {\n          if (!date) return;\n          if (date[0]) setStartDate(date[0].unix() * 1000);\n          if (date[1]) setEndDate(date[1].unix() * 1000);\n        }}\n      />\n      {/* TODO: add this back once we feel good about the duration field */}\n      {/* https://github.com/Ameelio/connect-doc-client/issues/56 */}\n      {/* <Dropdown overlay={DurationFilters} trigger={[\"click\"]}>\n        <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n          Call Duration <DownOutlined />\n        </a>\n      </Dropdown> */}\n    </Space>\n  );\n}\n","import { CloseOutlined, EyeOutlined } from \"@ant-design/icons\";\nimport { Button, Table, Tag } from \"antd\";\nimport { format } from \"date-fns\";\nimport React from \"react\";\nimport { Call, CallStatus } from \"src/typings/Call\";\nimport { VisitationType } from \"src/typings/Common\";\nimport { Contact } from \"src/typings/Contact\";\nimport { Inmate } from \"src/typings/Inmate\";\nimport { capitalize, genFullName, getVisitationLabel } from \"src/utils\";\n\ninterface Props {\n  calls: Call[];\n  isLoading: boolean;\n  navigate: (path: string) => void;\n  openCancelCallModal: (call: Call) => void;\n}\n\nconst SearchCallsTable: React.FC<Props> = ({\n  calls,\n  isLoading,\n  navigate,\n  openCancelCallModal,\n}) => {\n  const renderButton = (visitation: Call) => {\n    switch (visitation.status) {\n      case \"scheduled\":\n        return (\n          <Button\n            onClick={() => openCancelCallModal(visitation)}\n            icon={<CloseOutlined />}\n          >\n            Cancel\n          </Button>\n        );\n      case \"ended\":\n      case \"terminated\":\n        return (\n          <Button\n            onClick={() => navigate(`/call/${visitation.id}`)}\n            icon={<EyeOutlined />}\n          >\n            View\n          </Button>\n        );\n      default:\n        return <div />;\n    }\n  };\n\n  return (\n    <Table dataSource={calls} loading={isLoading}>\n      <Table.Column\n        title=\"Date\"\n        dataIndex=\"scheduledStart\"\n        key=\"date\"\n        render={(time) => (\n          <>\n            <span>{format(new Date(time), \"MM/dd/yy\")}</span>\n          </>\n        )}\n      />\n      <Table.Column\n        title=\"Start Time\"\n        dataIndex=\"scheduledStart\"\n        key=\"startTime\"\n        render={(time) => (\n          <>\n            <span>{format(new Date(time), \"HH:mm\")}</span>\n          </>\n        )}\n      />\n      <Table.Column\n        title=\"End Time\"\n        dataIndex=\"scheduledEnd\"\n        key=\"endTime\"\n        render={(time) => (\n          <>\n            <span>{format(new Date(time), \"HH:mm\")}</span>\n          </>\n        )}\n      />\n      <Table.Column\n        title=\"Incarcerated Persons\"\n        dataIndex=\"inmates\"\n        key=\"inmateName\"\n        render={(inmates: Inmate[]) =>\n          inmates.map((inmate) => (\n            <>\n              <span>{genFullName(inmate)}</span>\n            </>\n          ))\n        }\n      />\n      <Table.Column\n        title=\"Unique Identifiers\"\n        dataIndex=\"inmates\"\n        key=\"inmateIds\"\n        render={(inmates: Inmate[]) =>\n          inmates.map((inmate) => (\n            <>\n              <span>{inmate.inmateIdentification}</span>\n            </>\n          ))\n        }\n      />\n      <Table.Column\n        title=\"Contact Name\"\n        dataIndex=\"contacts\"\n        key=\"contactName\"\n        render={(contact: Contact[]) =>\n          contact.map((contact) => (\n            <>\n              <span>{genFullName(contact)}</span>\n            </>\n          ))\n        }\n      />\n      <Table.Column\n        title=\"Status\"\n        dataIndex=\"status\"\n        key=\"location\"\n        render={(status: CallStatus) => (\n          <>\n            <Tag>{capitalize(status)}</Tag>\n          </>\n        )}\n      />\n      <Table.Column\n        title=\"Type of Visitation\"\n        dataIndex=\"type\"\n        key=\"type\"\n        render={(type: VisitationType) => (\n          <>\n            <Tag>{getVisitationLabel(type)}</Tag>\n          </>\n        )}\n      />\n\n      <Table.Column\n        title=\"Recording\"\n        key=\"action\"\n        render={(_text, visitation: Call) => renderButton(visitation)}\n      />\n    </Table>\n  );\n};\n\nexport default SearchCallsTable;\n","import { Input, Layout, Select } from \"antd\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport CallFiltersHeader from \"src/pages/CallLogs/CallFilters\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\nimport { Call, CallFilters, CallStatus, SearchFilter } from \"src/typings/Call\";\nimport { isSubstring } from \"src/utils\";\nimport Header from \"../Header\";\nimport SearchCallsTable from \"./SearchCallsTable\";\nimport _ from \"lodash\";\nimport {\n  CALL_STATUS_FILTER_OPTIONS,\n  VISIATION_TYPE_LABEL_MAP,\n  VISITATION_TYPE_FILTER_OPTIONS,\n} from \"src/constants\";\nimport { VisitationType } from \"src/typings/Common\";\n\ninterface Props {\n  calls: Call[];\n  navigate: (path: string) => void;\n  fetchCalls: (filters: CallFilters) => void;\n  openCancelCallModal: (call: Call) => void;\n}\n\nconst LABEL_TO_FILTER_MAP: Record<SearchFilter, string> = {\n  \"inmateParticipants.inmateIdentification\": \"Inmate ID\",\n  \"inmateParticipants.lastName\": \"Inmate Last Name\",\n  \"userParticipants.lastName\": \"Contact Name\",\n  \"userParticipants.id\": \"Contact ID\",\n  \"kiosk.name\": \"Kiosk\",\n  status: \"Status\",\n  // type: \"Type\",\n};\n\nconst SearchCalls = ({\n  calls,\n  navigate,\n  fetchCalls,\n  openCancelCallModal,\n}: Props) => {\n  const [filteredLogs, setFilteredLogs] = useState<Call[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [global, setGlobal] = useState<string>(\"\");\n  const [limit] = useState(500);\n  const [offset] = useState(0);\n  const [startDate, setStartDate] = useState<number>();\n  const [endDate, setEndDate] = useState<number>();\n  const [maxDuration, setMaxDuration] = useState<number>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [activeSearchFilter, setActiveSearchFilter] = useState<SearchFilter>(\n    \"inmateParticipants.inmateIdentification\"\n  );\n  const [selectedStatusFilter, setSelectedStatusFilter] = useState<\n    CallStatus[]\n  >([]);\n\n  const [selectedVisitationType, setSelectedVisitationType] = useState<\n    VisitationType\n  >();\n\n  const delayedQuery = useCallback(\n    _.debounce(() => setGlobal(searchQuery), 1000),\n    [searchQuery]\n  );\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    delayedQuery();\n    return delayedQuery.cancel;\n  }, [searchQuery, delayedQuery]);\n\n  useEffect(() => {\n    setLoading(true);\n    (async () =>\n      fetchCalls({\n        [`${activeSearchFilter}` as keyof CallFilters]: global,\n        scheduledStart:\n          startDate && endDate\n            ? { rangeStart: startDate, rangeEnd: endDate }\n            : undefined,\n        maxDuration,\n        limit,\n        offset,\n        // type: selectedVisitationType,\n      }))().then(() => setLoading(false));\n  }, [\n    fetchCalls,\n    limit,\n    offset,\n    startDate,\n    endDate,\n    maxDuration,\n    global,\n    activeSearchFilter,\n    selectedVisitationType,\n  ]);\n\n  useEffect(() => {\n    let filteredCalls = calls;\n\n    if (startDate && endDate)\n      filteredCalls = filteredCalls.filter(\n        (log) =>\n          new Date(log.scheduledStart) >= new Date(startDate) &&\n          new Date(log.scheduledStart) <= new Date(endDate)\n      );\n\n    // Free Text Filters\n    if (searchQuery)\n      switch (activeSearchFilter) {\n        case \"inmateParticipants.inmateIdentification\":\n          filteredCalls = filteredCalls.filter((log) =>\n            log.inmates.some((inmate) =>\n              isSubstring(searchQuery, inmate.inmateIdentification)\n            )\n          );\n          break;\n        case \"inmateParticipants.lastName\":\n          filteredCalls = filteredCalls.filter((log) =>\n            log.inmates.some((inmate) =>\n              isSubstring(searchQuery, inmate.lastName)\n            )\n          );\n          break;\n        case \"userParticipants.lastName\":\n          filteredCalls = filteredCalls.filter((log) =>\n            log.contacts.some((contact) =>\n              isSubstring(searchQuery, contact.lastName)\n            )\n          );\n          break;\n        case \"userParticipants.id\":\n          filteredCalls = filteredCalls.filter((log) =>\n            log.contacts.some((contact) => contact.id === searchQuery)\n          );\n          break;\n        case \"kiosk.name\":\n          filteredCalls = filteredCalls.filter((call) =>\n            isSubstring(searchQuery, call.kiosk.name)\n          );\n          break;\n        default:\n          break;\n      }\n\n    // Multiple Choice Filters\n    // if (activeSearchFilter === \"type\" && selectedVisitationType) {\n    //   filteredCalls = filteredCalls.filter(\n    //     (call) => call.type === selectedVisitationType\n    //   );\n    // }\n    if (activeSearchFilter === \"status\" && selectedStatusFilter.length) {\n      filteredCalls = filteredCalls.filter((call) =>\n        selectedStatusFilter.includes(call.status)\n      );\n    }\n\n    setFilteredLogs(filteredCalls);\n  }, [\n    calls,\n    setFilteredLogs,\n    startDate,\n    endDate,\n    activeSearchFilter,\n    searchQuery,\n    selectedStatusFilter,\n    selectedVisitationType,\n  ]);\n\n  const filteredOptions = CALL_STATUS_FILTER_OPTIONS.filter(\n    (c) => !selectedStatusFilter.includes(c.value)\n  );\n\n  const filteredVisitationTypeOptions = VISITATION_TYPE_FILTER_OPTIONS.filter(\n    (type) => selectedVisitationType !== type.value\n  );\n\n  const renderSelectFilter = () => {\n    switch (activeSearchFilter) {\n      case \"status\":\n        return (\n          <Select\n            mode=\"multiple\"\n            allowClear\n            style={{ width: \"auto\", minWidth: 150 }}\n            placeholder=\"Filter by call status\"\n            onChange={(value) => setSelectedStatusFilter(value as CallStatus[])}\n          >\n            {filteredOptions.map((o) => (\n              <Select.Option key={o.key} value={o.value}>\n                {o.label}\n              </Select.Option>\n            ))}\n          </Select>\n        );\n      // case \"type\":\n      //   return (\n      //     <Select\n      //       allowClear\n      //       style={{ width: \"auto\", minWidth: 150 }}\n      //       placeholder=\"Filter by visitation type\"\n      //       onChange={(value) => {\n      //         setSelectedVisitationType(value as VisitationType);\n      //       }}\n      //       value={\n      //         selectedVisitationType &&\n      //         VISIATION_TYPE_LABEL_MAP[selectedVisitationType]\n      //       }\n      //     >\n      //       {filteredVisitationTypeOptions.map((o) => (\n      //         <Select.Option key={o.key} value={o.value}>\n      //           {o.label}\n      //         </Select.Option>\n      //       ))}\n      //     </Select>\n      //   );\n      default:\n        return <div />;\n    }\n  };\n\n  return (\n    <Layout.Content>\n      <Header\n        title=\"Search for Visitation Logs\"\n        subtitle=\"Search by different parameters and retrieve recordings of past calls\"\n        extra={[\n          <Input.Group compact>\n            <Select\n              defaultValue={Object.keys(LABEL_TO_FILTER_MAP)[0] as SearchFilter}\n              onSelect={(value) => setActiveSearchFilter(value)}\n            >\n              {Object.keys(LABEL_TO_FILTER_MAP).map((key) => (\n                <Select.Option key={key} value={key as SearchFilter}>\n                  {LABEL_TO_FILTER_MAP[key as SearchFilter]}\n                </Select.Option>\n              ))}\n            </Select>\n            {activeSearchFilter === \"status\" ? (\n              renderSelectFilter()\n            ) : (\n              <Input.Search\n                style={{ width: \"auto\" }}\n                placeholder={`Search by ${LABEL_TO_FILTER_MAP[activeSearchFilter]}...`}\n                allowClear\n                value={searchQuery}\n                onChange={handleSearchChange}\n                onSearch={(value) => {\n                  setGlobal(value);\n                }}\n              />\n            )}\n          </Input.Group>,\n          <CallFiltersHeader\n            setStartDate={setStartDate}\n            setEndDate={setEndDate}\n            setDuration={setMaxDuration}\n          />,\n        ]}\n      />\n      <div style={WRAPPER_STYLE}>\n        <SearchCallsTable\n          calls={filteredLogs}\n          isLoading={loading}\n          navigate={navigate}\n          openCancelCallModal={openCancelCallModal}\n        />\n      </div>\n    </Layout.Content>\n  );\n};\n\nexport default SearchCalls;\n","import SearchCalls from \"./SearchCalls\";\n\nexport default SearchCalls;\n","import React from \"react\";\nimport { RootState, useAppDispatch } from \"src/redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { getCallsInfo, selectAllCalls } from \"src/redux/selectors\";\nimport { fetchCalls } from \"src/redux/modules/call\";\nimport { push } from \"connected-react-router\";\nimport { Call } from \"src/typings/Call\";\nimport SearchCalls from \"src/components/SearchCalls\";\nimport { openModal } from \"src/redux/modules/modal\";\n\nconst mapStateToProps = (state: RootState) => ({\n  logs: getCallsInfo(state, selectAllCalls(state)).filter(\n    (call) =>\n      call.status === \"ended\" ||\n      call.status === \"terminated\" ||\n      call.status === \"scheduled\"\n  ) as Call[],\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ fetchCalls }, dispatch);\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst SearchCallsPage: React.FC<PropsFromRedux> = ({ logs, fetchCalls }) => {\n  const dispatch = useAppDispatch();\n\n  return (\n    <SearchCalls\n      calls={logs}\n      fetchCalls={fetchCalls}\n      navigate={(path: string) => dispatch(push(path))}\n      openCancelCallModal={(call: Call) =>\n        dispatch(openModal({ activeType: \"CANCEL_CALL_MODAL\", entity: call }))\n      }\n    />\n  );\n};\n\nexport default connector(SearchCallsPage);\n","import React, { ReactElement } from \"react\";\nimport { Form, Input, Select } from \"antd\";\nimport { SendOutlined } from \"@ant-design/icons\";\n\nconst { Option } = Select;\n\nexport interface StaffFormFields {\n  email: string;\n  role: string;\n}\ninterface Props {\n  data: StaffFormFields;\n  onChange: (data: StaffFormFields) => void;\n}\n\nexport default function CreateStaffForm({\n  data,\n  onChange,\n}: Props): ReactElement {\n  const [form] = Form.useForm();\n\n  return (\n    <Form form={form} name=\"control-hooks\">\n      <Form.Item\n        name=\"email\"\n        label=\"Email\"\n        rules={[{ type: \"email\", required: true }]}\n      >\n        <Input\n          placeholder=\"Email\"\n          prefix={<SendOutlined className=\"site-form-item-icon\" />}\n          value={data.email}\n          onChange={(event) => onChange({ ...data, email: event.target.value })}\n        />\n      </Form.Item>\n      <Form.Item name=\"gender\" label=\"Role\" rules={[{ required: true }]}>\n        <Select\n          placeholder=\"Select a role\"\n          value={data.role}\n          onChange={(value) => onChange({ ...data, role: value })}\n          allowClear\n        >\n          <Option value=\"staff\">Staff</Option>\n          <Option value=\"investigator\">Investigator</Option>\n          <Option value=\"admin\">Admin</Option>\n        </Select>\n      </Form.Item>\n    </Form>\n  );\n}\n","import React, { useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { RootState } from \"src/redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { updateStaff } from \"src/redux/modules/staff\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\nimport { Table, Tag, Space, Layout, Divider, Modal, Button } from \"antd\";\nimport { selectAllStaff } from \"src/redux/selectors\";\nimport { genFullName } from \"src/utils\";\nimport CreateStaffForm, { StaffFormFields } from \"./CreateStaffForm\";\nimport Header from \"src/components/Header/Header\";\nimport Avatar from \"src/components/Avatar\";\n\nconst { Column } = Table;\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  staff: selectAllStaff(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ updateStaff }, dispatch);\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst StaffContainer: React.FC<PropsFromRedux> = ({ staff, updateStaff }) => {\n  const [modalType, setModalType] = useState<\"create\" | \"edit\" | null>(null);\n  const [selected, setSelected] = useState<Staff>();\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [formData, setFormData] = useState<StaffFormFields>({\n    email: \"\",\n    role: \"\",\n  });\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    switch (modalType) {\n      case \"edit\":\n        if (selected) break;\n    }\n\n    setConfirmLoading(false);\n  };\n\n  return (\n    <Content>\n      <Header\n        title=\"Staff\"\n        subtitle=\"Manage your staff, edit their access permissions, and add new members.\"\n        // extra={[\n        //   <Button\n        //     onClick={() => setModalType(\"create\")}\n        //     icon={<UserAddOutlined />}\n        //   >\n        //     Add Staff Member\n        //   </Button>,\n        // ]}\n      />\n      <div style={WRAPPER_STYLE}>\n        <Table dataSource={staff}>\n          <Column\n            title=\"\"\n            key=\"profileImagePath\"\n            render={(_text, record: Staff) => (\n              <>\n                <Avatar\n                  src={record.profileImagePath}\n                  fallback={genFullName(record)}\n                  size={48}\n                />\n              </>\n            )}\n          />\n          <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\n          <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\n          <Column\n            title=\"Role\"\n            dataIndex=\"role\"\n            key=\"role\"\n            render={(role) => (\n              <>\n                <Tag color=\"blue\" key={role}>\n                  {role || \"Operator\"}\n                </Tag>\n              </>\n            )}\n          />\n          <Column\n            title=\"\"\n            key=\"edit\"\n            render={(_text, record: Staff) => (\n              <Button\n                onClick={() => {\n                  setSelected(record);\n                  setModalType(\"edit\");\n                }}\n              >\n                Edit\n              </Button>\n            )}\n          />\n        </Table>\n      </div>\n      {/* </Space> */}\n      <Modal\n        title=\"Add Staff\"\n        visible={modalType === \"create\"}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={() => setModalType(null)}\n      >\n        <CreateStaffForm data={formData} onChange={setFormData} />\n      </Modal>\n      <Modal\n        title=\"Edit Staff\"\n        visible={modalType === \"edit\"}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={() => setModalType(null)}\n      >\n        {selected && (\n          <Space direction=\"vertical\" size=\"small\" style={{ width: \"100%\" }}>\n            <span>Name: {genFullName(selected)}</span>\n            <span>Role: {selected.role}</span>\n            <span>Email: {selected.email}</span>\n            <Divider />\n          </Space>\n        )}\n      </Modal>\n    </Content>\n  );\n};\n\nexport default connector(StaffContainer);\n","import React, { useEffect, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { selectAllInmates } from \"src/redux/selectors\";\nimport { Layout, Table, Button, Input } from \"antd\";\nimport { RootState } from \"src/redux\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\nimport { push } from \"connected-react-router\";\nimport Header from \"src/components/Header/Header\";\nimport { Inmate } from \"src/typings/Inmate\";\nimport { EyeOutlined } from \"@ant-design/icons\";\nimport { genFullName, isSubstring } from \"src/utils\";\nimport Avatar from \"src/components/Avatar\";\n\nconst { Content } = Layout;\n\nconst mapStateToProps = (state: RootState) => ({\n  inmates: selectAllInmates(state),\n});\n\nconst mapDispatchToProps = { push };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst UnconnectedInmateContainer: React.FC<PropsFromRedux> = ({\n  inmates,\n  push,\n}) => {\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [filteredInmates, setFilteredInmates] = useState<Inmate[]>([]);\n\n  useEffect(() => {\n    setFilteredInmates(\n      searchQuery.length\n        ? inmates.filter((i) =>\n            isSubstring(searchQuery, i.inmateIdentification)\n          )\n        : inmates\n    );\n  }, [inmates, searchQuery]);\n\n  const columns = [\n    {\n      title: \"\",\n      // dataIndex: \"profileImagePath\",\n      editable: false,\n      render: (_text: string, inmate: Inmate) => (\n        <>\n          <Avatar\n            fallback={genFullName(inmate)}\n            src={inmate.profileImagePath}\n            size={48}\n          />\n        </>\n      ),\n    },\n    {\n      title: \"Unique ID\",\n      dataIndex: \"inmateIdentification\",\n      editable: true,\n    },\n    {\n      title: \"First Name\",\n      dataIndex: \"firstName\",\n      editable: true,\n    },\n    {\n      title: \"Last Name\",\n      dataIndex: \"lastName\",\n      editable: true,\n    },\n    {\n      title: \"Location\",\n      dataIndex: \"location\",\n      editable: true,\n    },\n    {\n      title: \"\",\n      key: \"action\",\n      editable: false,\n      render: (_text: string, inmate: Inmate) => (\n        <>\n          <Button\n            onClick={() => push(`/members/${inmate.id}`)}\n            icon={<EyeOutlined />}\n          >\n            View\n          </Button>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <Content>\n      <Header\n        title=\"Incarcerated People\"\n        subtitle=\"Manage the members of your facility, access detailed information, and edit their info as needed.\"\n        extra={[\n          <Input.Group compact className=\"w-screen\">\n            <Input.Search\n              className=\"w-1/4\"\n              placeholder={`Search by Incarcerated Person ID...`}\n              allowClear\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              onSearch={(value) => {\n                setSearchQuery(value);\n              }}\n            />\n          </Input.Group>,\n        ]}\n      />\n      <div style={WRAPPER_STYLE}>\n        <Table dataSource={filteredInmates} columns={columns} />\n      </div>\n    </Content>\n  );\n};\n\nexport default connector(UnconnectedInmateContainer);\n","import { Col, Space, Typography } from \"antd\";\nimport React from \"react\";\nimport Avatar from \"src/components/Avatar\";\nimport { MemberType } from \"src/typings/Common\";\nimport { Contact } from \"src/typings/Contact\";\nimport { Inmate } from \"src/typings/Inmate\";\nimport { genFullName } from \"src/utils\";\n\ninterface Props {\n  person: Inmate | Contact;\n  relationship: string;\n  navigate: (path: string) => void;\n  type: MemberType;\n}\n\nconst ConnectionItem: React.FC<Props> = ({\n  person,\n  relationship,\n  type,\n  navigate,\n}) => {\n  const name = genFullName(person);\n  return (\n    <Col span={8}>\n      <div\n        onClick={() =>\n          navigate(\n            `/${type === \"inmate\" ? \"members\" : \"contacts\"}/${person.id}`\n          )\n        }\n      >\n        <Space direction=\"vertical\">\n          <Avatar src={person.profileImagePath} fallback={name} size={48} />\n          <Typography.Text>{name}</Typography.Text>\n          <Typography.Text type=\"secondary\">{relationship}</Typography.Text>\n        </Space>\n      </div>\n    </Col>\n  );\n};\n\nexport default ConnectionItem;\n","import { Card, Empty, Row } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { MemberType } from \"src/typings/Common\";\nimport { Connection } from \"src/typings/Connection\";\nimport ConnectionItem from \"./ConnectionItem\";\n\ninterface Props {\n  connections: Connection[];\n  type: MemberType;\n  navigate: (path: string) => void;\n}\n\nconst ConnectionsList: React.FC<Props> = ({\n  connections,\n  type,\n  navigate,\n}: Props) => {\n  const [filteredConnections, setFilteredConnections] = useState<Connection[]>(\n    []\n  );\n  const [activeTab, setActiveTab] = useState(\"active\");\n  const tabList = [\n    {\n      key: \"active\",\n      tab: \"Active\",\n    },\n    {\n      key: \"pending\",\n      tab: \"Pending\",\n    },\n    {\n      key: \"rejected\",\n      tab: \"Rejected\",\n    },\n  ];\n\n  useEffect(() => {\n    setFilteredConnections(connections.filter((c) => c.status === activeTab));\n  }, [connections, activeTab]);\n\n  return (\n    <Card\n      title=\"Connections\"\n      tabList={tabList}\n      activeTabKey={activeTab}\n      onTabChange={(key) => setActiveTab(key)}\n    >\n      {!connections.length && <Empty description=\"No Connections\" />}\n\n      <Row justify=\"space-between\">\n        {filteredConnections.map((connection) => {\n          const person =\n            type === \"inmate\" ? connection.contact : connection.inmate;\n          return (\n            <ConnectionItem\n              person={person}\n              relationship={connection.relationship}\n              navigate={navigate}\n              type={type}\n            />\n          );\n        })}\n      </Row>\n    </Card>\n  );\n};\n\nexport default ConnectionsList;\n","import { Descriptions, Image, PageHeader } from \"antd\";\nimport React from \"react\";\nimport { MemberType } from \"src/typings/Common\";\nimport { Contact } from \"src/typings/Contact\";\nimport { Inmate } from \"src/typings/Inmate\";\nimport { genFullName } from \"src/utils\";\nimport { format } from \"date-fns\";\nimport { IdentificationImages } from \"src/typings/IdentificationImage\";\ninterface BaseProps {\n  facilityName: string;\n  idImages?: IdentificationImages;\n  type: MemberType;\n  persona: Inmate | Contact;\n}\n\n// TODO: figure out why this is noot working\n// interface InmateProps extends BaseProps {\n//   type: \"inmate\";\n//   persona: Inmate;\n// }\n\n// interface ContactProps extends BaseProps {\n//   type: \"contact\";\n//   persona: Contact;\n// }\n\ntype Props = BaseProps;\n\nconst ProfileHeader: React.FC<Props> = ({\n  type,\n  facilityName,\n  persona,\n  idImages,\n}) => {\n  const routes = [\n    {\n      path: \"/\",\n      breadcrumbName: facilityName,\n    },\n    {\n      path: \"/members\",\n      breadcrumbName: type === \"contact\" ? \"Visitors\" : \"Incarcerated People\",\n    },\n    {\n      path: \"/\",\n      breadcrumbName: genFullName(persona),\n    },\n  ];\n\n  const frontId =\n    idImages && idImages.frontIdFile ? idImages.frontIdFile.url : \"\";\n  const backId = idImages && idImages.backIdFile ? idImages.backIdFile.url : \"\";\n  const selfieId =\n    idImages && idImages.selfieIdFile ? idImages.selfieIdFile.url : \"\";\n\n  const renderItems = () => {\n    switch (type) {\n      case \"inmate\":\n        return (\n          <Descriptions size=\"small\" column={3} bordered>\n            <Descriptions.Item label=\"First Name\">\n              {persona.firstName}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Last Name\">\n              {persona.lastName}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Unique ID\">\n              {(persona as Inmate).inmateIdentification}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"DOB\">\n              {format(new Date((persona as Inmate).dateOfBirth), \"yyyy-MM-dd\")}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Call Quota\">\n              {(persona as Inmate).quota}\n            </Descriptions.Item>\n          </Descriptions>\n        );\n      case \"contact\":\n        return (\n          <Descriptions size=\"small\" column={3} bordered>\n            <Descriptions.Item label=\"First Name\">\n              {persona.firstName}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Last Name\">\n              {persona.lastName}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Last Name\">\n              {(persona as Contact).email}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Front ID\">\n              <Image width={200} src={frontId} />\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Back ID\">\n              <Image width={200} src={backId} />\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Selfie\">\n              <Image width={200} src={selfieId} />\n            </Descriptions.Item>\n          </Descriptions>\n        );\n    }\n  };\n\n  return (\n    <PageHeader\n      ghost={false}\n      onBack={() => window.history.back()}\n      title={genFullName(persona)}\n      breadcrumb={{ routes }}\n      style={{ marginBottom: 32 }}\n    >\n      {renderItems()}\n    </PageHeader>\n  );\n};\n\nexport default ProfileHeader;\n","import { ClockCircleOutlined } from \"@ant-design/icons\";\nimport { Timeline, Typography } from \"antd\";\nimport { format } from \"date-fns\";\nimport React from \"react\";\nimport { Call } from \"src/typings/Call\";\nimport { MemberType } from \"src/typings/Common\";\nimport { getCallContactsFullNames, getCallInmatesFullNames } from \"src/utils\";\n\ninterface Props {\n  type: MemberType;\n  call: Call;\n  navigate: (path: string) => void;\n}\n\nexport const CallTimelineItem = ({ call, type, navigate }: Props) => {\n  const renderItem = () => {\n    const names = (\n      <Typography.Text strong>\n        {type === \"inmate\"\n          ? getCallContactsFullNames(call)\n          : getCallInmatesFullNames(call)}\n      </Typography.Text>\n    );\n\n    const timestamp = format(new Date(call.scheduledStart), \"MM/dd HH:mm\");\n\n    switch (call.status) {\n      case \"pending_approval\":\n        return (\n          <Timeline.Item label={timestamp} color=\"yellow\">\n            Call with {names} is pending approval\n          </Timeline.Item>\n        );\n      case \"scheduled\":\n        return (\n          <Timeline.Item label={timestamp} color=\"yellow\">\n            Call scheduled with {names}\n          </Timeline.Item>\n        );\n      case \"cancelled\":\n        return (\n          <Timeline.Item label={timestamp} color=\"red\">\n            Call with {names} was cancelled\n          </Timeline.Item>\n        );\n      case \"no_show\":\n        return (\n          <Timeline.Item label={timestamp} color=\"red\">\n            Did not show up for call with {names}\n          </Timeline.Item>\n        );\n      case \"missing_monitor\":\n      case \"live\":\n        return (\n          <Timeline.Item label={timestamp} color=\"green\">\n            Call happening with {names}\n          </Timeline.Item>\n        );\n      case \"terminated\":\n      case \"ended\":\n        return call.recordingStatus === \"done\" ? (\n          <Timeline.Item\n            label={format(new Date(call.scheduledStart), \"MM/dd HH:mm\")}\n          >\n            {/* expand this to include other cases */}\n            <Typography.Link onClick={() => navigate(`/call/${call.id}`)}>\n              Called {names}\n            </Typography.Link>\n          </Timeline.Item>\n        ) : (\n          <Timeline.Item\n            dot={<ClockCircleOutlined style={{ fontSize: \"16px\" }} />}\n            label={timestamp}\n          >\n            {/* expand this to include other cases */}\n            <Typography.Link onClick={() => navigate(`/call/${call.id}`)}>\n              Processsing call with {names}\n            </Typography.Link>\n          </Timeline.Item>\n        );\n      default:\n        return <div />;\n    }\n  };\n\n  return renderItem();\n};\n","import CallTimeline from \"./CallTimeline\";\n\nexport default CallTimeline;\n","import { Card, Empty, Timeline } from \"antd\";\nimport React from \"react\";\nimport { Call } from \"src/typings/Call\";\nimport { MemberType } from \"src/typings/Common\";\nimport { CallTimelineItem } from \"./CallTimelineItem\";\n\ninterface Props {\n  calls: Call[];\n  type: MemberType;\n  navigate: (path: string) => void;\n}\n\nconst CallTimeline: React.FC<Props> = ({ calls, type, navigate }) => {\n  return (\n    <Card\n      title=\"Call Activity\"\n      style={{ maxHeight: \"60vh\", overflowY: \"scroll\" }}\n    >\n      {!calls.length && <Empty description=\"No Calls\" />}\n      <Timeline mode={\"right\"}>\n        {calls.map((call) => (\n          <CallTimelineItem\n            key={call.id}\n            call={call}\n            type={type}\n            navigate={navigate}\n          />\n        ))}\n      </Timeline>\n    </Card>\n  );\n};\n\nexport default CallTimeline;\n","import Profile from \"./Profile\";\n\nexport default Profile;\n","import { Layout, Row, Col } from \"antd\";\nimport React from \"react\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\nimport { Call } from \"src/typings/Call\";\nimport { MemberType } from \"src/typings/Common\";\nimport { Connection } from \"src/typings/Connection\";\nimport { Contact } from \"src/typings/Contact\";\nimport { IdentificationImages } from \"src/typings/IdentificationImage\";\nimport { Inmate } from \"src/typings/Inmate\";\nimport ConnectionsList from \"./Connections/ConnectionsList\";\nimport ProfileHeader from \"./ProfileHeader\";\nimport CallTimeline from \"./Timeline\";\n\ninterface Props {\n  calls: Call[];\n  type: MemberType;\n  connections: Connection[];\n  facilityName: string;\n  idImages?: IdentificationImages;\n  persona: Inmate | Contact;\n  navigate: (path: string) => void;\n}\n\nconst Profile: React.FC<Props> = ({\n  calls,\n  connections,\n  type,\n  facilityName,\n  idImages,\n  persona,\n  navigate,\n}) => {\n  return (\n    <Layout>\n      <Layout.Content style={WRAPPER_STYLE}>\n        <ProfileHeader\n          type={type}\n          persona={persona}\n          facilityName={facilityName}\n          idImages={idImages}\n        />\n        <Row justify=\"space-between\" gutter={12}>\n          <Col span={16}>\n            <CallTimeline calls={calls} type={type} navigate={navigate} />\n          </Col>\n          <Col span={8}>\n            <ConnectionsList\n              connections={connections}\n              type={type}\n              navigate={navigate}\n            />\n          </Col>\n        </Row>\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default Profile;\n","import { useState, useEffect } from \"react\";\nimport { loadAllCallEntities } from \"src/utils\";\nimport {\n  selectAllCalls,\n  selectContactEntities,\n  selectInmateEntities,\n  selectKioskEntities,\n} from \"src/redux/selectors\";\nimport { useAppSelector } from \"src/redux\";\nimport { Call, CallStatus } from \"src/typings/Call\";\n\nexport function useCalls() {\n  const [calls, setCalls] = useState<Call[]>([]);\n  const baseCalls = useAppSelector(selectAllCalls);\n  const contactEnts = useAppSelector(selectContactEntities);\n  const inmateEnts = useAppSelector(selectInmateEntities);\n  const kioskEnts = useAppSelector(selectKioskEntities);\n\n  useEffect(() => {\n    setCalls(\n      loadAllCallEntities(baseCalls, contactEnts, inmateEnts, kioskEnts)\n    );\n  }, [baseCalls, inmateEnts, contactEnts, kioskEnts]);\n\n  return calls;\n}\n\nexport function useCallsWithStatus(status: CallStatus) {\n  const [calls, setCalls] = useState<Call[]>([]);\n  const baseCalls = useAppSelector(selectAllCalls);\n  const contactEnts = useAppSelector(selectContactEntities);\n  const inmateEnts = useAppSelector(selectInmateEntities);\n  const kioskEnts = useAppSelector(selectKioskEntities);\n\n  useEffect(() => {\n    let pendingCalls = baseCalls.filter((call) => call.status === status);\n    if (status === \"live\") {\n      pendingCalls = pendingCalls.filter(\n        (c) => new Date(c.scheduledEnd) >= new Date()\n      );\n    }\n    setCalls(\n      loadAllCallEntities(pendingCalls, contactEnts, inmateEnts, kioskEnts)\n    );\n  }, [baseCalls, inmateEnts, contactEnts, kioskEnts, status]);\n\n  return calls;\n}\n\nexport function useCallCountWithStatus(status: CallStatus) {\n  const [count, setCount] = useState(0);\n  const baseCalls = useAppSelector(selectAllCalls);\n\n  useEffect(() => {\n    const callsWithStatus = baseCalls.filter((call) => call.status === status);\n    setCount(callsWithStatus.length);\n  }, [baseCalls, status]);\n\n  return count;\n}\n\nexport function useInmateCalls(id: string) {\n  const [calls, setCalls] = useState<Call[]>([]);\n  const baseCalls = useAppSelector(selectAllCalls);\n  const contactEnts = useAppSelector(selectContactEntities);\n  const inmateEnts = useAppSelector(selectInmateEntities);\n  const kioskEnts = useAppSelector(selectKioskEntities);\n\n  useEffect(() => {\n    const baseInmateCalls = baseCalls.filter((call) =>\n      call.inmateIds.includes(id)\n    );\n    setCalls(\n      loadAllCallEntities(baseInmateCalls, contactEnts, inmateEnts, kioskEnts)\n    );\n  }, [baseCalls, inmateEnts, contactEnts, kioskEnts, id]);\n\n  return calls;\n}\n","import React, { ReactElement, useEffect } from \"react\";\nimport { RootState, useAppDispatch } from \"src/redux\";\nimport { useSelector } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { selectInmateById } from \"src/redux/selectors\";\nimport { useInmateConnections } from \"src/hooks/useConnections\";\nimport Profile from \"src/components/Profile\";\nimport { fetchCalls } from \"src/redux/modules/call\";\nimport { useInmateCalls } from \"src/hooks/useCalls\";\nimport { push } from \"connected-react-router\";\n\ntype TParams = { id: string };\n\nfunction InmatePage({ match }: RouteComponentProps<TParams>): ReactElement {\n  const facilityName = useSelector(\n    (state: RootState) => state.facilities.selected?.name\n  );\n\n  const inmateId = match.params.id;\n  const inmate = useSelector((state: RootState) =>\n    selectInmateById(state, inmateId)\n  );\n  const connections = useInmateConnections(inmate?.id || \"\");\n  const calls = useInmateCalls(inmate?.id || \"\");\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCalls({ \"inmateParticipants.inmateId\": inmateId }));\n  }, [inmateId, dispatch]);\n\n  if (!inmate || !facilityName) return <div />;\n\n  return (\n    <Profile\n      connections={connections}\n      persona={inmate}\n      facilityName={facilityName}\n      calls={calls}\n      type=\"inmate\"\n      navigate={(path: string) => dispatch(push(path))}\n    />\n  );\n}\n\nexport default InmatePage;\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { RootState, useAppDispatch } from \"src/redux\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  getCallsInfo,\n  selectContactById,\n  selectInmateCallsById,\n} from \"src/redux/selectors\";\nimport { push } from \"connected-react-router\";\nimport { useContactConnections } from \"src/hooks/useConnections\";\nimport Profile from \"src/components/Profile\";\nimport { fetchContactIdImages } from \"src/redux/modules/contact\";\nimport { IdentificationImages } from \"src/typings/IdentificationImage\";\n\ntype TParams = { id: string };\n\nconst mapStateToProps = (\n  state: RootState,\n  ownProps: RouteComponentProps<TParams>\n) => ({\n  calls: getCallsInfo(\n    state,\n    selectInmateCallsById(state, ownProps.match.params.id) || []\n  ),\n});\n\nconst mapDispatchToProps = { push };\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nfunction ContactPage({\n  calls,\n  match,\n}: PropsFromRedux & RouteComponentProps<TParams>): ReactElement {\n  const [idImages, setIdImages] = useState<IdentificationImages>({\n    frontIdFile: null,\n    backIdFile: null,\n    selfieIdFile: null,\n  });\n  const facilityName = useSelector(\n    (state: RootState) => state.facilities.selected?.name\n  );\n\n  const dispatch = useAppDispatch();\n\n  const contact = useSelector((state: RootState) =>\n    selectContactById(state, match.params.id)\n  );\n\n  // TODO: Implement a way to cache these files: https://github.com/Ameelio/connect-doc-client/issues/76\n  useEffect(() => {\n    const getContactImages = async () => {\n      if (contact) {\n        const images = await dispatch(fetchContactIdImages(contact.id));\n        if (images.payload) {\n          setIdImages(images.payload as IdentificationImages);\n        }\n      }\n    };\n    getContactImages();\n  }, [contact, dispatch]);\n\n  const connections = useContactConnections(contact?.id || \"\");\n\n  if (!contact || !facilityName) return <div />;\n\n  return (\n    <Profile\n      connections={connections}\n      persona={contact}\n      facilityName={facilityName}\n      idImages={idImages}\n      calls={calls}\n      type=\"contact\"\n      navigate={(path: string) => dispatch(push(path))}\n    />\n  );\n}\n\nexport default connector(ContactPage);\n","import { Card, Statistic } from \"antd\";\nimport React, { ReactElement } from \"react\";\n\ninterface Props {\n  title: string;\n  value: string | number;\n  suffix: string;\n  prefix: JSX.Element;\n}\n\nexport default function MetricCard({\n  title,\n  value,\n  suffix,\n  prefix,\n}: Props): ReactElement {\n  return (\n    <Card>\n      <Statistic title={title} value={value} prefix={prefix} suffix={suffix} />\n    </Card>\n  );\n}\n","import { Card } from \"antd\";\nimport React, { ReactElement } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { CONTAINER_BORDER_RADIUS } from \"src/styles/styles\";\n\ninterface Props {\n  title: string;\n  labels: string[];\n  data: number[];\n  backgroundColor: string[];\n  hoverBackgroundColor: string[];\n}\nexport default function DonutChart({\n  title,\n  labels,\n  data,\n  backgroundColor,\n  hoverBackgroundColor,\n}: Props): ReactElement {\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        data,\n        backgroundColor,\n        hoverBackgroundColor,\n      },\n    ],\n  };\n\n  return (\n    <Card title={title} style={CONTAINER_BORDER_RADIUS}>\n      <Doughnut data={chartData} />\n    </Card>\n  );\n}\n","import { Card } from \"antd\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst COLOR = \"rgba(0, 137, 255, 1)\";\nconst BG = \"rgba(0, 137, 255, 0.4)\";\nconst DARKER_COLOR = \"rgba(2, 117, 216, 1)\";\n\ninterface Props {\n  title: string;\n  labels: string[];\n  label: string;\n  data: number[];\n}\n\nconst LineChart: React.FC<Props> = ({ title, label, labels, data }) => {\n  const chartData = {\n    labels,\n    datasets: [\n      {\n        label,\n        lineTension: 0.1,\n        backgroundColor: BG,\n        borderColor: COLOR,\n        borderCapStyle: \"butt\",\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: \"miter\",\n        pointBorderColor: COLOR,\n        pointBackgroundColor: \"#fff\",\n        pointBorderWidth: 5,\n        pointHoverRadius: 8,\n        pointHoverBackgroundColor: COLOR,\n        pointHoverBorderColor: DARKER_COLOR,\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data,\n      },\n    ],\n  };\n\n  return (\n    <Card title={title}>\n      <Line data={chartData} />\n    </Card>\n  );\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport { Svg, Path, Polygon } from \"@react-pdf/renderer\";\n\ntype HexCode = string;\ninterface Props {\n  width?: number;\n  height?: number;\n  color?: string;\n}\nconst Logo = ({ width, height, color }: Props) => {\n  const hex = color || \"#424242\";\n  return (\n    <Svg\n      viewBox=\"0 0 666.85 257.93\"\n      style={{ width: width || 100, height: height || 30 }}\n    >\n      <Path\n        fill={hex}\n        stroke=\"#fff\"\n        strokeWidth={3}\n        d=\"M111.83,48.88h0l-8.38,20.22L98.27,81.58l0,0v.08L91.48,98h0L90,101.55h0l-2.9,7-.6-2.23-.64-2.43-4-15.27L71,47.66l-1.6-6.1L63.79,20.1Z\"\n      />\n      <Polygon\n        fill={hex}\n        stroke=\"#fff\"\n        strokeWidth={3}\n        opacity={0.7}\n        points=\"87.09 108.56 85.99 107.12 84.4 105.05 77.65 96.2 71.96 88.74 50.31 60.32 41.21 48.39 71.04 47.66 81.83 88.63 85.85 103.9 86.49 106.33 87.09 108.56\"\n      />\n      <Polygon\n        fill={hex}\n        stroke=\"#fff\"\n        strokeWidth={3}\n        points=\"67.95 154.72 59.71 174.61 29.58 171.5 58.55 149.76 64.48 145.32 75.17 137.31 67.96 154.69 67.95 154.72\"\n      />\n      <Path\n        fill={hex}\n        stroke=\"#fff\"\n        strokeWidth={3}\n        d=\"M134.41,137.69h0L81.75,151.16l-2.83.73-11,2.8,7.21-17.38h0l2.27-5.48h0l9.54-23,.1-.23h0l2.9-7h0L91.47,98h0l6.75-16.29h0l0-.09,5.17-12.47,8.38-20.22h0l4,15.53,4.51,17.78,4.95,19.43,3,11.89h0Z\"\n      />\n      <Polygon\n        fill={hex}\n        stroke=\"#fff\"\n        strokeWidth={3}\n        points=\"161.52 72.3 156.34 84.79 151.4 96.73 147.81 105.36 146.74 107.93 146.74 107.94 134.41 137.69 128.27 113.52 128.26 113.52 125.24 101.63 120.29 82.2 120.3 82.19 121.87 81.82 141.5 77.1 160.2 72.62 161.52 72.3\"\n      />\n      <Polygon\n        fill={hex}\n        stroke=\"#fff\"\n        strokeWidth={3}\n        opacity={0.7}\n        points=\"187.8 89.91 179.44 91.47 170.42 93.17 170.41 93.16 151.4 96.73 156.34 84.79 161.52 72.3 162.14 72.71 187.8 89.91\"\n      />\n      <Path\n        fill=\"#1a1a1a\"\n        d=\"M234.77,211.91h-17.2L209.18,190H163l-8.4,21.88H137.37l38.93-98.23h19.54Zm-66-36.73H203.4l-17.33-45.27Z\"\n      />\n      <Path\n        fill=\"#1a1a1a\"\n        d=\"M259.67,211.91H245V161.28h-5.64V148.07h11.83l6.19,6.2c5.5-4.54,12.24-7.43,18.57-7.43a20.61,20.61,0,0,1,17.34,8.66,31.53,31.53,0,0,1,21-8.66c11.7,0,22.43,8,22.43,26.55v38.52H322V173.39c0-8.39-4.54-12.93-11.28-12.93-7.57,0-12.52,4.54-12.52,10.59v40.86H283.61V173.39c0-8.39-4.68-12.93-11.29-12.93-7.42,0-12.65,4.4-12.65,10.18Z\"\n      />\n      <Path\n        fill=\"#1a1a1a\"\n        d=\"M393.53,190.72l12.1,6.61c-4.95,8.39-14.17,16.09-26.82,16.09-18.3,0-31.37-15.41-31.37-33.29s13.07-33.57,31.23-33.57,29.44,15.27,30,31.92l-5.5,5.36H362.3c.82,9.5,8.11,15.82,16.51,15.82C384.58,199.66,390.36,196,393.53,190.72ZM363,172.15h30.95c-1-7.15-7.43-12.52-15.27-12.52A15.72,15.72,0,0,0,363,172.15Z\"\n      />\n      <Path\n        fill=\"#1a1a1a\"\n        d=\"M461.76,190.72l12.11,6.61c-4.95,8.39-14.17,16.09-26.83,16.09-18.3,0-31.37-15.41-31.37-33.29s13.07-33.57,31.23-33.57,29.44,15.27,30,31.92l-5.5,5.36H430.53c.83,9.5,8.12,15.82,16.51,15.82C452.82,199.66,458.6,196,461.76,190.72Zm-30.54-18.57h30.95c-1-7.15-7.42-12.52-15.27-12.52A15.72,15.72,0,0,0,431.22,172.15Z\"\n      />\n      <Path\n        fill=\"#1a1a1a\"\n        d=\"M489.41,113.68l4.82-5h10.18V197.6h5.64v14.31H495.6l-6.19-6.33Z\"\n      />\n      <Path\n        fill=\"#1a1a1a\"\n        d=\"M540.73,211.91H526V161.28h-5.5V148.07h15l5.23,5.23ZM532,112a10.49,10.49,0,0,1,10.39,10.39A10.37,10.37,0,0,1,532,132.67a10.25,10.25,0,0,1-10.25-10.26A10.37,10.37,0,0,1,532,112Z\"\n      />\n      <Path\n        fill=\"#1a1a1a\"\n        d=\"M620,180a33.36,33.36,0,1,1-33.29-33.29A33.35,33.35,0,0,1,620,180Zm-15,0c0-10.32-7.71-19.12-18.3-19.12s-18.44,8.8-18.44,19.12,7.85,19.26,18.44,19.26S605,190.31,605,180Z\"\n      />\n    </Svg>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport { Text, View, StyleSheet } from \"@react-pdf/renderer\";\nimport Logo from \"./Logo\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 16,\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  extraColumn: {\n    flexDirection: \"column\",\n    alignSelf: \"flex-end\",\n  },\n  detailColumn: {\n    flexDirection: \"column\",\n  },\n  name: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  subtitle: {\n    fontSize: 10,\n  },\n});\n\ninterface Props {\n  title: string;\n  subtitle: string;\n}\n\nconst Header = ({ title, subtitle }: Props) => (\n  <View style={styles.container} fixed>\n    <View style={styles.detailColumn}>\n      <View style={styles.header}>\n        <Text style={styles.name}>{title}</Text>\n      </View>\n      <Text style={styles.subtitle}>{subtitle}</Text>\n    </View>\n    <View style={styles.extraColumn}>\n      <Logo width={180} height={45} />\n    </View>\n  </View>\n);\n\nexport default Header;\n","import { StyleSheet, Text, View } from \"@react-pdf/renderer\";\nimport React from \"react\";\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    backgroundColor: \"#CECECE\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    paddingVertical: 4,\n  },\n  title: {\n    fontWeight: \"semibold\",\n    fontSize: 18,\n  },\n});\n\nconst SectionHeader = ({ title }: { title: string }) => (\n  <View style={styles.container}>\n    <Text style={styles.title}>{title}</Text>\n  </View>\n);\n\nexport default SectionHeader;\n","import React from \"react\";\nimport { Svg, Path } from \"@react-pdf/renderer\";\n\nexport const CameraIcon = () => {\n  return (\n    <Svg width=\"18\" height=\"12\" viewBox=\"0 0 18 12\">\n      <Path\n        d=\"M14 4.5V1C14 0.45 13.55 0 13 0H1C0.45 0 0 0.45 0 1V11C0 11.55 0.45 12 1 12H13C13.55 12 14 11.55 14 11V7.5L16.29 9.79C16.92 10.42 18 9.97 18 9.08V2.91C18 2.02 16.92 1.57 16.29 2.2L14 4.5Z\"\n        fill=\"#757575\"\n      />\n    </Svg>\n  );\n};\n\nexport const ContactIcon = () => {\n  return (\n    <Svg width=\"16\" height=\"20\" viewBox=\"0 0 16 20\">\n      <Path\n        d=\"M9.17 0H2C0.9 0 0 0.9 0 2V18C0 19.1 0.9 20 2 20H14C15.1 20 16 19.1 16 18V6.83C16 6.3 15.79 5.79 15.41 5.42L10.58 0.59C10.21 0.21 9.7 0 9.17 0ZM8 8C9.1 8 10 8.9 10 10C10 11.1 9.1 12 8 12C6.9 12 6 11.1 6 10C6 8.9 6.9 8 8 8ZM12 16H4V15.43C4 14.62 4.48 13.9 5.22 13.58C6.07 13.21 7.01 13 8 13C8.99 13 9.93 13.21 10.78 13.58C11.52 13.9 12 14.62 12 15.43V16Z\"\n        fill=\"#757575\"\n      />\n    </Svg>\n  );\n};\n\nexport const PersonIcon = () => {\n  return (\n    <Svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n      <Path\n        d=\"M8 8C10.21 8 12 6.21 12 4C12 1.79 10.21 0 8 0C5.79 0 4 1.79 4 4C4 6.21 5.79 8 8 8ZM8 10C5.33 10 0 11.34 0 14V15C0 15.55 0.45 16 1 16H15C15.55 16 16 15.55 16 15V14C16 11.34 10.67 10 8 10Z\"\n        fill=\"#757575\"\n      />\n    </Svg>\n  );\n};\n\nexport const LogoIconBW = () => {\n  return (\n    <Svg>\n      <Path\n        d=\"M0.153625 4.10988L3.68013 3.83725L5.99198 11.435L0.153625 4.10988Z\"\n        fill=\"#424242\"\n      />\n      <Path\n        d=\"M2.91382 0.266663L6.37 11.6285L9.28279 3.83727L2.91382 0.266663Z\"\n        fill=\"#424242\"\n      />\n      <Path\n        d=\"M0 19.3061L5.1687 14.8984L3.41543 19.5875L0 19.3061Z\"\n        fill=\"#424242\"\n      />\n      <Path\n        d=\"M9.37788 4.4393L4.2843 18.0621L8.03616 17.1051L12.8564 15.8755L9.37788 4.4393Z\"\n        fill=\"#424242\"\n      />\n      <Path\n        d=\"M10.8826 8.3353L16.0888 7.00812L12.9954 15.2814L10.8826 8.3353Z\"\n        fill=\"#424242\"\n      />\n      <Path\n        d=\"M15.245 10.1198L16.4421 6.91776L19.959 8.90373L15.245 10.1198Z\"\n        fill=\"#424242\"\n      />\n    </Svg>\n  );\n};\n","import React from \"react\";\nimport { Text, View, StyleSheet } from \"@react-pdf/renderer\";\nimport { genFullName } from \"src/utils\";\nimport { Call } from \"src/typings/Call\";\nimport { ContactIcon, CameraIcon, PersonIcon } from \"src/components/pdf/Icons\";\nimport format from \"date-fns/format\";\nimport { LogoIconBW } from \"src/components/pdf/Icons\";\n\ninterface Props {\n  calls: Call[];\n  canViewDetails: boolean;\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  card: {\n    borderBottomStyle: \"solid\",\n    borderBottomWidth: 2,\n    borderBottomColor: \"#EEEEEE\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  header: {\n    backgroundColor: \"#EEEEEE\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    flexGrow: 0,\n    paddingVertical: 4,\n    paddingHorizontal: 16,\n  },\n  headerText: {\n    fontWeight: \"semibold\",\n    fontSize: 16,\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: 16,\n  },\n  rowFirstItem: {\n    flex: 1,\n    flexShrink: 0,\n    flexDirection: \"row\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  rowItem: {\n    flex: 1,\n    flexShrink: 0,\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  itemTitle: {\n    textTransform: \"uppercase\",\n    fontSize: 12,\n    fontWeight: \"light\",\n  },\n  itemBody: {\n    fontWeight: \"semibold\",\n    fontSize: 12,\n  },\n  icon: {\n    marginRight: 8,\n  },\n  logoIcon: {\n    maxHeight: 20,\n    maxWidth: 20,\n  },\n});\n\nconst DailyReportCall = ({ calls, canViewDetails }: Props) => (\n  <View style={styles.container}>\n    {calls.map((call) => (\n      <View key={call.id} style={styles.card}>\n        <View style={styles.header}>\n          <Text style={styles.headerText}>\n            {format(new Date(call.scheduledStart), \"HH:mm aaa\")} -{\" \"}\n            {format(new Date(call.scheduledEnd), \"HH:mm aaa\")}\n          </Text>\n          <View style={styles.logoIcon}>\n            <LogoIconBW />\n          </View>\n        </View>\n        <View style={styles.row}>\n          <View style={styles.rowFirstItem}>\n            <View style={styles.icon}>\n              <CameraIcon />\n            </View>\n            <View>\n              <Text style={styles.itemTitle}>Call ID</Text>\n              <Text style={styles.itemBody}>{call.id}</Text>\n            </View>\n          </View>\n          <View style={styles.rowItem}>\n            <Text style={styles.itemTitle}>Call Station</Text>\n            <Text style={styles.itemBody}>{call.kiosk.name}</Text>\n          </View>\n        </View>\n        {call.inmates.map((inmate) => (\n          <View style={styles.row} key={inmate.id}>\n            <View style={styles.rowFirstItem}>\n              <View style={styles.icon}>\n                <PersonIcon />\n              </View>\n              <View>\n                <Text style={styles.itemTitle}>Participant</Text>\n                <Text style={styles.itemBody}>{genFullName(inmate)}</Text>\n              </View>\n            </View>\n            <View style={styles.rowItem}>\n              <Text style={styles.itemTitle}>Unique ID</Text>\n              <Text style={styles.itemBody}>{inmate.inmateIdentification}</Text>\n            </View>\n          </View>\n        ))}\n        {canViewDetails && (\n          <View style={styles.row}>\n            <View style={styles.rowFirstItem}>\n              <View style={styles.icon}>\n                <ContactIcon />\n              </View>\n              <View>\n                <Text style={styles.itemTitle}>Contact Name</Text>\n                {call.contacts.map((contact) => (\n                  <Text\n                    key={`${contact.id}-${contact.firstName}-${contact.lastName}`}\n                    style={styles.itemBody}\n                  >\n                    {genFullName(contact)}\n                  </Text>\n                ))}\n              </View>\n            </View>\n            <View style={styles.rowItem}>\n              <Text style={styles.itemTitle}>Contact ID</Text>\n              {call.contacts.map((contact) => (\n                <Text key={contact.id} style={styles.itemBody}>\n                  {contact.id}\n                </Text>\n              ))}\n            </View>\n          </View>\n        )}\n      </View>\n    ))}\n  </View>\n);\n\nexport default DailyReportCall;\n","import React from \"react\";\nimport { Text, View, StyleSheet } from \"@react-pdf/renderer\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    position: \"absolute\",\n    bottom: 16,\n    left: 16,\n    width: \"100%\",\n  },\n  footerText: {\n    fontSize: 12,\n  },\n});\n\nconst Footer = () => {\n  return (\n    <View style={styles.container} fixed>\n      <Text style={styles.footerText}>ameelio.org</Text>\n      <Text\n        style={styles.footerText}\n        render={({ pageNumber, totalPages }) => `${pageNumber} / ${totalPages}`}\n      />\n    </View>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Call } from \"src/typings/Call\";\nimport { Document, Page, View, StyleSheet } from \"@react-pdf/renderer\";\nimport { format } from \"date-fns\";\nimport Header from \"src/components/pdf/Header\";\nimport { SelectedFacility } from \"src/typings/Facility\";\nimport SectionHeader from \"src/components/pdf/SectionHeader\";\nimport DailyReportCall from \"./DailyReportCall\";\nimport Footer from \"../pdf/Footer\";\n\nconst styles = StyleSheet.create({\n  page: {\n    padding: 30,\n  },\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  blockContainer: {\n    borderRadius: 8,\n    borderStyle: \"solid\",\n    borderColor: \"#CECECE\",\n    borderWidth: 2,\n    marginBottom: 16,\n  },\n});\n\ninterface Props {\n  callBlocks: Record<string, Call[]>;\n  facility: SelectedFacility;\n  canViewDetails: boolean;\n}\n\nconst DailyReport: React.FC<Props> = React.memo(\n  ({ callBlocks, facility, canViewDetails }) => (\n    <Document\n      author=\"Ameelio.org\"\n      keywords=\"schedule, conneect\"\n      title=\"Daily Schedule\"\n    >\n      <Page style={styles.page} wrap>\n        <Header\n          title={`Daily Activity Report | ${format(\n            new Date(),\n            \"MMMM dd, yyyy\"\n          )}`}\n          subtitle={`${facility.name}`}\n        />\n        {Object.keys(callBlocks).map((block) => (\n          <View key={block} style={styles.blockContainer}>\n            <SectionHeader title={format(new Date(block), \"HH:mm aaa\")} />\n            <DailyReportCall\n              calls={callBlocks[block]}\n              canViewDetails={canViewDetails}\n            />\n          </View>\n        ))}\n        <Footer />\n      </Page>\n    </Document>\n  )\n);\n\nexport default DailyReport;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Spin, Typography } from \"antd\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport { SelectedFacility } from \"src/typings/Facility\";\nimport { format } from \"date-fns\";\nimport { Call } from \"src/typings/Call\";\nimport DailyReport from \"./DailyReport\";\nimport { groupBy } from \"src/utils\";\n\ninterface Props {\n  facility: SelectedFacility;\n  calls: Call[];\n  canViewDetails: boolean;\n}\n\nconst PDFDownloadButton: React.FC<Props> = React.memo(\n  ({ calls, facility, canViewDetails }) => {\n    // TODO: delete this safeguard once the maintainers of this package resolve aa known issue\n    // https://github.com/diegomura/react-pdf/issues/844\n    const [hasMounted, setHasMounted] = useState(false);\n\n    useEffect(() => {\n      setTimeout(() => setHasMounted(true), 2000);\n    }, []);\n\n    if (!hasMounted)\n      return (\n        <Typography.Text type=\"secondary\">\n          Generating daily report... <Spin size=\"small\" />\n        </Typography.Text>\n      );\n\n    const type = canViewDetails ? \"Admin\" : \"Public\";\n    return (\n      <PDFDownloadLink\n        document={\n          <DailyReport\n            callBlocks={groupBy(calls, (call) => call.scheduledStart)}\n            facility={facility}\n            canViewDetails={canViewDetails}\n          />\n        }\n        fileName={`Daily Schedule (${type}) | ${facility.name}@${format(\n          new Date(),\n          \"MM/dd/yyyy-HH:mm\"\n        )}`}\n      >\n        {type} Schedule (PDF)\n      </PDFDownloadLink>\n    );\n  }\n);\n\nexport default PDFDownloadButton;\n","import Dashboard from \"./Dashboard\";\n\nexport default Dashboard;\n","import {\n  StarOutlined,\n  VideoCameraOutlined,\n  GlobalOutlined,\n  DownOutlined,\n  UserOutlined,\n  FilePdfOutlined,\n  UnorderedListOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Layout,\n  Space,\n  Row,\n  Col,\n  Button,\n  Typography,\n  Spin,\n  Dropdown,\n  Menu,\n} from \"antd\";\nimport { Content } from \"antd/lib/layout/layout\";\nimport { differenceInMinutes, format } from \"date-fns\";\nimport React, { useEffect, useState } from \"react\";\nimport MetricCard from \"src/components/Dashboard/MetricCard\";\nimport {\n  FULL_WIDTH,\n  WRAPPER_STYLE,\n  BASE_CHART_COLORS,\n} from \"src/styles/styles\";\nimport { Call } from \"src/typings/Call\";\nimport { callsToDailyLogs, callsToday, onlyUnique } from \"src/utils\";\nimport DonutChart from \"../charts/DonutChart\";\nimport LineChart from \"../charts/LineChart\";\nimport Header from \"../Header/Header\";\nimport { groupBy, callsToWeeklyData } from \"src/utils\";\nimport PDFDownloadButton from \"./PDFDownloadButton\";\nimport { SelectedFacility } from \"src/typings/Facility\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\ninterface Props {\n  calls: Call[];\n  totalInmates: number;\n  facility: SelectedFacility;\n  lastUpdatedAt: Date;\n  isRefreshing: boolean;\n  refresh: () => void;\n}\n\nconst Dashboard: React.FC<Props> = ({\n  calls,\n  totalInmates,\n  facility,\n  lastUpdatedAt,\n  isRefreshing,\n  refresh,\n}) => {\n  const [ratingsCount, setRatingsCount] = useState<number[]>();\n  const [callVolume, setCallVolume] = useState<Record<string, number>>();\n  const [lastUpdatedAtMin, setLastUpdatedAtMin] = useState(0);\n\n  const [dailyScheduleCalls, setDailyScheduleCall] = useState<Call[]>([]);\n\n  useEffect(() => setDailyScheduleCall(callsToday(calls)), [calls]);\n\n  useEffect(() => {\n    const timeout = setInterval(() => {\n      setLastUpdatedAtMin(differenceInMinutes(new Date(), lastUpdatedAt));\n    }, 1000);\n\n    return () => clearInterval(timeout);\n  }, [lastUpdatedAt]);\n\n  useEffect(() => {\n    const groups = groupBy(\n      calls.filter((call) => !!call.rating),\n      (call) => call.rating,\n      [1, 2, 3, 4, 5]\n    );\n    // grooup calls by rating, sort them in ascending order, and count the number of instancces\n    const sortedKeys = Object.keys(groups).sort();\n    setRatingsCount(sortedKeys.map((key) => groups[parseInt(key)].length));\n\n    // groups calls by week,\n    setCallVolume(callsToWeeklyData(calls));\n  }, [calls]);\n\n  if (!ratingsCount || !callVolume) return <div />;\n\n  const scheduleOptionsMenu = (\n    <Menu>\n      <Menu.Item key=\"1\" icon={<FilePdfOutlined />}>\n        <PDFDownloadButton\n          calls={dailyScheduleCalls}\n          facility={facility}\n          canViewDetails={true}\n        />\n      </Menu.Item>\n      <Menu.Item key=\"2\" icon={<FilePdfOutlined />}>\n        <PDFDownloadButton\n          calls={dailyScheduleCalls}\n          facility={facility}\n          canViewDetails={false}\n        />\n      </Menu.Item>\n      <Menu.Item key=\"3\" icon={<UnorderedListOutlined />}>\n        <CSVLink\n          data={callsToDailyLogs(dailyScheduleCalls)}\n          target=\"_blank\"\n          filename={`Daily Logs ${facility.name}@${format(\n            new Date(),\n            \"MM/dd/yyyy-HH:mm\"\n          )}`}\n        >\n          Daily Logs (CSV)\n        </CSVLink>\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <Layout>\n      <Header\n        title=\"Dashboard\"\n        subtitle=\"Analyze your facility data and print the daily call schedule.\"\n        extra={[\n          <Dropdown overlay={scheduleOptionsMenu}>\n            <Button>\n              Download Schedule <DownOutlined />\n            </Button>\n          </Dropdown>,\n          <div>\n            {lastUpdatedAtMin > 5 && !isRefreshing && (\n              <div>\n                <Typography.Text type=\"secondary\" className=\"italic\">\n                  Computed {lastUpdatedAtMin} minutes ago\n                </Typography.Text>\n                <Button type=\"link\" onClick={refresh}>\n                  Refresh\n                </Button>\n              </div>\n            )}\n          </div>,\n          <div>\n            {isRefreshing && (\n              <div>\n                <Spin />\n                <Typography.Text type=\"secondary\">\n                  Updating with live data\n                </Typography.Text>\n              </div>\n            )}\n          </div>,\n        ]}\n      />\n      <Content>\n        <Space\n          direction=\"vertical\"\n          style={{ ...FULL_WIDTH, ...WRAPPER_STYLE }}\n          size=\"large\"\n        >\n          <Row gutter={16}>\n            <Col span={8} className=\"bg-white\">\n              <MetricCard\n                title=\"Calls This Week\"\n                value={\n                  Object.values(callVolume)[\n                    Object.values(callVolume).length - 1\n                  ]\n                }\n                prefix={<StarOutlined />}\n                suffix={`calls`}\n              />\n            </Col>\n            <Col span={8} className=\"bg-white\">\n              <MetricCard\n                title=\"Live Video Calls\"\n                value={\n                  calls.filter(\n                    (call) =>\n                      call.status === \"live\" ||\n                      call.status === \"missing_monitor\"\n                  ).length\n                }\n                prefix={<VideoCameraOutlined />}\n                suffix=\"calls\"\n              />\n            </Col>\n            <Col span={8} className=\"bg-white\">\n              <MetricCard\n                title=\"Facility Video Usage\"\n                value={(\n                  (calls\n                    .map((call) => call.inmateIds)\n                    .reduce((prev, curr) => [...prev, ...curr], [])\n                    .filter(onlyUnique).length *\n                    100) /\n                  totalInmates\n                ).toFixed(2)}\n                suffix=\"%\"\n                prefix={<GlobalOutlined />}\n              />\n            </Col>\n          </Row>\n          <Row gutter={16}>\n            <Col span={12}>\n              <LineChart\n                title=\"Calls\"\n                label=\"# calls\"\n                labels={Object.keys(callVolume)}\n                data={Object.values(callVolume)}\n              />\n            </Col>\n            <Col span={12}>\n              <DonutChart\n                title={`Ratings Breakdown ${format(new Date(), \"MMMM\")}`}\n                data={ratingsCount}\n                backgroundColor={BASE_CHART_COLORS}\n                hoverBackgroundColor={BASE_CHART_COLORS}\n                labels={[\"Terrible\", \"Poor\", \"Okay\", \"Good\", \"Amazing\"]}\n              />\n            </Col>\n          </Row>\n        </Space>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState } from \"react\";\nimport { selectTotalInmates } from \"src/redux/selectors\";\nimport { useAppDispatch, useAppSelector } from \"src/redux\";\nimport Dashboard from \"src/components/Dashboard\";\nimport { useCalls } from \"src/hooks/useCalls\";\nimport { fetchCalls } from \"src/redux/modules/call\";\nimport { endOfMonth, startOfMonth } from \"date-fns\";\n\nconst DashboardPage: React.FC = () => {\n  const calls = useCalls();\n  const totalInmates = useAppSelector(selectTotalInmates);\n  const facility = useAppSelector((state) => state.facilities.selected);\n  const [lastUpdatedAt, setLastUpdatedAt] = useState(new Date());\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const dispatch = useAppDispatch();\n\n  const refresh = () => {\n    setIsRefreshing(true);\n    dispatch(\n      fetchCalls({\n        scheduledStart: {\n          rangeStart: startOfMonth(new Date()).getTime(),\n          rangeEnd: endOfMonth(new Date()).getTime(),\n        },\n      })\n    );\n    setLastUpdatedAt(new Date());\n    setIsRefreshing(false);\n  };\n\n  if (!facility) return <div />;\n\n  return (\n    <Dashboard\n      calls={calls}\n      totalInmates={totalInmates}\n      facility={facility}\n      lastUpdatedAt={lastUpdatedAt}\n      refresh={refresh}\n      isRefreshing={isRefreshing}\n    />\n  );\n};\n\nexport default DashboardPage;\n","import React, { useEffect, useState } from \"react\";\nimport { TimePicker, Row, Col, Space, Button, Typography, Card } from \"antd\";\nimport { CallSlot, TentativeCallSlot } from \"src/typings/Facility\";\nimport { WeekdayMap, WEEKDAYS, DEFAULT_DURATION_MS } from \"src/utils/constants\";\nimport { FULL_WIDTH } from \"src/styles/styles\";\nimport moment from \"moment\";\nimport { CallBlock, WeeklySchedule } from \"src/typings/Call\";\nimport {\n  dayOfWeekAsString,\n  mapCallSlotsToTimeBlock,\n  mapCallBlockToCallSlots,\n} from \"src/utils\";\nimport { cloneObject } from \"src/utils\";\nimport { format } from \"date-fns\";\nimport { VisitationType } from \"src/typings/Common\";\n\ninterface Props {\n  handleSave: (callSlots: TentativeCallSlot[]) => void;\n  callTimes: CallSlot[];\n}\n\nconst CallHourSettings = ({ handleSave, callTimes }: Props) => {\n  const [ranges, setRanges] = useState<WeeklySchedule>();\n  const [callSlots, setCallSlots] = useState<TentativeCallSlot[]>([]);\n  const dateFormat = \"HH:mm\";\n\n  // initialize call hour settings based on facility's existing schedule\n  useEffect(() => {\n    setCallSlots(callTimes);\n    setRanges(mapCallSlotsToTimeBlock(callTimes));\n  }, [callTimes]);\n\n  if (!ranges) return <div />;\n\n  const onChange = (\n    start: Date,\n    end: Date,\n    day: WeekdayMap,\n    idx: number,\n    type: VisitationType\n  ) => {\n    const r = cloneObject(ranges) as WeeklySchedule;\n\n    // update call block\n    r[day][idx] = {\n      start: start.toString(),\n      end: end.toString(),\n      duration: DEFAULT_DURATION_MS,\n      idx,\n      day,\n    };\n    setCallSlots(mapCallBlockToCallSlots(r, type));\n    setRanges(r);\n  };\n\n  const renderItem = (\n    day: WeekdayMap,\n    ranges: CallBlock[],\n    type: VisitationType\n  ) => {\n    return (\n      <Row style={{ width: \"100%\", margin: 16 }}>\n        <Col span={12}>\n          <Typography.Title level={5}>\n            {dayOfWeekAsString(day)}\n          </Typography.Title>\n        </Col>\n        <Col span={12}>\n          <Space direction=\"vertical\" style={FULL_WIDTH}>\n            {ranges.map((time) => (\n              <TimePicker.RangePicker\n                minuteStep={30}\n                use12Hours={true}\n                defaultValue={[\n                  moment(format(new Date(time.start), dateFormat), dateFormat),\n                  moment(format(new Date(time.end), dateFormat), dateFormat),\n                ]}\n                onChange={(values) => {\n                  if (!values || !values[0] || !values[1]) return;\n                  onChange(\n                    values[0].toDate(),\n                    values[1].toDate(),\n                    day,\n                    time.idx,\n                    type\n                  );\n                }}\n                format={dateFormat}\n              />\n            ))}\n            <TimePicker.RangePicker\n              format={dateFormat}\n              minuteStep={30}\n              use12Hours={true}\n              onChange={(values) => {\n                if (!values || !values[0] || !values[1]) return;\n                onChange(\n                  values[0].toDate(),\n                  values[1].toDate(),\n                  day,\n                  ranges.length,\n                  type\n                );\n              }}\n            />\n          </Space>\n        </Col>\n      </Row>\n    );\n  };\n\n  return (\n    <Card\n      title=\"Call Hours\"\n      extra={[\n        <Button type=\"primary\" onClick={() => handleSave(callSlots)}>\n          Save Changes\n        </Button>,\n      ]}\n    >\n      <Space direction=\"vertical\">\n        {WEEKDAYS.map((weekday) =>\n          renderItem(weekday, ranges[weekday], VisitationType.FAMILY_VIDEO_CALL)\n        )}\n      </Space>\n    </Card>\n  );\n};\n\nexport default CallHourSettings;\n","import React from \"react\";\nimport { Kiosk } from \"src/typings/Kiosk\";\nimport { Table, Tag, Card, Switch } from \"antd\";\nimport { Dictionary } from \"@reduxjs/toolkit\";\nimport { Group } from \"src/typings/Group\";\n\ninterface Props {\n  kiosks: Kiosk[];\n  groupEnts: Dictionary<Group>;\n}\n\nconst KioskSettings = ({ kiosks, groupEnts }: Props) => {\n  const columns = [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      key: \"id\",\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n    // {\n    //   title: \"Description\",\n    //   dataIndex: \"description\",\n    //   key: \"description\",\n    // },\n    {\n      title: \"Location\",\n      dataIndex: \"groupId\",\n      key: \"group\",\n      render: (groupId: string) => (\n        <>\n          <Tag>{groupEnts[groupId]?.name}</Tag>\n        </>\n      ),\n    },\n    {\n      title: \"Type\",\n      //   TODO: add this once we add the kiosk type\n      // https://github.com/Ameelio/connect-api-nest/issues/93\n      //   dataIndex: 'tags',\n      key: \"type\",\n      render: () => (\n        <>\n          {Math.floor(Math.random() * 6) % 2 === 0 ? (\n            <Tag color=\"blue\">Chromebook</Tag>\n          ) : (\n            <Tag color=\"green\">Table Booth</Tag>\n          )}\n        </>\n      ),\n    },\n    // TODO: add this once we allow DOCs to enable and disable kiosks\n    // https://github.com/Ameelio/connect-doc-client/issues/72\n    // When DOC disables kiosk, give them the option to cancel calls\n    // {\n    //   title: \"Enabled\",\n    //   dataIndex: \"enabled\",\n    //   key: \"type\",\n    //   render: (enabled: boolean) => (\n    //     <>\n    //       <Switch disabled={true} defaultChecked={enabled} />\n    //     </>\n    //   ),\n    // },\n  ];\n\n  return (\n    <Card title=\"Kiosks\">\n      <Table dataSource={kiosks} columns={columns} />\n    </Card>\n  );\n};\n\nexport default KioskSettings;\n","import Settings from \"./Settings\";\n\nexport default Settings;\n","import { Dictionary } from \"@reduxjs/toolkit\";\nimport { Card, Layout, Tabs, Tree } from \"antd\";\nimport { DataNode } from \"rc-tree/lib/interface\";\nimport React, { useState } from \"react\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\nimport { SelectedFacility, TentativeCallSlot } from \"src/typings/Facility\";\nimport { Group } from \"src/typings/Group\";\nimport { Kiosk } from \"src/typings/Kiosk\";\nimport Header from \"../Header\";\nimport CallHourSettings from \"./CallHourSettings\";\nimport KioskSettings from \"./KioskSettings\";\n\ninterface Props {\n  groupTree: DataNode[];\n  groupEnts: Dictionary<Group>;\n  facility: SelectedFacility;\n  kiosks: Kiosk[];\n  handleCallHoursChange: (callSlots: TentativeCallSlot[]) => void;\n}\n\ntype TTab = \"setting\" | \"facility\" | \"kiosks\";\nconst Settings = ({\n  groupTree,\n  groupEnts,\n  facility,\n  kiosks,\n  handleCallHoursChange,\n}: Props) => {\n  const [activeTab, setActiveTab] = useState<TTab>(\"setting\");\n\n  return (\n    <Layout.Content>\n      <Header\n        title=\"Settings\"\n        subtitle=\"Adjust the call hours, facility information, and facility kiosk directory as needed.\"\n      />\n      <div style={WRAPPER_STYLE}>\n        <Tabs\n          defaultActiveKey={activeTab}\n          onChange={(key) => setActiveTab(key as TTab)}\n        >\n          <Tabs.TabPane tab=\"General Settings\" key=\"setting\">\n            <CallHourSettings\n              handleSave={handleCallHoursChange}\n              callTimes={facility.callTimes}\n            />\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Facility\" key=\"facility\">\n            <Card title=\"Facility Tree\">\n              <Tree treeData={groupTree} defaultExpandAll={true} />\n            </Card>\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Kiosks\" key=\"kiosks\">\n            <KioskSettings kiosks={kiosks} groupEnts={groupEnts} />\n          </Tabs.TabPane>\n        </Tabs>\n      </div>\n    </Layout.Content>\n  );\n};\n\nexport default Settings;\n","import React, { ReactElement } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"src/redux\";\nimport { TentativeCallSlot } from \"src/typings/Facility\";\nimport { updateCallTimes } from \"src/redux/modules/facility\";\nimport Settings from \"src/components/Settings\";\nimport { selectAllKiosks, selectGroupEntities } from \"src/redux/selectors\";\n\nfunction SettingsContainer(): ReactElement {\n  const groupTree = useAppSelector((state) => state.groups.nodes);\n  const groupEnts = useAppSelector(selectGroupEntities);\n  const facility = useAppSelector((state) => state.facilities.selected);\n  const kiosks = useAppSelector(selectAllKiosks);\n  const dispatch = useAppDispatch();\n\n  if (!facility) return <div />;\n\n  const handleCallHoursChange = (callSlots: TentativeCallSlot[]) => {\n    dispatch(\n      updateCallTimes({\n        newCallSlots: callSlots,\n        oldCallSlots: facility.callTimes,\n      })\n    );\n  };\n\n  return (\n    <Settings\n      groupTree={groupTree}\n      groupEnts={groupEnts}\n      facility={facility}\n      kiosks={kiosks}\n      handleCallHoursChange={handleCallHoursChange}\n    />\n  );\n}\n\nexport default SettingsContainer;\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { RootState, useAppDispatch, useAppSelector } from \"src/redux\";\nimport { connect, ConnectedProps, useSelector } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { getCallInfo, selectMessageByCallId } from \"src/redux/selectors\";\nimport { Button, Descriptions, Layout, PageHeader, Space } from \"antd\";\nimport ReactPlayer from \"react-player\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\nimport { format } from \"date-fns\";\nimport {\n  genFullName,\n  getCallContactsFullNames,\n  getVisitationLabel,\n} from \"src/utils\";\nimport { DownloadOutlined, InfoCircleOutlined } from \"@ant-design/icons\";\nimport { Call } from \"src/typings/Call\";\nimport MessageDisplay from \"src/components/calls/MessageDisplay\";\nimport { fetchCallMessages } from \"src/redux/modules/call\";\nimport { VisitationType } from \"src/typings/Common\";\n\nconst { Content, Sider } = Layout;\n\nconst mapStateToProps = (\n  state: RootState,\n  ownProps: RouteComponentProps<TParams>\n) => ({\n  call: getCallInfo(state, ownProps.match.params.id) as Call,\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype TParams = { id: string };\n\nfunction RecordingBase({\n  call,\n  match,\n}: PropsFromRedux & RouteComponentProps<TParams>): ReactElement {\n  const [callId] = useState(match.params.id);\n  const [chatCollapsed, setChatCollapsed] = useState(false);\n\n  const facility = useSelector(\n    (state: RootState) => state.facilities.selected?.name\n  );\n\n  const messages = useSelector((state: RootState) =>\n    selectMessageByCallId(state, callId)\n  );\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (callId) dispatch(fetchCallMessages(callId));\n  }, [callId, dispatch]);\n\n  if (!call) return <div />;\n\n  return (\n    <Layout>\n      <Content style={WRAPPER_STYLE}>\n        {call.recordingPath && (\n          <ReactPlayer\n            autoplay={true}\n            muted={true}\n            controls={true}\n            width=\"100%\"\n            url={call.recordingPath}\n          />\n        )}\n        <PageHeader\n          ghost={false}\n          onBack={() => window.history.back()}\n          title={`Call ${callId}`}\n          subTitle={facility}\n        >\n          <Descriptions size=\"small\" column={3} bordered layout=\"vertical\">\n            <Descriptions.Item label=\"Visitation ID\">\n              {call.id}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Incarcerated Person\">\n              {call.inmates.map((inmate) => genFullName(inmate))}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Inmate ID\">\n              {call.inmates.map((inmate) => inmate.inmateIdentification)}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Visitor (s)\">\n              {getCallContactsFullNames(call)}\n            </Descriptions.Item>\n\n            <Descriptions.Item label=\"Date\">\n              {format(new Date(call.scheduledStart), \"MM/dd/yyyy\")}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Start Time\">\n              {format(new Date(call.scheduledStart), \"HH:mm\")}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"End Time\">\n              {format(new Date(call.scheduledEnd), \"HH:mm\")}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Kiosk\">\n              {call.kiosk.name}\n            </Descriptions.Item>\n            {/* TODO: add this back once we have visitation types */}\n            <Descriptions.Item label=\"Type\">\n              {/* {getVisitationLabel(call.type)} */}\n              Call\n            </Descriptions.Item>\n          </Descriptions>\n        </PageHeader>\n      </Content>\n      <Sider\n        theme=\"light\"\n        style={{ height: \"100vh\", maxHeight: \"100vh\" }}\n        width={300}\n        collapsible\n        collapsed={chatCollapsed}\n        onCollapse={(collapsed) => setChatCollapsed(collapsed)}\n      >\n        {!chatCollapsed && (\n          <div>\n            <PageHeader title=\"Chat\" />{\" \"}\n            <div style={WRAPPER_STYLE}>\n              <Space\n                direction=\"vertical\"\n                style={{\n                  overflowY: \"scroll\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  height: \"100%\",\n                }}\n              >\n                {messages.map((message) => (\n                  <MessageDisplay message={message} call={call} />\n                ))}\n              </Space>\n            </div>\n          </div>\n        )}\n      </Sider>\n    </Layout>\n  );\n}\n\nexport default connector(RecordingBase);\n","import React from \"react\";\nimport { Table, Space, Button, Typography } from \"antd\";\nimport { format } from \"date-fns\";\nimport { genFullName } from \"src/utils\";\nimport { Inmate } from \"src/typings/Inmate\";\nimport { Contact } from \"src/typings/Contact\";\nimport { Call, ISOString } from \"src/typings/Call\";\nimport Avatar from \"../Avatar\";\nimport ContactCell from \"./ContactCell\";\nimport InmateCell from \"./InmateCell\";\n\ninterface Props {\n  calls: Call[];\n  accept: (connection: Call) => void;\n  reject: (connection: Call) => void;\n  navigate: (path: string) => void;\n  loading?: boolean;\n}\n\nexport const CallRequests = ({\n  calls,\n  accept,\n  reject,\n  navigate,\n  loading,\n}: Props) => {\n  return (\n    <Table dataSource={calls} loading={loading}>\n      <Table.Column\n        title=\"\"\n        dataIndex=\"inmates\"\n        key=\"inmateProfilePic\"\n        render={(inmates: Inmate[]) => (\n          <>\n            {inmates.map((inmate) => (\n              <Avatar\n                src={inmate.profileImagePath}\n                fallback={genFullName(inmate)}\n                size={64}\n              />\n            ))}\n          </>\n        )}\n      />\n      <Table.Column\n        title=\"Incarcerated Person\"\n        dataIndex=\"inmates\"\n        key=\"inmateInfo\"\n        render={(inmates: Inmate[]) => (\n          <>\n            <Space direction=\"vertical\">\n              {inmates.map((inmate) => (\n                <InmateCell inmate={inmate} navigate={navigate} />\n              ))}\n            </Space>\n          </>\n        )}\n      />\n      <Table.Column\n        title=\"\"\n        dataIndex=\"contacts\"\n        key=\"contactProfilePic\"\n        render={(contacts: Contact[]) => (\n          <>\n            {contacts.map((contact) => (\n              <Avatar\n                src={contact.profileImagePath}\n                fallback={genFullName(contact)}\n                size={64}\n              />\n            ))}\n          </>\n        )}\n      />\n      <Table.Column\n        title=\"Contact\"\n        dataIndex=\"contacts\"\n        key=\"contactInfo\"\n        render={(contacts: Contact[]) => (\n          <>\n            <Space direction=\"vertical\">\n              {contacts.map((contact) => (\n                <ContactCell contact={contact} navigate={navigate} />\n              ))}\n            </Space>\n          </>\n        )}\n      />\n      <Table.Column\n        title=\"Scheduled Start\"\n        dataIndex=\"scheduledStart\"\n        key=\"scheduledStart\"\n        render={(scheduledStart: ISOString) => (\n          <>\n            <Typography.Text>\n              {format(new Date(scheduledStart), \"MM/dd/y H:mm\")}\n            </Typography.Text>\n          </>\n        )}\n      />\n      <Table.Column\n        title=\"Scheduled End\"\n        dataIndex=\"scheduledEnd\"\n        key=\"scheduledEnd\"\n        render={(scheduledEnd: ISOString) => (\n          <>\n            <Typography.Text>\n              {format(new Date(scheduledEnd), \"MM/dd/y H:mm\")}\n            </Typography.Text>\n          </>\n        )}\n      />\n      <Table.Column title=\"Kiosk\" dataIndex=\"kioskId\" key=\"kioskId\" />\n      <Table.Column\n        title=\"\"\n        key=\"actions\"\n        render={(_text, request: Call) => (\n          <Space>\n            <Button type=\"primary\" onClick={() => accept(request)}>\n              Accept\n            </Button>\n            <Button danger onClick={() => reject(request)}>\n              Reject\n            </Button>\n          </Space>\n        )}\n      />\n    </Table>\n  );\n};\n","import LiveVisitationsPage from \"src/pages/LiveCall\";\nimport CalendarPage from \"src/pages/Calendar\";\nimport ConnectionRequestsPage from \"src/pages/ConnectionRequests\";\nimport LogsPage from \"src/pages/CallLogs\";\nimport StaffPage from \"src/pages/Staff\";\nimport InmatesPage from \"src/pages/Inmates\";\nimport InmateDetailPage from \"src/pages/Inmate\";\nimport ContactPage from \"src/pages/Contact\";\n\nimport DashboardPage from \"src/pages/Dashboard\";\nimport SettingsPage from \"src//pages/Settings\";\nimport RecordingPage from \"src/pages/Recording\";\nimport CallRequestsPage from \"src/pages/CallRequests\";\n\nimport { Route } from \"src/typings/Common\";\n\nexport const ROUTES: Route[] = [\n  { path: \"/calendar\", component: CalendarPage, label: \"Page\" },\n  {\n    path: \"/connection-requests\",\n    component: ConnectionRequestsPage,\n    label: \"Connection Requests\",\n  },\n  {\n    path: \"/call-requests\",\n    component: CallRequestsPage,\n    label: \"Call Requests\",\n  },\n  { path: \"/logs\", component: LogsPage, label: \"Search for Visits\" },\n  { path: \"/staff\", component: StaffPage, label: \"Staff\" },\n  { path: \"/members\", component: InmatesPage, label: \"Inmates\" },\n  {\n    path: \"/members/:id\",\n    component: InmateDetailPage,\n    label: \"Incarcerated Individual\",\n  },\n  {\n    path: \"/contacts/:id\",\n    component: ContactPage,\n    label: \"Contact\",\n  },\n  { path: \"/visitations\", component: LiveVisitationsPage, label: \"Live Calls\" },\n  { path: \"/settings\", component: SettingsPage, label: \"Settings\" },\n  { path: \"/call/:id\", component: RecordingPage, label: \"Past Call\" },\n  { path: \"/\", component: DashboardPage, label: \"Dashboard\" },\n];\n","import React, { useEffect } from \"react\";\nimport { RootState, useAppDispatch, useAppSelector } from \"src/redux\";\nimport { CallRequests } from \"src/components/Requests\";\nimport { useCallsWithStatus } from \"src/hooks/useCalls\";\nimport { Call, CallStatus } from \"src/typings/Call\";\nimport { fetchCalls, updateCallStatus } from \"src/redux/modules/call\";\nimport { push } from \"connected-react-router\";\nimport Header from \"src/components/Header\";\nimport { Layout } from \"antd\";\nimport { WRAPPER_STYLE } from \"src/styles/styles\";\n\nconst CallRequestsPage: React.FC = () => {\n  const calls = useCallsWithStatus(\"pending_approval\");\n\n  const dispatch = useAppDispatch();\n\n  const loading = useAppSelector((state: RootState) => state.calls.loading);\n\n  const handleCallUpdate = (call: Call, status: CallStatus): void => {\n    dispatch(updateCallStatus({ id: call.id, status }));\n  };\n\n  useEffect(() => {\n    dispatch(fetchCalls({ status: \"pending_approval\" }));\n  }, [dispatch]);\n\n  return (\n    <Layout.Content>\n      <Header\n        title=\"Approval Requests\"\n        subtitle=\"Review all connection requests between incarcerated people in your facility and their loved one on the outside.\"\n      />\n      <div style={WRAPPER_STYLE}>\n        <CallRequests\n          calls={calls}\n          accept={(call: Call) => handleCallUpdate(call, \"scheduled\")}\n          reject={(call: Call) => handleCallUpdate(call, \"rejected\")}\n          navigate={(path: string) => dispatch(push(path))}\n          loading={loading}\n        />\n      </div>\n    </Layout.Content>\n  );\n};\n\nexport default CallRequestsPage;\n","import { CallStatus } from \"src/typings/Call\";\nimport { VisitationType } from \"src/typings/Common\";\n\nexport const CALL_STATUS_FILTER_OPTIONS: {\n  label: string;\n  key: string;\n  value: CallStatus;\n}[] = [\n  {\n    label: \"Terminated\",\n    key: \"terminated\",\n    value: \"terminated\",\n  },\n  {\n    label: \"Ended\",\n    key: \"ended\",\n    value: \"ended\",\n  },\n  {\n    label: \"Scheduled\",\n    key: \"scheduled\",\n    value: \"scheduled\",\n  },\n];\n\nexport const VISITATION_TYPE_FILTER_OPTIONS: {\n  label: string;\n  key: string;\n  value: VisitationType;\n}[] = [\n  {\n    label: \"Family In Person (Contact)\",\n    key: VisitationType.FAMILY_IN_PERSON,\n    value: VisitationType.FAMILY_IN_PERSON,\n  },\n  {\n    label: \"Family In Person (No Contact)\",\n    key: VisitationType.FAMILY_IN_PERSON_NO_CONTACT,\n    value: VisitationType.FAMILY_IN_PERSON_NO_CONTACT,\n  },\n  {\n    label: \"Video Calls\",\n    key: VisitationType.FAMILY_VIDEO_CALL,\n    value: VisitationType.FAMILY_VIDEO_CALL,\n  },\n];\n\nexport const VISIATION_TYPE_LABEL_MAP = {\n  [VisitationType.FAMILY_IN_PERSON]: \"Family In Person (Contact)\",\n  [VisitationType.FAMILY_IN_PERSON_NO_CONTACT]: \"Family In Person (No Contact)\",\n  [VisitationType.FAMILY_VIDEO_CALL]: \"Family Video Call\",\n};\n","import { Modal, Space, Tag, Typography } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport React, { useState } from \"react\";\nimport { Call } from \"src/typings/Call\";\nimport { getCallContactsFullNames, getCallInmatesFullNames } from \"src/utils\";\n\ninterface Props {\n  call: Call;\n  cancelCall: (callId: string, reason: string) => void;\n  closeModal: () => void;\n}\n\nconst DEFAULT_CANCELLATION_REASONS = [\n  {\n    title: \"Storm/Severe Weather\",\n    description:\n      \"Due to the risk of severe weather, we'll have to cancel all visitation appointments for today.\",\n    key: \"storm\",\n  },\n  {\n    title: \"Lockdown\",\n    description:\n      \"ICIW is on lockdown. We're very sorry to inform all visitations have been cancelled.\",\n    key: \"lockdown\",\n  },\n];\n\nconst CancelCallModal = ({ call, cancelCall, closeModal }: Props) => {\n  const [reason, setReason] = useState(\"\");\n  return (\n    <Modal\n      title={`Cancel call ${call.id}?`}\n      onOk={() => {\n        cancelCall(call.id, reason);\n        closeModal();\n      }}\n      onCancel={closeModal}\n      okText=\"Confirm\"\n      visible={true}\n    >\n      <Space direction=\"vertical\">\n        <Typography.Text>\n          {\" \"}\n          Please provide a reason for the cancellation so we can inform{\" \"}\n          {getCallInmatesFullNames(call)} and {getCallContactsFullNames(call)}:\n        </Typography.Text>\n\n        <TextArea\n          rows={3}\n          onChange={(e) => setReason(e.target.value)}\n          value={reason}\n        />\n        <Space>\n          <Typography.Text>Common Reasons:</Typography.Text>\n          {DEFAULT_CANCELLATION_REASONS.map((reason) => (\n            <Tag key={reason.key} onClick={() => setReason(reason.description)}>\n              {reason.title}\n            </Tag>\n          ))}\n        </Space>\n      </Space>\n    </Modal>\n  );\n};\n\nexport default CancelCallModal;\n","import CancelCallModal from \"./CancelCallModal\";\nexport default CancelCallModal;\n","import Modals from \"./Modal\";\n\nexport default Modals;\n","import React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"src/redux\";\nimport { updateCallStatus } from \"src/redux/modules/call\";\nimport { closeModal } from \"src/redux/modules/modal\";\nimport CancelCallModal from \"./CancelCallModal\";\n\ninterface Props {}\n\nconst Modal = (props: Props) => {\n  const dispatch = useAppDispatch();\n  const data = useAppSelector((state) => state.modals.data);\n\n  switch (data.activeType) {\n    case \"CANCEL_CALL_MODAL\":\n      return (\n        <CancelCallModal\n          call={data.entity}\n          closeModal={() => dispatch(closeModal())}\n          cancelCall={(id: string, reason: string) =>\n            dispatch(\n              updateCallStatus({\n                id,\n                status: \"cancelled\",\n                statusDetails: reason,\n              })\n            )\n          }\n        />\n      );\n    default:\n      return <div />;\n  }\n};\n\nexport default Modal;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport { useAppDispatch, useAppSelector } from \"src/redux\";\nimport { useSelector } from \"react-redux\";\nimport ProtectedRoute, {\n  ProtectedRouteProps,\n} from \"./components/hocs/ProtectedRoute\";\nimport Menu from \"./components/Menu/Menu\";\nimport { Layout, Spin } from \"antd\";\nimport { logout, setRedirectUrl } from \"src/redux/modules/session\";\nimport { fetchFacilities } from \"./redux/modules/facility\";\nimport { selectAllFacilities } from \"./redux/selectors\";\nimport { selectActiveFacility } from \"src/redux/modules/facility\";\nimport { ROUTES } from \"./constants\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { History } from \"history\";\nimport { fetchContacts } from \"./redux/modules/contact\";\nimport { fetchStaff } from \"./redux/modules/staff\";\nimport { fetchInmates } from \"./redux/modules/inmate\";\nimport { fetchConnections } from \"./redux/modules/connections\";\nimport { fetchGroups } from \"./redux/modules/group\";\nimport { fetchKiosks } from \"./redux/modules/kiosk\";\nimport { fetchCalls } from \"./redux/modules/call\";\nimport { startOfMonth } from \"date-fns/esm\";\nimport { endOfMonth } from \"date-fns\";\nimport { Facility } from \"./typings/Facility\";\nimport { useConnectionRequestsCount } from \"./hooks/useConnections\";\nimport { useCallCountWithStatus, useCallsWithStatus } from \"./hooks/useCalls\";\nimport Modals from \"./components/Modals\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\n\nconst LOGIN_PATH = \"/login\";\n\nconst Loader = () => (\n  <div className=\"flex h-screen w-screen\">\n    <Spin size=\"large\" className=\"m-auto\" tip={\"Loading workpace...\"} />\n  </div>\n);\n\nfunction App({ history }: { history: History }) {\n  const session = useAppSelector((state) => state.session);\n  const selected = useAppSelector((state) => state.facilities.selected);\n  const pathname = useAppSelector((state) => state.router.location.pathname);\n  const liveCallsCount = useCallsWithStatus(\"live\").length;\n  const dispatch = useAppDispatch();\n\n  const [isAuthenticated, setIsAuthenticated] = useState(\n    session.status === \"active\"\n  );\n  const [isInitingData, setIsInitingData] = useState(true);\n\n  Sentry.init({\n    dsn: process.env.REACT_APP_SENTRY_DSN,\n    integrations: [new Integrations.BrowserTracing()],\n    release: \"connect-client@\" + process.env.npm_package_version,\n    tracesSampleRate: 1.0,\n  });\n\n  const requestsCount = useConnectionRequestsCount();\n  const pendingCallsCount = useCallCountWithStatus(\"pending_approval\");\n\n  useEffect(() => setIsAuthenticated(session.status === \"active\"), [\n    session.status,\n  ]);\n\n  const defaultProtectedRouteProps: ProtectedRouteProps = {\n    isAuthenticated,\n    authenticationPath: LOGIN_PATH,\n  };\n\n  const facilities = useSelector(selectAllFacilities);\n\n  useEffect(() => {\n    if (isAuthenticated) dispatch(fetchFacilities());\n  }, [isAuthenticated, dispatch]);\n\n  useEffect(() => {\n    if (!isAuthenticated && pathname !== LOGIN_PATH)\n      dispatch(setRedirectUrl(pathname));\n  }, [dispatch, isAuthenticated, pathname]);\n\n  useEffect(() => {\n    if (selected) {\n      setIsInitingData(true);\n      // TODO: this initialization strategy doesn't actually work - dispatch doesnt await for the API call results\n      // kinda works but for the wrong reasons (wont work for slower API resposes)\n      // https://github.com/Ameelio/connect-doc-client/issues/74\n      (async () => {\n        await Promise.allSettled([\n          dispatch(fetchContacts()),\n          dispatch(fetchStaff()),\n          dispatch(fetchInmates()),\n          dispatch(fetchConnections()),\n          dispatch(fetchKiosks()),\n          dispatch(fetchGroups()),\n          dispatch(\n            fetchCalls({\n              scheduledStart: {\n                rangeStart: startOfMonth(new Date()).getTime(),\n                rangeEnd: endOfMonth(new Date()).getTime(),\n              },\n              limit: 500,\n            })\n          ),\n        ]);\n      })().then(() => setIsInitingData(false));\n    }\n  }, [selected, dispatch]);\n\n  return (\n    <ConnectedRouter history={history}>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        {selected && (\n          <Menu\n            user={session.user}\n            isLoggedIn={isAuthenticated}\n            logout={logout}\n            selected={selected}\n            facilities={facilities}\n            select={(facility: Facility) =>\n              dispatch(selectActiveFacility(facility))\n            }\n            liveCallsCount={liveCallsCount}\n            requestsCount={requestsCount}\n            callRequestsCount={pendingCallsCount}\n          />\n        )}\n        <Layout>\n          {(isInitingData && isAuthenticated) ||\n          session.status === \"loading\" ? (\n            <Loader />\n          ) : (\n            <Switch>\n              <Route exact path={LOGIN_PATH} component={Login}></Route>\n              {ROUTES.map((route) => (\n                <ProtectedRoute\n                  exact\n                  {...defaultProtectedRouteProps}\n                  path={route.path}\n                  component={route.component}\n                  key={route.label}\n                ></ProtectedRoute>\n              ))}\n            </Switch>\n          )}\n        </Layout>\n      </Layout>\n      <Modals />\n    </ConnectedRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { history, Store } from \"./redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App history={history} />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}